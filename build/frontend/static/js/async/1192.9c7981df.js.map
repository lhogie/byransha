{"version":3,"file":"static/js/async/1192.9c7981df.js","sources":["webpack://login_page/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-ANTBXLJU.mjs","webpack://login_page/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-NRVI72HA.mjs","webpack://login_page/./node_modules/mermaid/dist/chunks/mermaid.core/diagram-4IRLE6MV.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  __name,\n  configureSvgSize,\n  log\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/rendering-util/setupViewPortForSVG.ts\nvar setupViewPortForSVG = /* @__PURE__ */ __name((svg, padding, cssDiagram, useMaxWidth) => {\n  svg.attr(\"class\", cssDiagram);\n  const { width, height, x, y } = calculateDimensionsWithPadding(svg, padding);\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const viewBox = createViewBox(x, y, width, height, padding);\n  svg.attr(\"viewBox\", viewBox);\n  log.debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar calculateDimensionsWithPadding = /* @__PURE__ */ __name((svg, padding) => {\n  const bounds = svg.node()?.getBBox() || { width: 0, height: 0, x: 0, y: 0 };\n  return {\n    width: bounds.width + padding * 2,\n    height: bounds.height + padding * 2,\n    x: bounds.x,\n    y: bounds.y\n  };\n}, \"calculateDimensionsWithPadding\");\nvar createViewBox = /* @__PURE__ */ __name((x, y, width, height, padding) => {\n  return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\n\nexport {\n  setupViewPortForSVG\n};\n","import {\n  setupViewPortForSVG\n} from \"./chunk-NRVI72HA.mjs\";\nimport {\n  isLabelStyle,\n  styles2String\n} from \"./chunk-7RNWAQOT.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-ANTBXLJU.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-U37J5Y7L.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-T57MJCP2.mjs\";\nimport {\n  __name,\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/diagrams/treemap/db.ts\nvar TreeMapDB = class {\n  constructor() {\n    this.nodes = [];\n    this.levels = /* @__PURE__ */ new Map();\n    this.outerNodes = [];\n    this.classes = /* @__PURE__ */ new Map();\n    this.setAccTitle = setAccTitle;\n    this.getAccTitle = getAccTitle;\n    this.setDiagramTitle = setDiagramTitle;\n    this.getDiagramTitle = getDiagramTitle;\n    this.getAccDescription = getAccDescription;\n    this.setAccDescription = setAccDescription;\n  }\n  static {\n    __name(this, \"TreeMapDB\");\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getConfig() {\n    const defaultConfig = defaultConfig_default;\n    const userConfig = getConfig();\n    return cleanAndMerge({\n      ...defaultConfig.treemap,\n      ...userConfig.treemap ?? {}\n    });\n  }\n  addNode(node, level) {\n    this.nodes.push(node);\n    this.levels.set(node, level);\n    if (level === 0) {\n      this.outerNodes.push(node);\n      this.root ??= node;\n    }\n  }\n  getRoot() {\n    return { name: \"\", children: this.outerNodes };\n  }\n  addClass(id, _style) {\n    const styleClass = this.classes.get(id) ?? { id, styles: [], textStyles: [] };\n    const styles = _style.replace(/\\\\,/g, \"\\xA7\\xA7\\xA7\").replace(/,/g, \";\").replace(/§§§/g, \",\").split(\";\");\n    if (styles) {\n      styles.forEach((s) => {\n        if (isLabelStyle(s)) {\n          if (styleClass?.textStyles) {\n            styleClass.textStyles.push(s);\n          } else {\n            styleClass.textStyles = [s];\n          }\n        }\n        if (styleClass?.styles) {\n          styleClass.styles.push(s);\n        } else {\n          styleClass.styles = [s];\n        }\n      });\n    }\n    this.classes.set(id, styleClass);\n  }\n  getClasses() {\n    return this.classes;\n  }\n  getStylesForClass(classSelector) {\n    return this.classes.get(classSelector)?.styles ?? [];\n  }\n  clear() {\n    clear();\n    this.nodes = [];\n    this.levels = /* @__PURE__ */ new Map();\n    this.outerNodes = [];\n    this.classes = /* @__PURE__ */ new Map();\n    this.root = void 0;\n  }\n};\n\n// src/diagrams/treemap/parser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/treemap/utils.ts\nfunction buildHierarchy(items) {\n  if (!items.length) {\n    return [];\n  }\n  const root = [];\n  const stack = [];\n  items.forEach((item) => {\n    const node = {\n      name: item.name,\n      children: item.type === \"Leaf\" ? void 0 : []\n    };\n    node.classSelector = item?.classSelector;\n    if (item?.cssCompiledStyles) {\n      node.cssCompiledStyles = [item.cssCompiledStyles];\n    }\n    if (item.type === \"Leaf\" && item.value !== void 0) {\n      node.value = item.value;\n    }\n    while (stack.length > 0 && stack[stack.length - 1].level >= item.level) {\n      stack.pop();\n    }\n    if (stack.length === 0) {\n      root.push(node);\n    } else {\n      const parent = stack[stack.length - 1].node;\n      if (parent.children) {\n        parent.children.push(node);\n      } else {\n        parent.children = [node];\n      }\n    }\n    if (item.type !== \"Leaf\") {\n      stack.push({ node, level: item.level });\n    }\n  });\n  return root;\n}\n__name(buildHierarchy, \"buildHierarchy\");\n\n// src/diagrams/treemap/parser.ts\nvar populate = /* @__PURE__ */ __name((ast, db) => {\n  populateCommonDb(ast, db);\n  const items = [];\n  for (const row of ast.TreemapRows ?? []) {\n    if (row.$type === \"ClassDefStatement\") {\n      db.addClass(row.className ?? \"\", row.styleText ?? \"\");\n    }\n  }\n  for (const row of ast.TreemapRows ?? []) {\n    const item = row.item;\n    if (!item) {\n      continue;\n    }\n    const level = row.indent ? parseInt(row.indent) : 0;\n    const name = getItemName(item);\n    const styles = item.classSelector ? db.getStylesForClass(item.classSelector) : [];\n    const cssCompiledStyles = styles.length > 0 ? styles.join(\";\") : void 0;\n    const itemData = {\n      level,\n      name,\n      type: item.$type,\n      value: item.value,\n      classSelector: item.classSelector,\n      cssCompiledStyles\n    };\n    items.push(itemData);\n  }\n  const hierarchyNodes = buildHierarchy(items);\n  const addNodesRecursively = /* @__PURE__ */ __name((nodes, level) => {\n    for (const node of nodes) {\n      db.addNode(node, level);\n      if (node.children && node.children.length > 0) {\n        addNodesRecursively(node.children, level + 1);\n      }\n    }\n  }, \"addNodesRecursively\");\n  addNodesRecursively(hierarchyNodes, 0);\n}, \"populate\");\nvar getItemName = /* @__PURE__ */ __name((item) => {\n  return item.name ? String(item.name) : \"\";\n}, \"getItemName\");\nvar parser = {\n  // @ts-expect-error - TreeMapDB is not assignable to DiagramDB\n  parser: { yy: void 0 },\n  parse: /* @__PURE__ */ __name(async (text) => {\n    try {\n      const parseFunc = parse;\n      const ast = await parseFunc(\"treemap\", text);\n      log.debug(\"Treemap AST:\", ast);\n      const db = parser.parser?.yy;\n      if (!(db instanceof TreeMapDB)) {\n        throw new Error(\n          \"parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.\"\n        );\n      }\n      populate(ast, db);\n    } catch (error) {\n      log.error(\"Error parsing treemap:\", error);\n      throw error;\n    }\n  }, \"parse\")\n};\n\n// src/diagrams/treemap/renderer.ts\nimport { scaleOrdinal, treemap, hierarchy, format, select } from \"d3\";\nvar DEFAULT_INNER_PADDING = 10;\nvar SECTION_INNER_PADDING = 10;\nvar SECTION_HEADER_HEIGHT = 25;\nvar draw = /* @__PURE__ */ __name((_text, id, _version, diagram2) => {\n  const treemapDb = diagram2.db;\n  const config = treemapDb.getConfig();\n  const treemapInnerPadding = config.padding ?? DEFAULT_INNER_PADDING;\n  const title = treemapDb.getDiagramTitle();\n  const root = treemapDb.getRoot();\n  const { themeVariables } = getConfig();\n  if (!root) {\n    return;\n  }\n  const titleHeight = title ? 30 : 0;\n  const svg = selectSvgElement(id);\n  const width = config.nodeWidth ? config.nodeWidth * SECTION_INNER_PADDING : 960;\n  const height = config.nodeHeight ? config.nodeHeight * SECTION_INNER_PADDING : 500;\n  const svgWidth = width;\n  const svgHeight = height + titleHeight;\n  svg.attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n  let valueFormat;\n  try {\n    const formatStr = config.valueFormat || \",\";\n    if (formatStr === \"$0,0\") {\n      valueFormat = /* @__PURE__ */ __name((value) => \"$\" + format(\",\")(value), \"valueFormat\");\n    } else if (formatStr.startsWith(\"$\") && formatStr.includes(\",\")) {\n      const precision = /\\.\\d+/.exec(formatStr);\n      const precisionStr = precision ? precision[0] : \"\";\n      valueFormat = /* @__PURE__ */ __name((value) => \"$\" + format(\",\" + precisionStr)(value), \"valueFormat\");\n    } else if (formatStr.startsWith(\"$\")) {\n      const restOfFormat = formatStr.substring(1);\n      valueFormat = /* @__PURE__ */ __name((value) => \"$\" + format(restOfFormat || \"\")(value), \"valueFormat\");\n    } else {\n      valueFormat = format(formatStr);\n    }\n  } catch (error) {\n    log.error(\"Error creating format function:\", error);\n    valueFormat = format(\",\");\n  }\n  const colorScale = scaleOrdinal().range([\n    \"transparent\",\n    themeVariables.cScale0,\n    themeVariables.cScale1,\n    themeVariables.cScale2,\n    themeVariables.cScale3,\n    themeVariables.cScale4,\n    themeVariables.cScale5,\n    themeVariables.cScale6,\n    themeVariables.cScale7,\n    themeVariables.cScale8,\n    themeVariables.cScale9,\n    themeVariables.cScale10,\n    themeVariables.cScale11\n  ]);\n  const colorScalePeer = scaleOrdinal().range([\n    \"transparent\",\n    themeVariables.cScalePeer0,\n    themeVariables.cScalePeer1,\n    themeVariables.cScalePeer2,\n    themeVariables.cScalePeer3,\n    themeVariables.cScalePeer4,\n    themeVariables.cScalePeer5,\n    themeVariables.cScalePeer6,\n    themeVariables.cScalePeer7,\n    themeVariables.cScalePeer8,\n    themeVariables.cScalePeer9,\n    themeVariables.cScalePeer10,\n    themeVariables.cScalePeer11\n  ]);\n  const colorScaleLabel = scaleOrdinal().range([\n    themeVariables.cScaleLabel0,\n    themeVariables.cScaleLabel1,\n    themeVariables.cScaleLabel2,\n    themeVariables.cScaleLabel3,\n    themeVariables.cScaleLabel4,\n    themeVariables.cScaleLabel5,\n    themeVariables.cScaleLabel6,\n    themeVariables.cScaleLabel7,\n    themeVariables.cScaleLabel8,\n    themeVariables.cScaleLabel9,\n    themeVariables.cScaleLabel10,\n    themeVariables.cScaleLabel11\n  ]);\n  if (title) {\n    svg.append(\"text\").attr(\"x\", svgWidth / 2).attr(\"y\", titleHeight / 2).attr(\"class\", \"treemapTitle\").attr(\"text-anchor\", \"middle\").attr(\"dominant-baseline\", \"middle\").text(title);\n  }\n  const g = svg.append(\"g\").attr(\"transform\", `translate(0, ${titleHeight})`).attr(\"class\", \"treemapContainer\");\n  const hierarchyRoot = hierarchy(root).sum((d) => d.value ?? 0).sort((a, b) => (b.value ?? 0) - (a.value ?? 0));\n  const treemapLayout = treemap().size([width, height]).paddingTop(\n    (d) => d.children && d.children.length > 0 ? SECTION_HEADER_HEIGHT + SECTION_INNER_PADDING : 0\n  ).paddingInner(treemapInnerPadding).paddingLeft((d) => d.children && d.children.length > 0 ? SECTION_INNER_PADDING : 0).paddingRight((d) => d.children && d.children.length > 0 ? SECTION_INNER_PADDING : 0).paddingBottom((d) => d.children && d.children.length > 0 ? SECTION_INNER_PADDING : 0).round(true);\n  const treemapData = treemapLayout(hierarchyRoot);\n  const branchNodes = treemapData.descendants().filter((d) => d.children && d.children.length > 0);\n  const sections = g.selectAll(\".treemapSection\").data(branchNodes).enter().append(\"g\").attr(\"class\", \"treemapSection\").attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\n  sections.append(\"rect\").attr(\"width\", (d) => d.x1 - d.x0).attr(\"height\", SECTION_HEADER_HEIGHT).attr(\"class\", \"treemapSectionHeader\").attr(\"fill\", \"none\").attr(\"fill-opacity\", 0.6).attr(\"stroke-width\", 0.6).attr(\"style\", (d) => {\n    if (d.depth === 0) {\n      return \"display: none;\";\n    }\n    return \"\";\n  });\n  sections.append(\"clipPath\").attr(\"id\", (_d, i) => `clip-section-${id}-${i}`).append(\"rect\").attr(\"width\", (d) => Math.max(0, d.x1 - d.x0 - 12)).attr(\"height\", SECTION_HEADER_HEIGHT);\n  sections.append(\"rect\").attr(\"width\", (d) => d.x1 - d.x0).attr(\"height\", (d) => d.y1 - d.y0).attr(\"class\", (_d, i) => {\n    return `treemapSection section${i}`;\n  }).attr(\"fill\", (d) => colorScale(d.data.name)).attr(\"fill-opacity\", 0.6).attr(\"stroke\", (d) => colorScalePeer(d.data.name)).attr(\"stroke-width\", 2).attr(\"stroke-opacity\", 0.4).attr(\"style\", (d) => {\n    if (d.depth === 0) {\n      return \"display: none;\";\n    }\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return styles.nodeStyles + \";\" + styles.borderStyles.join(\";\");\n  });\n  sections.append(\"text\").attr(\"class\", \"treemapSectionLabel\").attr(\"x\", 6).attr(\"y\", SECTION_HEADER_HEIGHT / 2).attr(\"dominant-baseline\", \"middle\").text((d) => d.depth === 0 ? \"\" : d.data.name).attr(\"font-weight\", \"bold\").attr(\"style\", (d) => {\n    if (d.depth === 0) {\n      return \"display: none;\";\n    }\n    const labelStyles = \"dominant-baseline: middle; font-size: 12px; fill:\" + colorScaleLabel(d.data.name) + \"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\";\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n  }).each(function(d) {\n    if (d.depth === 0) {\n      return;\n    }\n    const self = select(this);\n    const originalText = d.data.name;\n    self.text(originalText);\n    const totalHeaderWidth = d.x1 - d.x0;\n    const labelXPosition = 6;\n    let spaceForTextContent;\n    if (config.showValues !== false && d.value) {\n      const valueEndsAtXRelative = totalHeaderWidth - 10;\n      const estimatedValueTextActualWidth = 30;\n      const gapBetweenLabelAndValue = 10;\n      const labelMustEndBeforeX = valueEndsAtXRelative - estimatedValueTextActualWidth - gapBetweenLabelAndValue;\n      spaceForTextContent = labelMustEndBeforeX - labelXPosition;\n    } else {\n      const labelOwnRightPadding = 6;\n      spaceForTextContent = totalHeaderWidth - labelXPosition - labelOwnRightPadding;\n    }\n    const minimumWidthToDisplay = 15;\n    const actualAvailableWidth = Math.max(minimumWidthToDisplay, spaceForTextContent);\n    const textNode = self.node();\n    const currentTextContentLength = textNode.getComputedTextLength();\n    if (currentTextContentLength > actualAvailableWidth) {\n      const ellipsis = \"...\";\n      let currentTruncatedText = originalText;\n      while (currentTruncatedText.length > 0) {\n        currentTruncatedText = originalText.substring(0, currentTruncatedText.length - 1);\n        if (currentTruncatedText.length === 0) {\n          self.text(ellipsis);\n          if (textNode.getComputedTextLength() > actualAvailableWidth) {\n            self.text(\"\");\n          }\n          break;\n        }\n        self.text(currentTruncatedText + ellipsis);\n        if (textNode.getComputedTextLength() <= actualAvailableWidth) {\n          break;\n        }\n      }\n    }\n  });\n  if (config.showValues !== false) {\n    sections.append(\"text\").attr(\"class\", \"treemapSectionValue\").attr(\"x\", (d) => d.x1 - d.x0 - 10).attr(\"y\", SECTION_HEADER_HEIGHT / 2).attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"middle\").text((d) => d.value ? valueFormat(d.value) : \"\").attr(\"font-style\", \"italic\").attr(\"style\", (d) => {\n      if (d.depth === 0) {\n        return \"display: none;\";\n      }\n      const labelStyles = \"text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:\" + colorScaleLabel(d.data.name) + \"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\";\n      const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n      return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n    });\n  }\n  const leafNodes = treemapData.leaves();\n  const cell = g.selectAll(\".treemapLeafGroup\").data(leafNodes).enter().append(\"g\").attr(\"class\", (d, i) => {\n    return `treemapNode treemapLeafGroup leaf${i}${d.data.classSelector ? ` ${d.data.classSelector}` : \"\"}x`;\n  }).attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\n  cell.append(\"rect\").attr(\"width\", (d) => d.x1 - d.x0).attr(\"height\", (d) => d.y1 - d.y0).attr(\"class\", \"treemapLeaf\").attr(\"fill\", (d) => {\n    return d.parent ? colorScale(d.parent.data.name) : colorScale(d.data.name);\n  }).attr(\"style\", (d) => {\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return styles.nodeStyles;\n  }).attr(\"fill-opacity\", 0.3).attr(\"stroke\", (d) => {\n    return d.parent ? colorScale(d.parent.data.name) : colorScale(d.data.name);\n  }).attr(\"stroke-width\", 3);\n  cell.append(\"clipPath\").attr(\"id\", (_d, i) => `clip-${id}-${i}`).append(\"rect\").attr(\"width\", (d) => Math.max(0, d.x1 - d.x0 - 4)).attr(\"height\", (d) => Math.max(0, d.y1 - d.y0 - 4));\n  const leafLabels = cell.append(\"text\").attr(\"class\", \"treemapLabel\").attr(\"x\", (d) => (d.x1 - d.x0) / 2).attr(\"y\", (d) => (d.y1 - d.y0) / 2).attr(\"style\", (d) => {\n    const labelStyles = \"text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:\" + colorScaleLabel(d.data.name) + \";\";\n    const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n    return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n  }).attr(\"clip-path\", (_d, i) => `url(#clip-${id}-${i})`).text((d) => d.data.name);\n  leafLabels.each(function(d) {\n    const self = select(this);\n    const nodeWidth = d.x1 - d.x0;\n    const nodeHeight = d.y1 - d.y0;\n    const textNode = self.node();\n    const padding = 4;\n    const availableWidth = nodeWidth - 2 * padding;\n    const availableHeight = nodeHeight - 2 * padding;\n    if (availableWidth < 10 || availableHeight < 10) {\n      self.style(\"display\", \"none\");\n      return;\n    }\n    let currentLabelFontSize = parseInt(self.style(\"font-size\"), 10);\n    const minLabelFontSize = 8;\n    const originalValueRelFontSize = 28;\n    const valueScaleFactor = 0.6;\n    const minValueFontSize = 6;\n    const spacingBetweenLabelAndValue = 2;\n    while (textNode.getComputedTextLength() > availableWidth && currentLabelFontSize > minLabelFontSize) {\n      currentLabelFontSize--;\n      self.style(\"font-size\", `${currentLabelFontSize}px`);\n    }\n    let prospectiveValueFontSize = Math.max(\n      minValueFontSize,\n      Math.min(originalValueRelFontSize, Math.round(currentLabelFontSize * valueScaleFactor))\n    );\n    let combinedHeight = currentLabelFontSize + spacingBetweenLabelAndValue + prospectiveValueFontSize;\n    while (combinedHeight > availableHeight && currentLabelFontSize > minLabelFontSize) {\n      currentLabelFontSize--;\n      prospectiveValueFontSize = Math.max(\n        minValueFontSize,\n        Math.min(originalValueRelFontSize, Math.round(currentLabelFontSize * valueScaleFactor))\n      );\n      if (prospectiveValueFontSize < minValueFontSize && currentLabelFontSize === minLabelFontSize) {\n        break;\n      }\n      self.style(\"font-size\", `${currentLabelFontSize}px`);\n      combinedHeight = currentLabelFontSize + spacingBetweenLabelAndValue + prospectiveValueFontSize;\n      if (prospectiveValueFontSize <= minValueFontSize && combinedHeight > availableHeight) {\n      }\n    }\n    self.style(\"font-size\", `${currentLabelFontSize}px`);\n    if (textNode.getComputedTextLength() > availableWidth || currentLabelFontSize < minLabelFontSize || availableHeight < currentLabelFontSize) {\n      self.style(\"display\", \"none\");\n    }\n  });\n  if (config.showValues !== false) {\n    const leafValues = cell.append(\"text\").attr(\"class\", \"treemapValue\").attr(\"x\", (d) => (d.x1 - d.x0) / 2).attr(\"y\", function(d) {\n      return (d.y1 - d.y0) / 2;\n    }).attr(\"style\", (d) => {\n      const labelStyles = \"text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:\" + colorScaleLabel(d.data.name) + \";\";\n      const styles = styles2String({ cssCompiledStyles: d.data.cssCompiledStyles });\n      return labelStyles + styles.labelStyles.replace(\"color:\", \"fill:\");\n    }).attr(\"clip-path\", (_d, i) => `url(#clip-${id}-${i})`).text((d) => d.value ? valueFormat(d.value) : \"\");\n    leafValues.each(function(d) {\n      const valueTextElement = select(this);\n      const parentCellNode = this.parentNode;\n      if (!parentCellNode) {\n        valueTextElement.style(\"display\", \"none\");\n        return;\n      }\n      const labelElement = select(parentCellNode).select(\".treemapLabel\");\n      if (labelElement.empty() || labelElement.style(\"display\") === \"none\") {\n        valueTextElement.style(\"display\", \"none\");\n        return;\n      }\n      const finalLabelFontSize = parseFloat(labelElement.style(\"font-size\"));\n      const originalValueFontSize = 28;\n      const valueScaleFactor = 0.6;\n      const minValueFontSize = 6;\n      const spacingBetweenLabelAndValue = 2;\n      const actualValueFontSize = Math.max(\n        minValueFontSize,\n        Math.min(originalValueFontSize, Math.round(finalLabelFontSize * valueScaleFactor))\n      );\n      valueTextElement.style(\"font-size\", `${actualValueFontSize}px`);\n      const labelCenterY = (d.y1 - d.y0) / 2;\n      const valueTopActualY = labelCenterY + finalLabelFontSize / 2 + spacingBetweenLabelAndValue;\n      valueTextElement.attr(\"y\", valueTopActualY);\n      const nodeWidth = d.x1 - d.x0;\n      const nodeTotalHeight = d.y1 - d.y0;\n      const cellBottomPadding = 4;\n      const maxValueBottomY = nodeTotalHeight - cellBottomPadding;\n      const availableWidthForValue = nodeWidth - 2 * 4;\n      if (valueTextElement.node().getComputedTextLength() > availableWidthForValue || valueTopActualY + actualValueFontSize > maxValueBottomY || actualValueFontSize < minValueFontSize) {\n        valueTextElement.style(\"display\", \"none\");\n      } else {\n        valueTextElement.style(\"display\", null);\n      }\n    });\n  }\n  const diagramPadding = config.diagramPadding ?? 8;\n  setupViewPortForSVG(svg, diagramPadding, \"flowchart\", config?.useMaxWidth || false);\n}, \"draw\");\nvar getClasses = /* @__PURE__ */ __name(function(_text, diagramObj) {\n  return diagramObj.db.getClasses();\n}, \"getClasses\");\nvar renderer = { draw, getClasses };\n\n// src/diagrams/treemap/styles.ts\nvar defaultTreemapStyleOptions = {\n  sectionStrokeColor: \"black\",\n  sectionStrokeWidth: \"1\",\n  sectionFillColor: \"#efefef\",\n  leafStrokeColor: \"black\",\n  leafStrokeWidth: \"1\",\n  leafFillColor: \"#efefef\",\n  labelColor: \"black\",\n  labelFontSize: \"12px\",\n  valueFontSize: \"10px\",\n  valueColor: \"black\",\n  titleColor: \"black\",\n  titleFontSize: \"14px\"\n};\nvar getStyles = /* @__PURE__ */ __name(({\n  treemap: treemap2\n} = {}) => {\n  const options = cleanAndMerge(defaultTreemapStyleOptions, treemap2);\n  return `\n  .treemapNode.section {\n    stroke: ${options.sectionStrokeColor};\n    stroke-width: ${options.sectionStrokeWidth};\n    fill: ${options.sectionFillColor};\n  }\n  .treemapNode.leaf {\n    stroke: ${options.leafStrokeColor};\n    stroke-width: ${options.leafStrokeWidth};\n    fill: ${options.leafFillColor};\n  }\n  .treemapLabel {\n    fill: ${options.labelColor};\n    font-size: ${options.labelFontSize};\n  }\n  .treemapValue {\n    fill: ${options.valueColor};\n    font-size: ${options.valueFontSize};\n  }\n  .treemapTitle {\n    fill: ${options.titleColor};\n    font-size: ${options.titleFontSize};\n  }\n  `;\n}, \"getStyles\");\nvar styles_default = getStyles;\n\n// src/diagrams/treemap/diagram.ts\nvar diagram = {\n  parser,\n  get db() {\n    return new TreeMapDB();\n  },\n  renderer,\n  styles: styles_default\n};\nexport {\n  diagram\n};\n"],"names":["s","l","Map","parseInt","String","a","Error","e","Math","c","parseFloat","n","g"],"mappings":"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"}