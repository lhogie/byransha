{"version":3,"file":"static/js/async/1264.cd97ff9a.js","sources":["webpack://login_page/./src/Components/View/ModalComponent.tsx","webpack://login_page/./src/global/CustomCodeBlock.tsx","webpack://login_page/./src/Components/View/BNodeNavigatorDisplay.tsx","webpack://login_page/./src/Components/View/CytoscapeGraph.tsx","webpack://login_page/./src/Components/View/ChartDisplay.tsx","webpack://login_page/./src/Components/View/ClassAttributeFieldDisplay.tsx","webpack://login_page/./src/Components/View/MermaidDisplay.tsx","webpack://login_page/./src/Components/View/ContentDisplay.tsx","webpack://login_page/./src/Components/View/ViewContent.tsx","webpack://login_page/./src/Components/Common/View.tsx","webpack://login_page/./src/global/useTitle.tsx"],"sourcesContent":["import CloseIcon from \"@mui/icons-material/Close\";\nimport CodeIcon from \"@mui/icons-material/Code\";\nimport {\n\tBox,\n\tCircularProgress,\n\tIconButton,\n\tModal,\n\tTooltip,\n\tTypography,\n} from \"@mui/material\";\nimport {\n\ttype MouseEventHandler,\n\tSuspense,\n\tuseCallback,\n\tuseTransition,\n} from \"react\";\nimport { JsonView } from \"react-json-view-lite\";\n\nconst modalStyle = {\n\tposition: \"absolute\",\n\ttop: \"50%\",\n\tleft: \"50%\",\n\ttransform: \"translate(-50%, -50%)\",\n\twidth: \"80%\",\n\tmaxWidth: \"800px\",\n\tmaxHeight: \"80vh\",\n\tbgcolor: \"background.paper\",\n\tborder: \"2px solid #000\",\n\tboxShadow: 24,\n\tp: 4,\n\tdisplay: \"flex\",\n\tflexDirection: \"column\",\n\toverflow: \"hidden\",\n};\n\nconst modalHeaderStyle = {\n\tdisplay: \"flex\",\n\tjustifyContent: \"space-between\",\n\talignItems: \"center\",\n\tmb: 2,\n};\n\nconst modalContentStyle = {\n\toverflowY: \"auto\",\n\tmaxHeight: \"calc(80vh - 100px)\",\n\twidth: \"100%\",\n\tscrollbarWidth: \"thin\",\n\tscrollbarColor: \"#888 #f1f1f1\",\n\t\"&::-webkit-scrollbar\": {\n\t\twidth: \"8px\",\n\t\theight: \"8px\",\n\t},\n\t\"&::-webkit-scrollbar-track\": {\n\t\tbackground: \"#f1f1f1\",\n\t\tborderRadius: \"4px\",\n\t},\n\t\"&::-webkit-scrollbar-thumb\": {\n\t\tbackground: \"#888\",\n\t\tborderRadius: \"4px\",\n\t},\n\t\"&::-webkit-scrollbar-thumb:hover\": {\n\t\tbackground: \"#555\",\n\t},\n};\n\ninterface ModalComponentProps {\n\tdataForModal: any;\n\tisModalOpen: boolean;\n\tsetIsModalOpen: (isOpen: boolean) => void;\n}\n\nexport const ModalComponent = ({\n\tdataForModal,\n\tisModalOpen,\n\tsetIsModalOpen,\n}: ModalComponentProps) => {\n\tconst [_isPending, startTransition] = useTransition();\n\n\tconst handleOpenModal: MouseEventHandler<HTMLButtonElement> = useCallback(\n\t\t(event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tstartTransition(() => {\n\t\t\t\tsetIsModalOpen(true);\n\t\t\t});\n\t\t},\n\t\t[setIsModalOpen],\n\t);\n\n\tconst handleCloseModal: MouseEventHandler<HTMLButtonElement> = useCallback(\n\t\t(event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tstartTransition(() => {\n\t\t\t\tsetIsModalOpen(false);\n\t\t\t});\n\t\t},\n\t\t[setIsModalOpen],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip title=\"Show Raw Backend Response\">\n\t\t\t\t<span>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={handleOpenModal}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 5,\n\t\t\t\t\t\t\tright: 5,\n\t\t\t\t\t\t\tzIndex: 10,\n\t\t\t\t\t\t\twidth: 30,\n\t\t\t\t\t\t\theight: 30,\n\t\t\t\t\t\t\tcolor: \"primary.main\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\taria-label=\"Show raw JSON\"\n\t\t\t\t\t\tdisabled={dataForModal === null || dataForModal === undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CodeIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</span>\n\t\t\t</Tooltip>\n\t\t\t<Modal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={handleCloseModal}\n\t\t\t\taria-labelledby=\"raw-json-modal-title\"\n\t\t\t\taria-describedby=\"raw-json-modal-description\"\n\t\t\t>\n\t\t\t\t<Box sx={modalStyle}>\n\t\t\t\t\t<Box sx={modalHeaderStyle}>\n\t\t\t\t\t\t<Typography id=\"raw-json-modal-title\" variant=\"h6\" component=\"h2\">\n\t\t\t\t\t\t\tRaw Backend Response\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<IconButton onClick={handleCloseModal} aria-label=\"close\">\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box sx={modalContentStyle}>\n\t\t\t\t\t\t{dataForModal ? (\n\t\t\t\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t\t\t\t<JsonView data={dataForModal} />\n\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>No raw data available to display.</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n","const CustomCodeBlock = ({\n\tcode,\n\tlanguage,\n}: {\n\tcode: string;\n\tlanguage: string;\n}) => {\n\treturn (\n\t\t<code\n\t\t\tstyle={{ whiteSpace: \"pre-wrap\", padding: \"10px\", borderRadius: \"5px\" }}\n\t\t>\n\t\t\t{code.trim()}\n\t\t</code>\n\t);\n};\n\nexport default CustomCodeBlock;\n","import { Box, Button } from \"@mui/material\";\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\nimport { useCallback, useRef } from \"react\";\n\ninterface BNodeNavigatorDisplayProps {\n\tcontent: any;\n\tjumpToNode: (nodeId: number | string) => void;\n}\n\ninterface VirtualNavigatorProps {\n\tallNodes: Array<{\n\t\tkey: string;\n\t\tid: number | string;\n\t\ttype: \"in\" | \"out\";\n\t}>;\n\thandleButtonClick: (\n\t\tevent: React.MouseEvent<HTMLButtonElement>,\n\t\tnodeId: number | string,\n\t) => void;\n}\n\nconst VirtualNavigator = ({\n\tallNodes,\n\thandleButtonClick,\n}: VirtualNavigatorProps) => {\n\t\"use no memo\";\n\tconst parentRef = useRef<HTMLDivElement>(null);\n\tconst rowVirtualizer = useVirtualizer({\n\t\tcount: allNodes.length,\n\t\testimateSize: () => 56,\n\t\tgetScrollElement: () => parentRef.current,\n\t\toverscan: 10,\n\t});\n\n\treturn (\n\t\t<Box\n\t\t\tref={parentRef}\n\t\t\tsx={{\n\t\t\t\theight: 400,\n\t\t\t\toverflowY: \"auto\",\n\t\t\t\tposition: \"relative\",\n\t\t\t\tborder: \"1px solid #e0e0e0\",\n\t\t\t\tborderRadius: 1,\n\t\t\t\tp: 1,\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\theight: `${rowVirtualizer.getTotalSize()}px`,\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{rowVirtualizer.getVirtualItems().map((virtualItem) => {\n\t\t\t\t\tconst node = allNodes[virtualItem.index];\n\t\t\t\t\tif (!node) return null;\n\n\t\t\t\t\tconst isInNode = node.type === \"in\";\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tkey={virtualItem.key}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\theight: `${virtualItem.size}px`,\n\t\t\t\t\t\t\t\ttransform: `translateY(${virtualItem.start}px)`,\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\tpx: 1,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={(e) => handleButtonClick(e, node.id)}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tbgcolor: isInNode ? \"#3949ab\" : \"#00897b\",\n\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\tbgcolor: isInNode ? \"#5c6bc0\" : \"#26a69a\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{node.key} ({node.id})\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport const BNodeNavigatorDisplay = ({\n\tcontent,\n\tjumpToNode,\n}: BNodeNavigatorDisplayProps) => {\n\tconst handleButtonClick = useCallback(\n\t\t(event: React.MouseEvent<HTMLButtonElement>, nodeId: number | string) => {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tjumpToNode(nodeId);\n\t\t},\n\t\t[jumpToNode],\n\t);\n\n\tconst inNodes = Object.keys(content.ins || {});\n\tconst outNodes = Object.keys(content.outs || {});\n\tconst allNodes = [\n\t\t...inNodes.map((node) => ({\n\t\t\tkey: node,\n\t\t\tid: content.ins[node],\n\t\t\ttype: \"in\" as const,\n\t\t})),\n\t\t...outNodes.map((node) => ({\n\t\t\tkey: node,\n\t\t\tid: content.outs[node],\n\t\t\ttype: \"out\" as const,\n\t\t})),\n\t];\n\n\tif (allNodes.length <= 50) {\n\t\treturn (\n\t\t\t<Box sx={{ p: 1 }}>\n\t\t\t\t<Box sx={{ mb: 2 }}>\n\t\t\t\t\t{inNodes.map((inNode) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={inNode}\n\t\t\t\t\t\t\tonClick={(e) => handleButtonClick(e, content.ins[inNode])}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tbgcolor: \"#3949ab\",\n\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\tmr: 1,\n\t\t\t\t\t\t\t\tmb: 1,\n\t\t\t\t\t\t\t\t\"&:hover\": { bgcolor: \"#5c6bc0\" },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{inNode} ({content.ins[inNode]})\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t\t<Box sx={{ paddingY: \"10px\" }}>\n\t\t\t\t\t{outNodes.map((outNode) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={outNode}\n\t\t\t\t\t\t\tonClick={(e) => handleButtonClick(e, content.outs[outNode])}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tbgcolor: \"#00897b\",\n\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\tmr: 1,\n\t\t\t\t\t\t\t\tmb: 1,\n\t\t\t\t\t\t\t\t\"&:hover\": { bgcolor: \"#26a69a\" },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{outNode} ({content.outs[outNode]})\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\treturn (\n\t\t<VirtualNavigator\n\t\t\tallNodes={allNodes}\n\t\t\thandleButtonClick={handleButtonClick}\n\t\t/>\n\t);\n};\n","import Cytoscape, { type Core, type ElementDefinition } from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\nimport { useCallback, useEffect, useRef } from \"react\";\n\nCytoscape.use(fcose);\n\nexport interface CytoscapeGraphProps {\n\telements: ElementDefinition[];\n\tstyle?: React.CSSProperties;\n\tstylesheet?: any[];\n\tlayout?: any;\n\tonNodeClick?: (node: any, event: any) => void;\n}\n\nexport const CytoscapeGraph = ({\n\telements,\n\tstyle,\n\tstylesheet,\n\tlayout,\n\tonNodeClick,\n}: CytoscapeGraphProps) => {\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst cyRef = useRef<Core | null>(null);\n\n\tconst handleNodeClick = useCallback(\n\t\t(event: any) => {\n\t\t\tconst node = event.target;\n\t\t\tif (onNodeClick) {\n\t\t\t\tonNodeClick({ id: node.id() }, event);\n\t\t\t}\n\t\t},\n\t\t[onNodeClick],\n\t);\n\n\tconst handleNodeMouseOver = useCallback((event: any) => {\n\t\tconst node = event.target;\n\t\tnode.style(\"label\", node.data(\"label\"));\n\t}, []);\n\n\tconst handleNodeMouseOut = useCallback((event: any) => {\n\t\tconst node = event.target;\n\t\tnode.style(\"label\", \"\");\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!containerRef.current) return;\n\n\t\t// Initialize Cytoscape instance\n\t\tconst cy = Cytoscape({\n\t\t\tcontainer: containerRef.current,\n\t\t\telements,\n\t\t\tstyle: stylesheet || [\n\t\t\t\t{\n\t\t\t\t\tselector: \"node\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"background-color\": \"data(color)\",\n\t\t\t\t\t\twidth: \"data(size)\",\n\t\t\t\t\t\theight: \"data(size)\",\n\t\t\t\t\t\t\"text-valign\": \"top\",\n\t\t\t\t\t\t\"text-halign\": \"center\",\n\t\t\t\t\t\t\"text-margin-y\": -5,\n\t\t\t\t\t\t\"font-size\": \"12px\",\n\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\"text-outline-width\": 2,\n\t\t\t\t\t\t\"text-outline-color\": \"#ffffff\",\n\t\t\t\t\t\t\"z-index\": 1,\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: \"edge\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\t\"line-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-shape\": \"triangle\",\n\t\t\t\t\t\t\"curve-style\": \"bezier\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tlayout: layout || {\n\t\t\t\tname: \"fcose\",\n\t\t\t\tanimate: false,\n\t\t\t\tsamplingType: false,\n\t\t\t\tanimationDuration: 1500,\n\t\t\t\tfit: true,\n\t\t\t\tpadding: 30,\n\t\t\t},\n\t\t});\n\n\t\tcyRef.current = cy;\n\n\t\t// Set up event listeners\n\t\tcy.on(\"tap\", \"node\", handleNodeClick);\n\t\tcy.on(\"mouseover\", \"node\", handleNodeMouseOver);\n\t\tcy.on(\"mouseout\", \"node\", handleNodeMouseOut);\n\n\t\t// Cleanup function\n\t\treturn () => {\n\t\t\tif (cyRef.current) {\n\t\t\t\tcyRef.current.destroy();\n\t\t\t\tcyRef.current = null;\n\t\t\t}\n\t\t};\n\t}, [\n\t\telements,\n\t\tstylesheet,\n\t\tlayout,\n\t\thandleNodeClick,\n\t\thandleNodeMouseOver,\n\t\thandleNodeMouseOut,\n\t]);\n\n\t// Update elements when they change\n\tuseEffect(() => {\n\t\tif (cyRef.current && elements) {\n\t\t\tcyRef.current.elements().remove();\n\t\t\tcyRef.current.add(elements);\n\n\t\t\t// Re-run layout\n\t\t\tconst layoutOptions = layout || {\n\t\t\t\tname: \"fcose\",\n\t\t\t\tanimate: false,\n\t\t\t\tsamplingType: false,\n\t\t\t\tanimationDuration: 1500,\n\t\t\t\tfit: true,\n\t\t\t\tpadding: 30,\n\t\t\t};\n\n\t\t\tcyRef.current.layout(layoutOptions).run();\n\t\t}\n\t}, [elements, layout]);\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tstyle={{ width: \"100%\", height: \"100%\", ...style }}\n\t\t/>\n\t);\n};\n","import { Box, CircularProgress } from \"@mui/material\";\nimport Cytoscape, { type ElementDefinition } from \"cytoscape\";\nimport fcose, { type FcoseLayoutOptions } from \"cytoscape-fcose\";\nimport ReactECharts from \"echarts-for-react\";\nimport { memo, Suspense, useCallback, useMemo } from \"react\";\nimport { CytoscapeGraph } from \"./CytoscapeGraph\";\n\nCytoscape.use(fcose);\n\nconst MemoizedLineChart = memo(({ data }: { data: any }) => {\n\tconst option = useMemo(\n\t\t() => ({\n\t\t\ttooltip: {\n\t\t\t\ttrigger: \"axis\",\n\t\t\t\tconfine: true,\n\t\t\t},\n\t\t\tcolor: [\n\t\t\t\t\"#5470c6\",\n\t\t\t\t\"#91cc75\",\n\t\t\t\t\"#fac858\",\n\t\t\t\t\"#ee6666\",\n\t\t\t\t\"#73c0de\",\n\t\t\t\t\"#3ba272\",\n\t\t\t\t\"#fc8452\",\n\t\t\t\t\"#9a60b4\",\n\t\t\t\t\"#ea7ccc\",\n\t\t\t],\n\t\t\tlegend: {\n\t\t\t\tdata: data.map((series: any) => series.id),\n\t\t\t\torient: \"vertical\",\n\t\t\t\tright: 10,\n\t\t\t\ttop: \"center\",\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tleft: \"5%\",\n\t\t\t\tright: \"15%\",\n\t\t\t\tbottom: \"10%\",\n\t\t\t\ttop: \"10%\",\n\t\t\t\tcontainLabel: true,\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttype: \"value\",\n\t\t\t\tname: \"X Axis\",\n\t\t\t\tnameLocation: \"middle\",\n\t\t\t\tnameGap: 30,\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttype: \"value\",\n\t\t\t\tname: \"Y Axis\",\n\t\t\t\tmin: -1,\n\t\t\t\tmax: 1,\n\t\t\t\tnameLocation: \"middle\",\n\t\t\t\tnameGap: 50,\n\t\t\t},\n\t\t\tseries: data.map((series: any) => ({\n\t\t\t\tname: series.id,\n\t\t\t\ttype: \"line\",\n\t\t\t\tdata: series.data.map((point: any) => [point.x, point.y]),\n\t\t\t\tshowSymbol: false,\n\t\t\t\tsymbolSize: 8,\n\t\t\t\temphasis: {\n\t\t\t\t\tfocus: \"series\",\n\t\t\t\t},\n\t\t\t\tanimationDuration: 300,\n\t\t\t})),\n\t\t}),\n\t\t[data],\n\t);\n\n\treturn (\n\t\t<ReactECharts\n\t\t\tlazyUpdate\n\t\t\toption={option}\n\t\t\tstyle={{ height: \"100%\", minHeight: \"300px\", width: \"100%\" }}\n\t\t/>\n\t);\n});\n\nconst MemoizedBarChart = memo(\n\t({\n\t\tprettyName,\n\t\tdata,\n\t\tkeys,\n\t}: {\n\t\tprettyName: string | undefined;\n\t\tdata: any;\n\t\tkeys: string[];\n\t}) => {\n\t\tconst option = useMemo(\n\t\t\t() => ({\n\t\t\t\ttooltip: {\n\t\t\t\t\tconfine: true,\n\t\t\t\t\ttrigger: \"axis\",\n\t\t\t\t\taxisPointer: {\n\t\t\t\t\t\ttype: \"shadow\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tcontainLabel: false,\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tdata: keys,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\trotate: 45,\n\t\t\t\t\t\tformatter: (value: string) =>\n\t\t\t\t\t\t\tvalue.length > 10 ? `${value.substring(0, 10)}...` : value,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t},\n\t\t\t\tseries: {\n\t\t\t\t\tname: prettyName,\n\t\t\t\t\ttype: \"bar\",\n\t\t\t\t\tdata: keys.map((key) => {\n\t\t\t\t\t\treturn data[key];\n\t\t\t\t\t}),\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: \"series\",\n\t\t\t\t\t\tblurScope: \"coordinateSystem\",\n\t\t\t\t\t},\n\t\t\t\t\tanimationDuration: 300,\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[data, keys, prettyName],\n\t\t);\n\n\t\treturn (\n\t\t\t<ReactECharts\n\t\t\t\tlazyUpdate\n\t\t\t\toption={option}\n\t\t\t\tstyle={{ height: \"100%\", minHeight: \"300px\", width: \"100%\" }}\n\t\t\t/>\n\t\t);\n\t},\n);\n\nconst MemoizedNetworkChart = memo(\n\t({\n\t\tdata,\n\t\tonNodeClick,\n\t}: {\n\t\tdata: any;\n\t\tonNodeClick: (node: any, event: any) => void;\n\t}) => {\n\t\tconst processedData = useMemo(() => {\n\t\t\treturn data;\n\t\t}, [data]);\n\n\t\tconst elements = useMemo(\n\t\t\t() => [\n\t\t\t\t...processedData.nodes.map((node: any) => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\tlabel: node.label,\n\t\t\t\t\t\tsize: node.size || 30,\n\t\t\t\t\t\tcolor: node.color || \"#1f77b4\",\n\t\t\t\t\t\tx: node.x,\n\t\t\t\t\t\ty: node.y,\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t\t...processedData.links.map((link: any) => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tid: `${link.source}-${link.target}`,\n\t\t\t\t\t\tsource: link.source,\n\t\t\t\t\t\ttarget: link.target,\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t],\n\t\t\t[processedData],\n\t\t);\n\n\t\t// Define styles for nodes and edges\n\t\tconst cytoscapeStyles = useMemo(\n\t\t\t() => [\n\t\t\t\t{\n\t\t\t\t\tselector: \"node\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"background-color\": \"data(color)\",\n\t\t\t\t\t\twidth: \"data(size)\",\n\t\t\t\t\t\theight: \"data(size)\",\n\t\t\t\t\t\t\"text-valign\": \"top\",\n\t\t\t\t\t\t\"text-halign\": \"center\",\n\t\t\t\t\t\t\"text-margin-y\": -5,\n\t\t\t\t\t\t\"font-size\": \"12px\",\n\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\"text-outline-width\": 2,\n\t\t\t\t\t\t\"text-outline-color\": \"#ffffff\",\n\t\t\t\t\t\t\"z-index\": 1,\n\t\t\t\t\t\t// Hide label by default - will be shown on hover via event handlers\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: \"edge\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\t\"line-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-shape\": \"triangle\",\n\t\t\t\t\t\t\"curve-style\": \"bezier\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t[],\n\t\t);\n\n\t\treturn (\n\t\t\t<Box sx={{ height: \"100%\", minHeight: \"300px\", width: \"100%\" }}>\n\t\t\t\t<CytoscapeGraph\n\t\t\t\t\telements={elements as ElementDefinition[]}\n\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\tstylesheet={cytoscapeStyles}\n\t\t\t\t\tlayout={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: processedData.nodes.length > 1000 ? \"random\" : \"fcose\",\n\t\t\t\t\t\t\tanimate: false,\n\t\t\t\t\t\t\tsamplingType: false,\n\t\t\t\t\t\t\tanimationDuration: 1500,\n\t\t\t\t\t\t\tfit: true,\n\t\t\t\t\t\t\tpadding: 30,\n\t\t\t\t\t\t} as FcoseLayoutOptions\n\t\t\t\t\t}\n\t\t\t\t\tonNodeClick={onNodeClick}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t},\n);\n\ninterface ChartDisplayProps {\n\tviewId: string;\n\tcontent: any;\n\tonNodeClick: (nodeId: number | string) => void;\n\tprettyName?: string;\n}\n\nexport const ChartDisplay = ({\n\tviewId,\n\tcontent,\n\tonNodeClick,\n\tprettyName,\n}: ChartDisplayProps) => {\n\tconst parseNivoChartData = useCallback((chartContent: any) => {\n\t\tif (!chartContent) return [];\n\n\t\tconst result = [];\n\t\tfor (const key of Object.keys(chartContent)) {\n\t\t\tconst cosData = chartContent?.[key] || {};\n\t\t\tconst cosLine = {\n\t\t\t\tid: key,\n\t\t\t\tdata: cosData.map((val: any) => {\n\t\t\t\t\tconst k = Object.keys(val)[0];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: parseFloat(k),\n\t\t\t\t\t\ty: parseFloat(val[k]),\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t};\n\t\t\tresult.push(cosLine);\n\t\t}\n\t\treturn result;\n\t}, []);\n\n\tconst parseBarChartData = useCallback(\n\t\t(chartContent: { [s: string]: { [s2: string]: string } }) => {\n\t\t\tif (!chartContent) return {};\n\n\t\t\tconst result = {};\n\t\t\tfor (const value of Object.values(chartContent)) {\n\t\t\t\tfor (const key of Object.keys(value)) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tresult[key] = value?.[key] || {};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t[],\n\t);\n\n\tconst getDistributionKeys = useCallback(\n\t\t(chartContent: { [s: string]: any } | ArrayLike<unknown>) => {\n\t\t\tif (!chartContent || Object.values(chartContent).length === 0) return [];\n\t\t\tconst keySet = new Set<string>();\n\t\t\tObject.values(chartContent).forEach((obj: string) => {\n\t\t\t\tObject.keys(obj).forEach((key) => keySet.add(key));\n\t\t\t});\n\t\t\treturn Array.from(keySet).sort();\n\t\t},\n\t\t[],\n\t);\n\n\tconst getNetworkData = useCallback((chartContent: any) => {\n\t\tif (!chartContent || !chartContent.nodes) return { nodes: [], links: [] };\n\n\t\tconst uniqueNodesMap = new Map();\n\n\t\t// Process nodes\n\t\tchartContent.nodes.forEach((node: any) => {\n\t\t\t// Ensure node has an id, fallback to label if id is missing\n\t\t\tconst nodeId = node.id || node.label;\n\n\t\t\tconst transformedNode = {\n\t\t\t\t...node,\n\t\t\t\tid: nodeId,\n\t\t\t\t// Ensure label exists\n\t\t\t\tlabel: node.label || nodeId,\n\t\t\t\t// Add default size and color if not present\n\t\t\t\tsize: node.size || 30,\n\t\t\t\tcolor: node.color || \"#1f77b4\",\n\t\t\t};\n\n\t\t\tif (!uniqueNodesMap.has(transformedNode.id)) {\n\t\t\t\tuniqueNodesMap.set(transformedNode.id, transformedNode);\n\t\t\t}\n\t\t});\n\n\t\t// Process links\n\t\tconst transformedLinks = chartContent.links.map((link: any) => {\n\t\t\t// Handle both object references and direct string references\n\t\t\tconst sourceId =\n\t\t\t\ttypeof link.source === \"object\"\n\t\t\t\t\t? link.source.id || link.source.label\n\t\t\t\t\t: link.source;\n\n\t\t\tconst targetId =\n\t\t\t\ttypeof link.target === \"object\"\n\t\t\t\t\t? link.target.id || link.target.label\n\t\t\t\t\t: link.target;\n\n\t\t\treturn {\n\t\t\t\t...link,\n\t\t\t\tsource: sourceId,\n\t\t\t\ttarget: targetId,\n\t\t\t};\n\t\t});\n\n\t\tconst processedData = {\n\t\t\tnodes: Array.from(uniqueNodesMap.values()),\n\t\t\tlinks: transformedLinks,\n\t\t};\n\n\t\treturn processedData;\n\t}, []);\n\n\tconst handleNetworkNodeClick = useCallback(\n\t\t(node: any, event: MouseEvent) => {\n\t\t\tif (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t\tif (node?.id) {\n\t\t\t\tconst nodeId = node.id.includes(\"@\") ? node.id.split(\"@\")[1] : node.id;\n\t\t\t\tonNodeClick(nodeId);\n\t\t\t}\n\t\t},\n\t\t[onNodeClick],\n\t);\n\n\tif (viewId === \"char_example_xy\") {\n\t\tconst parsedChartData = parseNivoChartData(content);\n\n\t\treturn (\n\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t<div\n\t\t\t\tclassName=\"graph\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<MemoizedLineChart data={parsedChartData} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (viewId.endsWith(\"_distribution\")) {\n\t\tconst barChartData = parseBarChartData(content);\n\t\tconst keys = getDistributionKeys(content);\n\t\treturn (\n\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t<div\n\t\t\t\tclassName=\"graph\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<MemoizedBarChart\n\t\t\t\t\t\tprettyName={prettyName}\n\t\t\t\t\t\tdata={barChartData}\n\t\t\t\t\t\tkeys={keys}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (viewId.endsWith(\"nivo_view\")) {\n\t\tconst networkData = getNetworkData(content);\n\n\t\treturn (\n\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t<div\n\t\t\t\tclassName=\"graph\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<MemoizedNetworkChart\n\t\t\t\t\t\tdata={networkData}\n\t\t\t\t\t\tonNodeClick={handleNetworkNodeClick}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n};\n","import {\n\tBox,\n\tCard,\n\tCardContent,\n\tCardMedia,\n\tGrid,\n\tTypography,\n} from \"@mui/material\";\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\ninterface ClassAttributeFieldDisplayProps {\n\tcontent: any;\n}\n\nexport const ClassAttributeFieldDisplay = ({\n\tcontent,\n}: ClassAttributeFieldDisplayProps) => {\n\tconst parentRef = useRef<HTMLDivElement>(null);\n\tconst [containerWidth, setContainerWidth] = useState(0);\n\n\tconst filteredAttributes = useMemo(\n\t\t() =>\n\t\t\tcontent?.attributes?.filter((node: any) => node.name !== \"graph\") || [],\n\t\t[content?.attributes],\n\t);\n\n\tuseEffect(() => {\n\t\tconst updateWidth = () => {\n\t\t\tif (parentRef.current) {\n\t\t\t\tsetContainerWidth(parentRef.current.offsetWidth);\n\t\t\t}\n\t\t};\n\n\t\tupdateWidth();\n\t\twindow.addEventListener(\"resize\", updateWidth);\n\t\treturn () => window.removeEventListener(\"resize\", updateWidth);\n\t}, []);\n\n\tconst itemsPerRow = useMemo(() => {\n\t\tif (containerWidth === 0) return 1;\n\t\tif (containerWidth >= 600) return 2;\n\t\treturn 1;\n\t}, [containerWidth]);\n\n\tconst rows = useMemo(() => {\n\t\tconst result: any[][] = [];\n\t\tfor (let i = 0; i < filteredAttributes.length; i += itemsPerRow) {\n\t\t\tresult.push(filteredAttributes.slice(i, i + itemsPerRow));\n\t\t}\n\t\treturn result;\n\t}, [filteredAttributes, itemsPerRow]);\n\n\tconst rowVirtualizer = useVirtualizer({\n\t\tcount: rows.length,\n\t\tgetScrollElement: () => parentRef.current,\n\t\testimateSize: useCallback(() => 300, []),\n\t\toverscan: 2,\n\t});\n\n\tconst renderCard = useCallback((outNode: any) => {\n\t\tconst isImage = outNode.mimeType?.startsWith(\"image/\") && outNode.value;\n\t\tconst hasValue =\n\t\t\tObject.hasOwn(outNode, \"value\") &&\n\t\t\toutNode.value !== null &&\n\t\t\toutNode.value !== undefined;\n\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tsx={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\theight: 260,\n\t\t\t\t\tmaxHeight: 260,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CardContent\n\t\t\t\t\tsx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}\n\t\t\t\t>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tsx={{ wordBreak: \"break-word\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{outNode.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{isImage && (\n\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tmaxHeight: 200,\n\t\t\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\t\t\tobjectFit: \"contain\",\n\t\t\t\t\t\t\t\tmt: 1,\n\t\t\t\t\t\t\t\tborder: \"1px solid #eee\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\timage={`data:${outNode.mimeType};base64,${outNode.value}`}\n\t\t\t\t\t\t\talt={`Output value for ${outNode.name}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isImage && hasValue && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tcomponent=\"pre\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\t\t\t\t\twordBreak: \"break-all\",\n\t\t\t\t\t\t\t\tmt: 1,\n\t\t\t\t\t\t\t\tp: 1,\n\t\t\t\t\t\t\t\tbackgroundColor: \"#f5f5f5\",\n\t\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\t\t\tmaxHeight: 160,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{typeof outNode.value === \"object\"\n\t\t\t\t\t\t\t\t? JSON.stringify(outNode.value, null, 2)\n\t\t\t\t\t\t\t\t: String(outNode.value)}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t\t{!hasValue && !isImage && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tfontStyle: \"italic\",\n\t\t\t\t\t\t\t\tmt: 1,\n\t\t\t\t\t\t\t\tp: 1,\n\t\t\t\t\t\t\t\tbackgroundColor: \"#f5f5f5\",\n\t\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t\t\tflexGrow: 1,\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\tminHeight: 40,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t(No displayable value)\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t);\n\t}, []);\n\n\tif (!Array.isArray(content?.attributes)) {\n\t\treturn (\n\t\t\t<Typography sx={{ p: 2 }} color=\"error\">\n\t\t\t\tError: Expected an array for 'class_attribute_field' data, but received\n\t\t\t\ttype {typeof content?.attributes}.\n\t\t\t</Typography>\n\t\t);\n\t}\n\n\tif (content?.attributes.length === 0) {\n\t\treturn <Typography sx={{ p: 2 }}>No output nodes connected.</Typography>;\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tref={parentRef}\n\t\t\tsx={{\n\t\t\t\theight: \"400px\",\n\t\t\t\toverflow: \"auto\",\n\t\t\t\tp: 1,\n\t\t\t\twidth: \"100%\",\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\theight: `${rowVirtualizer.getTotalSize()}px`,\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{rowVirtualizer.getVirtualItems().map((virtualRow) => {\n\t\t\t\t\tconst rowItems = rows[virtualRow.index];\n\t\t\t\t\tif (!rowItems) return null;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tkey={virtualRow.key}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\theight: `${virtualRow.size}px`,\n\t\t\t\t\t\t\t\ttransform: `translateY(${virtualRow.start}px)`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid container spacing={2} sx={{ width: \"100%\" }}>\n\t\t\t\t\t\t\t\t{rowItems.map((outNode) => (\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\tkey={outNode.id}\n\t\t\t\t\t\t\t\t\t\tsize={{ xs: 12, sm: 6 }}\n\t\t\t\t\t\t\t\t\t\tsx={{ display: \"flex\" }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{renderCard(outNode)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n","import { CenterFocusStrong, ZoomIn, ZoomOut } from \"@mui/icons-material\";\nimport {\n\tBox,\n\tIconButton,\n\tPaper,\n\tToolbar,\n\tTooltip,\n\tTypography,\n} from \"@mui/material\";\nimport mermaid from \"mermaid\";\nimport type React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\ninterface MermaidDisplayProps {\n\tchart: string;\n}\n\nconst MermaidDisplay: React.FC<MermaidDisplayProps> = ({ chart }) => {\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst mermaidRef = useRef<HTMLDivElement>(null);\n\tconst [zoom, setZoom] = useState(1);\n\tconst [position, setPosition] = useState({ x: 0, y: 0 });\n\tconst [isDragging, setIsDragging] = useState(false);\n\tconst [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n\n\tuseEffect(() => {\n\t\tmermaid.initialize({\n\t\t\tstartOnLoad: false,\n\t\t\ttheme: \"dark\",\n\t\t\tsecurityLevel: \"loose\",\n\n\t\t\tfontFamily: \"Fira Code\",\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst renderMermaid = async () => {\n\t\t\tif (mermaidRef.current && chart) {\n\t\t\t\ttry {\n\t\t\t\t\tconst id = `mermaid-${Date.now()}`;\n\n\t\t\t\t\t// Clear previous content\n\t\t\t\t\tmermaidRef.current.innerHTML = \"\";\n\n\t\t\t\t\t// Parse and render the chart\n\t\t\t\t\tconst { svg } = await mermaid.render(id, chart);\n\t\t\t\t\tmermaidRef.current.innerHTML = svg;\n\n\t\t\t\t\t// Reset zoom and position when chart changes\n\t\t\t\t\tsetZoom(1);\n\t\t\t\t\tsetPosition({ x: 0, y: 0 });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Mermaid rendering error:\", error);\n\t\t\t\t\tmermaidRef.current.innerHTML = `<div style=\"color: red; padding: 20px;\">Error rendering diagram: ${error}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trenderMermaid();\n\t}, [chart]);\n\n\t// Prevent page scrolling when mouse is over the container\n\tuseEffect(() => {\n\t\tconst container = containerRef.current;\n\t\tif (!container) return;\n\n\t\tconst preventScroll = (e: WheelEvent) => {\n\t\t\te.preventDefault();\n\t\t};\n\n\t\tcontainer.addEventListener(\"wheel\", preventScroll, { passive: false });\n\n\t\treturn () => {\n\t\t\tcontainer.removeEventListener(\"wheel\", preventScroll);\n\t\t};\n\t}, []);\n\n\tconst handleZoomIn = useCallback(() => {\n\t\tsetZoom((prev) => Math.min(prev * 1.2, 3));\n\t}, []);\n\n\tconst handleZoomOut = useCallback(() => {\n\t\tsetZoom((prev) => Math.max(prev / 1.2, 0.3));\n\t}, []);\n\n\tconst handleResetView = useCallback(() => {\n\t\tsetZoom(1);\n\t\tsetPosition({ x: 0, y: 0 });\n\t}, []);\n\n\tconst handleMouseDown = useCallback(\n\t\t(e: React.MouseEvent) => {\n\t\t\tif (e.button === 0) {\n\t\t\t\tsetIsDragging(true);\n\t\t\t\tsetDragStart({\n\t\t\t\t\tx: e.clientX - position.x,\n\t\t\t\t\ty: e.clientY - position.y,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[position],\n\t);\n\n\tconst handleMouseMove = useCallback(\n\t\t(e: React.MouseEvent) => {\n\t\t\tif (isDragging) {\n\t\t\t\tsetPosition({\n\t\t\t\t\tx: e.clientX - dragStart.x,\n\t\t\t\t\ty: e.clientY - dragStart.y,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[isDragging, dragStart],\n\t);\n\n\tconst handleMouseUp = useCallback(() => {\n\t\tsetIsDragging(false);\n\t}, []);\n\n\tconst handleWheel = useCallback(\n\t\t(e: React.WheelEvent) => {\n\t\t\tif (containerRef.current) {\n\t\t\t\tconst rect = containerRef.current.getBoundingClientRect();\n\t\t\t\tconst centerX = rect.width / 2;\n\t\t\t\tconst centerY = rect.height / 2;\n\n\t\t\t\tconst delta = e.deltaY > 0 ? 0.9 : 1.1;\n\t\t\t\tconst newZoom = Math.max(0.3, Math.min(10, zoom * delta));\n\n\t\t\t\t// Adjust position to zoom towards mouse cursor\n\t\t\t\tconst mouseX = e.clientX - rect.left;\n\t\t\t\tconst mouseY = e.clientY - rect.top;\n\n\t\t\t\tconst deltaX = (mouseX - centerX) * (1 - delta);\n\t\t\t\tconst deltaY = (mouseY - centerY) * (1 - delta);\n\n\t\t\t\tsetZoom(newZoom);\n\t\t\t\tsetPosition((prev) => ({\n\t\t\t\t\tx: prev.x + deltaX,\n\t\t\t\t\ty: prev.y + deltaY,\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\t[zoom],\n\t);\n\n\treturn (\n\t\t<Paper\n\t\t\televation={2}\n\t\t\tsx={{\n\t\t\t\theight: 600,\n\t\t\t\twidth: \"100%\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\toverflow: \"hidden\",\n\t\t\t}}\n\t\t>\n\t\t\t<Toolbar\n\t\t\t\tvariant=\"dense\"\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundColor: \"background.paper\",\n\t\t\t\t\tborderBottom: 1,\n\t\t\t\t\tborderColor: \"divider\",\n\t\t\t\t\tminHeight: 48,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n\t\t\t\t\tMermaid Diagram\n\t\t\t\t</Typography>\n\n\t\t\t\t<Box sx={{ display: \"flex\", gap: 1 }}>\n\t\t\t\t\t<Tooltip title=\"Zoom In\">\n\t\t\t\t\t\t<IconButton onClick={handleZoomIn} size=\"small\">\n\t\t\t\t\t\t\t<ZoomIn />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t<Tooltip title=\"Zoom Out\">\n\t\t\t\t\t\t<IconButton onClick={handleZoomOut} size=\"small\">\n\t\t\t\t\t\t\t<ZoomOut />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t<Tooltip title=\"Reset View\">\n\t\t\t\t\t\t<IconButton onClick={handleResetView} size=\"small\">\n\t\t\t\t\t\t\t<CenterFocusStrong />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Box>\n\t\t\t</Toolbar>\n\n\t\t\t<Box\n\t\t\t\tref={containerRef}\n\t\t\t\tsx={{\n\t\t\t\t\tflex: 1,\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\tcursor: isDragging ? \"grabbing\" : \"grab\",\n\t\t\t\t\tbackgroundColor: \"background.default\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t}}\n\t\t\t\tonMouseDown={handleMouseDown}\n\t\t\t\tonMouseMove={handleMouseMove}\n\t\t\t\tonMouseUp={handleMouseUp}\n\t\t\t\tonMouseLeave={handleMouseUp}\n\t\t\t\tonWheel={handleWheel}\n\t\t\t>\n\t\t\t\t<Box\n\t\t\t\t\tref={mermaidRef}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\ttransform: `translate(${position.x}px, ${position.y}px) scale(${zoom})`,\n\t\t\t\t\t\ttransformOrigin: \"center center\",\n\t\t\t\t\t\ttransition: isDragging ? \"none\" : \"transform 0.1s ease-out\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\"& svg\": {\n\t\t\t\t\t\t\tmaxWidth: \"none\",\n\t\t\t\t\t\t\tmaxHeight: \"none\",\n\t\t\t\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{/* Zoom indicator */}\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbottom: 16,\n\t\t\t\t\t\tright: 16,\n\t\t\t\t\t\tbackgroundColor: \"background.paper\",\n\t\t\t\t\t\tpx: 1,\n\t\t\t\t\t\tpy: 0.5,\n\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\tfontSize: \"0.75rem\",\n\t\t\t\t\t\topacity: 0.8,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{Math.round(zoom * 100)}%\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Paper>\n\t);\n};\n\nexport default MermaidDisplay;\n","import CustomCodeBlock from \"@global/CustomCodeBlock\";\nimport { CircularProgress } from \"@mui/material\";\nimport { graphviz } from \"d3-graphviz\";\nimport { Suspense, useCallback, useEffect, useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { collapseAllNested, JsonView } from \"react-json-view-lite\";\nimport { BNodeNavigatorDisplay } from \"./BNodeNavigatorDisplay\";\nimport { ChartDisplay } from \"./ChartDisplay\";\nimport { ClassAttributeFieldDisplay } from \"./ClassAttributeFieldDisplay\";\nimport MermaidDisplay from \"./MermaidDisplay\";\n\ninterface ContentDisplayProps {\n\tviewId: string;\n\tcontent: any;\n\tcontentType: string;\n\tbackgroundColor: string;\n\tjumpToNode: (nodeId: number | string) => void;\n\thexColor: string;\n\tonHexColorChange: (color: { hex: string }) => void;\n\tprettyName?: string;\n}\n\nexport const ContentDisplay = ({\n\tviewId,\n\tcontent,\n\tcontentType,\n\tbackgroundColor,\n\tjumpToNode,\n\thexColor,\n\tonHexColorChange,\n\tprettyName,\n}: ContentDisplayProps) => {\n\tconst graphvizRef = useRef<HTMLDivElement>(null);\n\n\tconst renderGraphviz = useCallback(() => {\n\t\tif (contentType === \"text/dot\" && graphvizRef.current) {\n\t\t\tgraphviz(graphvizRef.current, {\n\t\t\t\tengine: \"dot\",\n\t\t\t\tfit: true,\n\t\t\t\tzoom: true,\n\t\t\t}).renderDot(content);\n\t\t}\n\t}, [content, contentType]);\n\n\tuseEffect(() => {\n\t\trenderGraphviz();\n\t}, [renderGraphviz]);\n\n\tif (!content) {\n\t\treturn <div className=\"error-message\">No content available.</div>;\n\t}\n\n\tif (contentType === \"application/json\") {\n\t\tif (viewId === \"class_attribute_field\") {\n\t\t\treturn <ClassAttributeFieldDisplay content={content} />;\n\t\t} else if (\n\t\t\tviewId === \"char_example_xy\" ||\n\t\t\tviewId.endsWith(\"_distribution\") ||\n\t\t\tviewId.endsWith(\"nivo_view\")\n\t\t) {\n\t\t\treturn (\n\t\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"graph\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t\t<ChartDisplay\n\t\t\t\t\t\t\tviewId={viewId}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\tonNodeClick={jumpToNode}\n\t\t\t\t\t\t\tprettyName={prettyName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (viewId === \"bnode_navigator\") {\n\t\t\treturn (\n\t\t\t\t<BNodeNavigatorDisplay content={content} jumpToNode={jumpToNode} />\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"content-container\"\n\t\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t\t>\n\t\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t\t<JsonView data={content} shouldExpandNode={collapseAllNested} />\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else if (contentType === \"text/dot\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container graphviz-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<div ref={graphvizRef} />\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/mermaid\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"mermaid-container\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: backgroundColor,\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: \"600px\",\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MermaidDisplay chart={content} />\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/html\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container html-content\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\t// biome-ignore lint/security/noDangerouslySetInnerHtml: This is safe as we control the content\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: content }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/svg\") {\n\t\treturn (\n\t\t\t<div className=\"content-container\" style={{ background: \"transparent\" }}>\n\t\t\t\t<div\n\t\t\t\t\t// biome-ignore lint/security/noDangerouslySetInnerHtml: t\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: content }}\n\t\t\t\t\tstyle={{ background: \"transparent\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/svg+xml\") {\n\t\treturn (\n\t\t\t<div className=\"content-container\" style={{ background: \"transparent\" }}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={`data:image/svg+xml;base64,${content}`}\n\t\t\t\t\talt=\"Graphviz\"\n\t\t\t\t\tstyle={{ background: \"transparent\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/png\" || contentType === \"image/jpeg\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<img src={`data:${contentType};base64,${content}`} alt=\"Content\" />\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/jsondot\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<JsonView data={content} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/java\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<CustomCodeBlock language=\"java\" code={content} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/hex\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<ChromePicker\n\t\t\t\t\tcolor={hexColor}\n\t\t\t\t\tdisableAlpha\n\t\t\t\t\tonChangeComplete={onHexColorChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"error-message\">\n\t\t\t\tUnsupported content type: {contentType}\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import { Box, CircularProgress } from \"@mui/material\";\nimport { useMemo } from \"react\";\nimport { ContentDisplay } from \"./ContentDisplay\";\n\ninterface ViewContentProps {\n\tloading: boolean;\n\terror: Error | null;\n\trawApiData: any;\n\tdataContent: any;\n\tbackgroundColor: string;\n\tjumpToNode: (nodeId: number | string) => void;\n\thexColor: string;\n\tonHexColorChange: (color: { hex: string }) => void;\n\tviewId: string;\n}\n\nexport const ViewContent = ({\n\tloading,\n\terror,\n\trawApiData,\n\tdataContent,\n\tbackgroundColor,\n\tjumpToNode,\n\thexColor,\n\tonHexColorChange,\n\tviewId,\n}: ViewContentProps) => {\n\tconst resultData = useMemo(\n\t\t() => dataContent?.results?.[0]?.result?.data,\n\t\t[dataContent],\n\t);\n\tconst resultContentType = useMemo(\n\t\t() => dataContent?.results?.[0]?.result?.contentType?.split(\";\")?.[0],\n\t\t[dataContent],\n\t);\n\tconst prettyName = useMemo(\n\t\t() => dataContent?.results?.[0]?.pretty_name,\n\t\t[dataContent],\n\t);\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container\"\n\t\t\t\tsx={{\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tpadding: 2,\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tminHeight: \"300px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CircularProgress />\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (error) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tError fetching data: {error.message}\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (!rawApiData) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tNo data available.\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (dataContent?.results?.[0]?.error !== undefined) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tBackend Error: {dataContent.results[0].error}\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (!resultData || !resultContentType) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tResult data or content type missing in the response.\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tsx={{\n\t\t\t\tposition: \"relative\",\n\t\t\t\tpadding: 2,\n\t\t\t\tflex: 1,\n\t\t\t\tminHeight: \"300px\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\toverflow: \"hidden\",\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 4,\n\t\t\t\t\tflex: 1,\n\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\"&::-webkit-scrollbar\": {\n\t\t\t\t\t\twidth: \"8px\",\n\t\t\t\t\t\theight: \"8px\",\n\t\t\t\t\t},\n\t\t\t\t\t\"&::-webkit-scrollbar-track\": {\n\t\t\t\t\t\tbackground: \"#f1f1f1\",\n\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t},\n\t\t\t\t\t\"&::-webkit-scrollbar-thumb\": {\n\t\t\t\t\t\tbackground: \"#888\",\n\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t},\n\t\t\t\t\t\"&::-webkit-scrollbar-thumb:hover\": {\n\t\t\t\t\t\tbackground: \"#555\",\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ContentDisplay\n\t\t\t\t\tviewId={viewId}\n\t\t\t\t\tcontent={resultData}\n\t\t\t\t\tcontentType={resultContentType}\n\t\t\t\t\tbackgroundColor={backgroundColor}\n\t\t\t\t\tjumpToNode={jumpToNode}\n\t\t\t\t\thexColor={hexColor}\n\t\t\t\t\tonHexColorChange={onHexColorChange}\n\t\t\t\t\tprettyName={prettyName}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n","import ErrorBoundary from \"@components/ErrorBoundary\";\nimport {\n\tLoadingStates,\n\tuseLoadingState,\n} from \"@components/Loading/LoadingComponents\";\nimport {\n\tstartTransition,\n\tuseDeferredValue,\n\tuseOptimizedDebounce,\n\tuseOptimizedState,\n} from \"@hooks/react19\";\nimport { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport { Box } from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { memo, Suspense, useCallback, useEffect, useMemo } from \"react\";\nimport { ModalComponent } from \"../View/ModalComponent\";\nimport { ViewContent } from \"../View/ViewContent\";\nimport \"./View.css\";\n\ninterface ViewProps {\n\tviewId: string;\n\tsx?: any;\n}\n\nexport const View = memo(({ viewId, sx }: ViewProps) => {\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: loading,\n\t\terror,\n\t\trefetch,\n\t} = useApiData(\n\t\tviewId,\n\t\t{},\n\t\t{\n\t\t\t// React 19 optimizations\n\t\t\tstaleTime: 30000, // 30 seconds\n\t\t\tgcTime: 5 * 60 * 1000, // 5 minutes\n\t\t\trefetchOnWindowFocus: false,\n\t\t\trefetchOnReconnect: true,\n\t\t\tretry: 3,\n\t\t\tretryDelay: (attemptIndex: number) =>\n\t\t\t\tMath.min(1000 * 2 ** attemptIndex, 30000),\n\t\t},\n\t);\n\n\tconst queryClient = useQueryClient();\n\tconst { isLoading: isMutating, withLoading } = useLoadingState();\n\n\t// React 19 optimized state management\n\tconst [isModalOpen, setIsModalOpen, isModalUpdating] = useOptimizedState(\n\t\tfalse,\n\t\t{\n\t\t\ttransitionUpdates: true,\n\t\t},\n\t);\n\n\tconst [hex, setHex, isColorUpdating] = useOptimizedState(\"#ffffff\", {\n\t\ttransitionUpdates: true,\n\t\tdebounceMs: 300, // Debounce color changes\n\t});\n\n\tconst [viewError, setViewError, isViewErrorUpdating] = useOptimizedState<\n\t\tstring | null\n\t>(null, {\n\t\ttransitionUpdates: true,\n\t});\n\n\t// Deferred values for better performance during rapid updates\n\tconst deferredViewId = useDeferredValue(viewId);\n\tconst deferredHex = useDeferredValue(hex);\n\tconst [debouncedColor] = useOptimizedDebounce(hex, 500);\n\n\t// Memoized API mutations with error handling\n\tconst saveColour = useApiMutation(\"update_colour\", {\n\t\tonSuccess: () => {\n\t\t\t// Optimistically update without full refetch\n\t\t\tstartTransition(() => {\n\t\t\t\tqueryClient.setQueryData([\"apiData\", viewId], (oldData: unknown) => {\n\t\t\t\t\tif (!oldData) return oldData;\n\t\t\t\t\tconst typedData = oldData as any;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...typedData,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t...typedData.data,\n\t\t\t\t\t\t\tresults: typedData.data.results?.map((result: any) => ({\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tcolor: debouncedColor,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetViewError(null);\n\t\t\t});\n\t\t},\n\t\tonError: (error: unknown) => {\n\t\t\tconsole.error(\"Failed to save color:\", error);\n\t\t\tstartTransition(() => {\n\t\t\t\tsetViewError(\"Failed to save color changes\");\n\t\t\t\t// Revert color on error\n\t\t\t\tsetHex(\"#ffffff\");\n\t\t\t});\n\t\t},\n\t});\n\n\tconst jumpMutation = useApiMutation(\"jump\", {\n\t\tonSuccess: async () => {\n\t\t\t// Use startTransition for non-urgent updates\n\t\t\tstartTransition(() => {\n\t\t\t\tqueryClient.invalidateQueries({ queryKey: [\"apiData\"] });\n\t\t\t\tsetViewError(null);\n\t\t\t});\n\t\t},\n\t\tonError: (error: unknown) => {\n\t\t\tconsole.error(\"Failed to jump to node:\", error);\n\t\t\tstartTransition(() => {\n\t\t\t\tsetViewError(\"Failed to navigate to node\");\n\t\t\t});\n\t\t},\n\t});\n\n\t// Optimized color change handler with debouncing\n\tconst handleHexChange = useCallback(\n\t\t(colour: { hex: string }) => {\n\t\t\t// Immediate UI update\n\t\t\tsetHex(colour.hex);\n\t\t},\n\t\t[setHex],\n\t);\n\n\t// Effect to handle debounced color saves\n\tuseEffect(() => {\n\t\tif (debouncedColor !== \"#ffffff\" && debouncedColor !== hex) {\n\t\t\twithLoading(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait saveColour.mutateAsync({\n\t\t\t\t\t\tview_id: deferredViewId,\n\t\t\t\t\t\tvalue: debouncedColor,\n\t\t\t\t\t});\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tconsole.error(\"Color update failed:\", error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [debouncedColor, deferredViewId, saveColour, withLoading, hex]);\n\n\t// Optimized jump to node handler\n\tconst jumpToNode = useCallback(\n\t\t(nodeId: number | string) => {\n\t\t\twithLoading(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait jumpMutation.mutateAsync({ node_id: nodeId });\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tconsole.error(\"Jump to node failed:\", error);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[jumpMutation, withLoading],\n\t);\n\n\t// Memoized modal handlers\n\tconst handleModalChange = useCallback(\n\t\t(opened: boolean) => {\n\t\t\tstartTransition(() => {\n\t\t\t\tsetIsModalOpen(opened);\n\t\t\t});\n\t\t},\n\t\t[setIsModalOpen],\n\t);\n\n\t// Retry handler for failed requests\n\tconst handleRetry = useCallback(() => {\n\t\twithLoading(async () => {\n\t\t\ttry {\n\t\t\t\tawait refetch();\n\t\t\t\tsetViewError(null);\n\t\t\t} catch (error: unknown) {\n\t\t\t\tconsole.error(\"Retry failed:\", error);\n\t\t\t\tsetViewError(\"Retry failed. Please try again.\");\n\t\t\t}\n\t\t});\n\t}, [refetch, withLoading, setViewError]);\n\n\t// Memoized data extraction with error handling\n\tconst { dataContent, exportData, backgroundColor } = useMemo(() => {\n\t\ttry {\n\t\t\tconst dataContent = rawApiData?.data;\n\t\t\tconst exportData = rawApiData?.data?.results?.[0]?.result?.data;\n\t\t\tconst backgroundColor = sx?.bgcolor || \"transparent\";\n\n\t\t\treturn {\n\t\t\t\tdataContent,\n\t\t\t\texportData,\n\t\t\t\tbackgroundColor,\n\t\t\t};\n\t\t} catch (error: unknown) {\n\t\t\tconsole.error(\"Error processing view data:\", error);\n\t\t\tsetViewError(\"Error processing view data\");\n\t\t\treturn {\n\t\t\t\tdataContent: undefined,\n\t\t\t\texportData: undefined,\n\t\t\t\tbackgroundColor: sx?.bgcolor || \"transparent\",\n\t\t\t};\n\t\t}\n\t}, [rawApiData, sx?.bgcolor, setViewError]);\n\n\t// Enhanced error boundary for view-specific errors\n\tconst ViewErrorFallback = useCallback(\n\t\t({\n\t\t\terror: errorObj,\n\t\t\tresetError,\n\t\t}: {\n\t\t\terror: Error;\n\t\t\tresetError: () => void;\n\t\t}) => (\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\theight: \"200px\",\n\t\t\t\t\tpadding: 2,\n\t\t\t\t\tborder: \"1px solid #e0e0e0\",\n\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\tbackgroundColor: \"#fafafa\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box sx={{ textAlign: \"center\", mb: 2 }}>\n\t\t\t\t\t<Box component=\"span\" sx={{ fontSize: \"2rem\", color: \"#f44336\" }}>\n\t\t\t\t\t\t⚠️\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box sx={{ mt: 1, color: \"#666\", fontSize: \"0.875rem\" }}>\n\t\t\t\t\t\tFailed to load view: {viewId}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{process.env.NODE_ENV === \"development\" && (\n\t\t\t\t\t\t<Box sx={{ mt: 1, color: \"#999\", fontSize: \"0.75rem\" }}>\n\t\t\t\t\t\t\t{errorObj.message}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t\t{viewError && (\n\t\t\t\t\t\t<Box sx={{ mt: 1, color: \"#f44336\", fontSize: \"0.75rem\" }}>\n\t\t\t\t\t\t\t{viewError}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t\t<Box sx={{ display: \"flex\", gap: 1 }}>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tresetError();\n\t\t\t\t\t\t\tsetViewError(null);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: \"8px 16px\",\n\t\t\t\t\t\t\tbackgroundColor: \"#1976d2\",\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\tfontSize: \"0.875rem\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tRetry\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={handleRetry}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: \"8px 16px\",\n\t\t\t\t\t\t\tbackgroundColor: \"#f57c00\",\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\tfontSize: \"0.875rem\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tRefetch Data\n\t\t\t\t\t</button>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t),\n\t\t[viewId, viewError, handleRetry, setViewError],\n\t);\n\n\tconst isPendingAny =\n\t\tisMutating || isModalUpdating || isColorUpdating || isViewErrorUpdating;\n\n\treturn (\n\t\t<ErrorBoundary\n\t\t\tfallback={\n\t\t\t\t<ViewErrorFallback\n\t\t\t\t\terror={new Error(\"View render error\")}\n\t\t\t\t\tresetError={() => window.location.reload()}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonError={(error, errorInfo) => {\n\t\t\t\t// Log error for debugging\n\t\t\t\tconsole.error(`View ${viewId} error:`, error, errorInfo);\n\t\t\t\tsetViewError(`Render error: ${error.message}`);\n\t\t\t}}\n\t\t\tresetKeys={[viewId]} // Reset when viewId changes\n\t\t>\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container\"\n\t\t\t\tsx={{\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\topacity: isPendingAny ? 0.8 : 1,\n\t\t\t\t\ttransition: \"opacity 0.2s ease-in-out\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* Error display */}\n\t\t\t\t{viewError && (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 8,\n\t\t\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\t\t\ttransform: \"translateX(-50%)\",\n\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\tbgcolor: \"error.main\",\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tpx: 2,\n\t\t\t\t\t\t\tpy: 1,\n\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t\tfontSize: \"0.75rem\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{viewError}\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\n\t\t\t\t{/* Modal with Suspense boundary */}\n\t\t\t\t<ErrorBoundary\n\t\t\t\t\tfallback={<div>Error loading modal</div>}\n\t\t\t\t\tonError={(error) => {\n\t\t\t\t\t\tconsole.error(\"Modal error:\", error);\n\t\t\t\t\t\tsetViewError(\"Modal failed to load\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Suspense fallback={null}>\n\t\t\t\t\t\t<ModalComponent\n\t\t\t\t\t\t\tdataForModal={exportData}\n\t\t\t\t\t\t\tisModalOpen={isModalOpen}\n\t\t\t\t\t\t\tsetIsModalOpen={handleModalChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</ErrorBoundary>\n\n\t\t\t\t{/* Main content with error boundary and loading states */}\n\t\t\t\t<ErrorBoundary\n\t\t\t\t\tfallback={\n\t\t\t\t\t\t<ViewErrorFallback\n\t\t\t\t\t\t\terror={new Error(\"View content error\")}\n\t\t\t\t\t\t\tresetError={handleRetry}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tonError={(error, errorInfo) => {\n\t\t\t\t\t\tconsole.error(\"View content error:\", error, errorInfo);\n\t\t\t\t\t\tsetViewError(`Content error: ${error.message}`);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Suspense\n\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t<LoadingStates.Component\n\t\t\t\t\t\t\t\tmessage={`Loading ${deferredViewId}...`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ViewContent\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\trawApiData={rawApiData}\n\t\t\t\t\t\t\tdataContent={dataContent}\n\t\t\t\t\t\t\tbackgroundColor={backgroundColor}\n\t\t\t\t\t\t\tjumpToNode={jumpToNode}\n\t\t\t\t\t\t\thexColor={deferredHex}\n\t\t\t\t\t\t\tonHexColorChange={handleHexChange}\n\t\t\t\t\t\t\tviewId={deferredViewId}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</ErrorBoundary>\n\n\t\t\t\t{/* Loading indicator for mutations */}\n\t\t\t\t{isPendingAny && (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 8,\n\t\t\t\t\t\t\tright: 8,\n\t\t\t\t\t\t\tzIndex: 10,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<LoadingStates.Inline text=\"\" />\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</ErrorBoundary>\n\t);\n});\n\nView.displayName = \"View\";\nexport default View;\n","import { useEffect, useRef } from \"react\";\n\nexport const useTitle = (title: string) => {\n\tconst documentDefined = typeof document !== \"undefined\";\n\tconst originalTitle = useRef(documentDefined ? document.title : null);\n\n\tuseEffect(() => {\n\t\tif (!documentDefined) return;\n\n\t\tif (document.title !== title) document.title = title;\n\n\t\treturn () => {\n\t\t\tdocument.title = originalTitle.current!;\n\t\t};\n\t}, [documentDefined, title]);\n};\n"],"names":["modalStyle","modalHeaderStyle","modalContentStyle","ModalComponent","dataForModal","isModalOpen","setIsModalOpen","_isPending","startTransition","useTransition","handleOpenModal","useCallback","event","handleCloseModal","Tooltip","IconButton","CodeIcon","Modal","Box","Typography","CloseIcon","Suspense","CircularProgress","JsonView","code","language","VirtualNavigator","allNodes","handleButtonClick","parentRef","useRef","rowVirtualizer","useVirtualizer","virtualItem","node","isInNode","Button","e","BNodeNavigatorDisplay","content","jumpToNode","nodeId","inNodes","Object","outNodes","inNode","outNode","Cytoscape","fcose","CytoscapeGraph","elements","style","stylesheet","layout","onNodeClick","containerRef","cyRef","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","useEffect","cy","layoutOptions","MemoizedLineChart","memo","data","option","useMemo","series","point","ReactECharts","MemoizedBarChart","prettyName","keys","value","key","MemoizedNetworkChart","processedData","link","cytoscapeStyles","ChartDisplay","viewId","parseNivoChartData","chartContent","result","cosData","cosLine","val","k","parseFloat","parseBarChartData","getDistributionKeys","keySet","Set","obj","Array","getNetworkData","uniqueNodesMap","Map","transformedNode","transformedLinks","sourceId","targetId","handleNetworkNodeClick","parsedChartData","barChartData","networkData","ClassAttributeFieldDisplay","containerWidth","setContainerWidth","useState","filteredAttributes","_content_attributes","updateWidth","window","itemsPerRow","rows","i","renderCard","_outNode_mimeType","isImage","hasValue","undefined","Card","CardContent","CardMedia","JSON","String","virtualRow","rowItems","Grid","chart","mermaidRef","zoom","setZoom","position","setPosition","isDragging","setIsDragging","dragStart","setDragStart","mermaid","renderMermaid","id","Date","svg","error","console","container","preventScroll","handleZoomIn","prev","Math","handleZoomOut","handleResetView","handleMouseDown","handleMouseMove","handleMouseUp","handleWheel","rect","centerX","centerY","delta","newZoom","mouseX","mouseY","deltaX","deltaY","Paper","Toolbar","ZoomIn","ZoomOut","CenterFocusStrong","ContentDisplay","contentType","backgroundColor","hexColor","onHexColorChange","graphvizRef","renderGraphviz","graphviz","collapseAllNested","MermaidDisplay","CustomCodeBlock","ChromePicker","ViewContent","_dataContent_results_","loading","rawApiData","dataContent","resultData","_dataContent_results__result","resultContentType","_dataContent_results__result_contentType_split","View","sx","refetch","useApiData","attemptIndex","queryClient","useQueryClient","isMutating","withLoading","useLoadingState","isModalUpdating","useOptimizedState","hex","setHex","isColorUpdating","viewError","setViewError","isViewErrorUpdating","deferredViewId","useDeferredValue","deferredHex","debouncedColor","useOptimizedDebounce","saveColour","useApiMutation","oldData","_typedData_data_results","typedData","jumpMutation","handleHexChange","colour","handleModalChange","opened","handleRetry","exportData","_rawApiData_data_results__result","ViewErrorFallback","errorObj","resetError","process","isPendingAny","ErrorBoundary","Error","errorInfo","LoadingStates","useTitle","title","documentDefined","document","originalTitle"],"mappings":"2UAkBA,IAAMA,EAAa,CAClB,SAAU,WACV,IAAK,MACL,KAAM,MACN,UAAW,wBACX,MAAO,MACP,SAAU,QACV,UAAW,OACX,QAAS,mBACT,OAAQ,iBACR,UAAW,GACX,EAAG,EACH,QAAS,OACT,cAAe,SACf,SAAU,QACX,EAEMC,EAAmB,CACxB,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,GAAI,CACL,EAEMC,EAAoB,CACzB,UAAW,OACX,UAAW,qBACX,MAAO,OACP,eAAgB,OAChB,eAAgB,eAChB,uBAAwB,CACvB,MAAO,MACP,OAAQ,KACT,EACA,6BAA8B,CAC7B,WAAY,UACZ,aAAc,KACf,EACA,6BAA8B,CAC7B,WAAY,OACZ,aAAc,KACf,EACA,mCAAoC,CACnC,WAAY,MACb,CACD,EAQaC,EAAiB,AAAC,I,GAAA,CAC9BC,aAAAA,CAAY,CACZC,YAAAA,CAAW,CACXC,eAAAA,CAAc,CACO,GACf,CAACC,EAAYC,EAAgB,CAAGC,AAAAA,GAAAA,EAAAA,aAAAA,AAAAA,IAEhCC,EAAwDC,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAC7D,AAACC,IACAA,EAAM,eAAe,GACrBJ,EAAgB,KACfF,EAAe,GAChB,EACD,EACA,CAACA,EAAe,EAGXO,EAAyDF,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAC9D,AAACC,IACAA,EAAM,eAAe,GACrBJ,EAAgB,KACfF,EAAe,GAChB,EACD,EACA,CAACA,EAAe,EAGjB,MACC,uB,UACC,UAACQ,EAAAA,CAAOA,CAAAA,CAAC,MAAM,4B,SACd,UAAC,Q,SACA,UAACC,EAAAA,CAAUA,CAAAA,CACV,QAASL,EACT,KAAK,QACL,GAAI,CACH,SAAU,WACV,IAAK,EACL,MAAO,EACP,OAAQ,GACR,MAAO,GACP,OAAQ,GACR,MAAO,cACR,EACA,aAAW,gBACX,SAAUN,MAAAA,E,SAEV,UAACY,EAAAA,CAAQA,CAAAA,CAAAA,E,OAIZ,UAACC,EAAAA,CAAKA,CAAAA,CACL,KAAMZ,EACN,QAASQ,EACT,kBAAgB,uBAChB,mBAAiB,6B,SAEjB,WAACK,EAAAA,CAAGA,CAAAA,CAAC,GAAIlB,E,UACR,WAACkB,EAAAA,CAAGA,CAAAA,CAAC,GAAIjB,E,UACR,UAACkB,EAAAA,CAAUA,CAAAA,CAAC,GAAG,uBAAuB,QAAQ,KAAK,UAAU,K,SAAK,sB,GAGlE,UAACJ,EAAAA,CAAUA,CAAAA,CAAC,QAASF,EAAkB,aAAW,Q,SACjD,UAACO,EAAAA,CAASA,CAAAA,CAAAA,E,MAGZ,UAACF,EAAAA,CAAGA,CAAAA,CAAC,GAAIhB,E,SACPE,EACA,UAACiB,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACC,EAAAA,EAAQA,CAAAA,CAAC,KAAMnB,C,KAGjB,UAACe,EAAAA,CAAUA,CAAAA,C,SAAC,mC,YAOnB,ECrIA,EAhBwB,AAAC,I,GAAA,CACxBK,KAAAA,CAAI,CACJC,SAAAA,CAAQ,CAIR,GACA,MACC,UAAC,QACA,MAAO,CAAE,WAAY,WAAY,QAAS,OAAQ,aAAc,KAAM,E,SAErED,EAAK,IAAI,E,EAGb,E,+CCOA,IAAME,EAAmB,AAAC,I,GAAA,CACzBC,SAAAA,CAAQ,CACRC,kBAAAA,CAAiB,CACM,GAEjBC,EAAYC,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAuB,MACnCC,EAAiBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAe,CACrC,MAAOL,EAAS,MAAM,CACtB,aAAc,IAAM,GACpB,iBAAkB,IAAME,EAAU,OAAO,CACzC,SAAU,EACX,GAEA,MACC,UAACX,EAAAA,CAAGA,CAAAA,CACH,IAAKW,EACL,GAAI,CACH,OAAQ,IACR,UAAW,OACX,SAAU,WACV,OAAQ,oBACR,aAAc,EACd,EAAG,CACJ,E,SAEA,UAACX,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,OAAS,GAAgC,OAA9Ba,EAAe,YAAY,GAAG,MACzC,SAAU,WACV,MAAO,MACR,E,SAECA,EAAe,eAAe,GAAG,GAAG,CAAC,AAACE,IACtC,IAAMC,EAAOP,CAAQ,CAACM,EAAY,KAAK,CAAC,CACxC,GAAI,CAACC,EAAM,OAAO,KAElB,IAAMC,EAAWD,AAAc,OAAdA,EAAK,IAAI,CAE1B,MACC,UAAChB,EAAAA,CAAGA,CAAAA,CAEH,GAAI,CACH,SAAU,WACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAS,GAAmB,OAAjBe,EAAY,IAAI,CAAC,MAC5B,UAAY,cAA+B,OAAlBA,EAAY,KAAK,CAAC,OAC3C,QAAS,OACT,WAAY,SACZ,GAAI,CACL,E,SAEA,WAACG,EAAAA,CAAMA,CAAAA,CACN,QAAS,AAACC,GAAMT,EAAkBS,EAAGH,EAAK,EAAE,EAC5C,QAAQ,YACR,GAAI,CACH,QAASC,EAAW,UAAY,UAChC,MAAO,OACP,UAAW,CACV,QAASA,EAAW,UAAY,SACjC,CACD,E,UAECD,EAAK,GAAG,CAAC,KAAGA,EAAK,EAAE,CAAC,I,IAxBjBD,EAAY,GAAG,CA4BvB,E,IAIJ,EAEaK,EAAwB,AAAC,I,GAAA,CACrCC,QAAAA,CAAO,CACPC,WAAAA,CAAU,CACkB,GACtBZ,EAAoBjB,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACzB,CAACC,EAA4C6B,KAC5C7B,EAAM,eAAe,GACrBA,EAAM,cAAc,GACpB4B,EAAWC,EACZ,EACA,CAACD,EAAW,EAGPE,EAAUC,OAAO,IAAI,CAACJ,EAAQ,GAAG,EAAI,CAAC,GACtCK,EAAWD,OAAO,IAAI,CAACJ,EAAQ,IAAI,EAAI,CAAC,GACxCZ,EAAW,IACbe,EAAQ,GAAG,CAAC,AAACR,GAAU,EACzB,IAAKA,EACL,GAAIK,EAAQ,GAAG,CAACL,EAAK,CACrB,KAAM,IACP,OACGU,EAAS,GAAG,CAAC,AAACV,GAAU,EAC1B,IAAKA,EACL,GAAIK,EAAQ,IAAI,CAACL,EAAK,CACtB,KAAM,KACP,IACA,QAED,AAAIP,EAAS,MAAM,EAAI,GAErB,WAACT,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,EAAG,CAAE,E,UACf,UAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,GAAI,CAAE,E,SACfwB,EAAQ,GAAG,CAAC,AAACG,GACb,WAACT,EAAAA,CAAMA,CAAAA,CAEN,QAAS,AAACC,GAAMT,EAAkBS,EAAGE,EAAQ,GAAG,CAACM,EAAO,EACxD,QAAQ,YACR,GAAI,CACH,QAAS,UACT,MAAO,OACP,GAAI,EACJ,GAAI,EACJ,UAAW,CAAE,QAAS,SAAU,CACjC,E,UAECA,EAAO,KAAGN,EAAQ,GAAG,CAACM,EAAO,CAAC,I,EAX1BA,G,GAeR,UAAC3B,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,SAAU,MAAO,E,SAC1B0B,EAAS,GAAG,CAAC,AAACE,GACd,WAACV,EAAAA,CAAMA,CAAAA,CAEN,QAAS,AAACC,GAAMT,EAAkBS,EAAGE,EAAQ,IAAI,CAACO,EAAQ,EAC1D,QAAQ,YACR,GAAI,CACH,QAAS,UACT,MAAO,OACP,GAAI,EACJ,GAAI,EACJ,UAAW,CAAE,QAAS,SAAU,CACjC,E,UAECA,EAAQ,KAAGP,EAAQ,IAAI,CAACO,EAAQ,CAAC,I,EAX7BA,G,MAoBV,UAACpB,EAAAA,CACA,SAAUC,EACV,kBAAmBC,C,EAGtB,E,8CCxKAmB,EAAAA,CAAAA,CAAAA,GAAa,CAACC,KAUP,IAAMC,EAAiB,AAAC,I,GAAA,CAC9BC,SAAAA,CAAQ,CACRC,MAAAA,CAAK,CACLC,WAAAA,CAAU,CACVC,OAAAA,CAAM,CACNC,YAAAA,CAAW,CACU,GACfC,EAAezB,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAuB,MACtC0B,EAAQ1B,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAoB,MAE5B2B,EAAkB9C,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACvB,AAACC,IACA,IAAMsB,EAAOtB,EAAM,MAAM,AACrB0C,CAAAA,GACHA,EAAY,CAAE,GAAIpB,EAAK,EAAE,EAAG,EAAGtB,EAEjC,EACA,CAAC0C,EAAY,EAGRI,EAAsB/C,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,AAACC,IACxC,IAAMsB,EAAOtB,EAAM,MAAM,CACzBsB,EAAK,KAAK,CAAC,QAASA,EAAK,IAAI,CAAC,SAC/B,EAAG,EAAE,EAECyB,EAAqBhD,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,AAACC,IAEvCsB,AADatB,EAAM,MAAM,CACpB,KAAK,CAAC,QAAS,GACrB,EAAG,EAAE,EA2FL,MAzFAgD,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACT,GAAI,CAACL,EAAa,OAAO,CAAE,OAG3B,IAAMM,EAAKd,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAU,CACpB,UAAWQ,EAAa,OAAO,CAC/BL,SAAAA,EACA,MAAOE,GAAc,CACpB,CACC,SAAU,OACV,MAAO,CACN,mBAAoB,cACpB,MAAO,aACP,OAAQ,aACR,cAAe,MACf,cAAe,SACf,gBAAiB,GACjB,YAAa,OACb,MAAO,UACP,qBAAsB,EACtB,qBAAsB,UACtB,UAAW,EACX,MAAO,EACR,CACD,EACA,CACC,SAAU,OACV,MAAO,CACN,MAAO,EACP,aAAc,UACd,qBAAsB,UACtB,qBAAsB,WACtB,cAAe,QAChB,CACD,EACA,CACD,OAAQC,GAAU,CACjB,KAAM,QACN,QAAS,GACT,aAAc,GACd,kBAAmB,KACnB,IAAK,GACL,QAAS,EACV,CACD,GAUA,OARAG,EAAM,OAAO,CAAGK,EAGhBA,EAAG,EAAE,CAAC,MAAO,OAAQJ,GACrBI,EAAG,EAAE,CAAC,YAAa,OAAQH,GAC3BG,EAAG,EAAE,CAAC,WAAY,OAAQF,GAGnB,KACFH,EAAM,OAAO,GAChBA,EAAM,OAAO,CAAC,OAAO,GACrBA,EAAM,OAAO,CAAG,KAElB,CACD,EAAG,CACFN,EACAE,EACAC,EACAI,EACAC,EACAC,EACA,EAGDC,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACT,GAAIJ,EAAM,OAAO,EAAIN,EAAU,CAC9BM,EAAM,OAAO,CAAC,QAAQ,GAAG,MAAM,GAC/BA,EAAM,OAAO,CAAC,GAAG,CAACN,GAGlB,IAAMY,EAAgBT,GAAU,CAC/B,KAAM,QACN,QAAS,GACT,aAAc,GACd,kBAAmB,KACnB,IAAK,GACL,QAAS,EACV,EAEAG,EAAM,OAAO,CAAC,MAAM,CAACM,GAAe,GAAG,EACxC,CACD,EAAG,CAACZ,EAAUG,EAAO,EAGpB,UAAC,OACA,IAAKE,EACL,MAAO,SAAE,MAAO,OAAQ,OAAQ,M,EAAWJ,E,EAG9C,ECpIAJ,EAAAA,CAAAA,CAAAA,GAAa,CAACC,KAEd,IAAMe,EAAoBC,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,AAAC,I,GAAA,CAAEC,KAAAA,CAAI,CAAiB,GAChDC,EAASC,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EACd,IAAO,EACN,QAAS,CACR,QAAS,OACT,QAAS,EACV,EACA,MAAO,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,CACD,OAAQ,CACP,KAAMF,EAAK,GAAG,CAAC,AAACG,GAAgBA,EAAO,EAAE,EACzC,OAAQ,WACR,MAAO,GACP,IAAK,QACN,EACA,KAAM,CACL,KAAM,KACN,MAAO,MACP,OAAQ,MACR,IAAK,MACL,aAAc,EACf,EACA,MAAO,CACN,KAAM,QACN,KAAM,SACN,aAAc,SACd,QAAS,EACV,EACA,MAAO,CACN,KAAM,QACN,KAAM,SACN,IAAK,GACL,IAAK,EACL,aAAc,SACd,QAAS,EACV,EACA,OAAQH,EAAK,GAAG,CAAC,AAACG,GAAiB,EAClC,KAAMA,EAAO,EAAE,CACf,KAAM,OACN,KAAMA,EAAO,IAAI,CAAC,GAAG,CAAC,AAACC,GAAe,CAACA,EAAM,CAAC,CAAEA,EAAM,CAAC,CAAC,EACxD,WAAY,GACZ,WAAY,EACZ,SAAU,CACT,MAAO,QACR,EACA,kBAAmB,GACpB,GACD,GACA,CAACJ,EAAK,EAGP,MACC,UAACK,EAAAA,CAAYA,CAAAA,CACZ,WAAU,GACV,OAAQJ,EACR,MAAO,CAAE,OAAQ,OAAQ,UAAW,QAAS,MAAO,MAAO,C,EAG9D,GAEMK,EAAmBP,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EACxB,AAAC,I,GAAA,CACAQ,WAAAA,CAAU,CACVP,KAAAA,CAAI,CACJQ,KAAAA,CAAI,CAKJ,GACMP,EAASC,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EACd,IAAO,EACN,QAAS,CACR,QAAS,GACT,QAAS,OACT,YAAa,CACZ,KAAM,QACP,CACD,EACA,KAAM,CACL,aAAc,EACf,EACA,MAAO,CACN,KAAMM,EACN,UAAW,CACV,OAAQ,GACR,UAAW,AAACC,GACXA,EAAM,MAAM,CAAG,GAAM,GAAyB,OAAvBA,EAAM,SAAS,CAAC,EAAG,IAAI,OAAOA,CACvD,CACD,EACA,MAAO,CACN,KAAM,OACP,EACA,OAAQ,CACP,KAAMF,EACN,KAAM,MACN,KAAMC,EAAK,GAAG,CAAC,AAACE,GACRV,CAAI,CAACU,EAAI,EAEjB,SAAU,CACT,MAAO,SACP,UAAW,kBACZ,EACA,kBAAmB,GACpB,CACD,GACA,CAACV,EAAMQ,EAAMD,EAAW,EAGzB,MACC,UAACF,EAAAA,CAAYA,CAAAA,CACZ,WAAU,GACV,OAAQJ,EACR,MAAO,CAAE,OAAQ,OAAQ,UAAW,QAAS,MAAO,MAAO,C,EAG9D,GAGKU,EAAuBZ,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAC5B,AAAC,I,GAAA,CACAC,KAAAA,CAAI,CACJX,YAAAA,CAAW,CAIX,GACMuB,EAAgBV,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAAQ,IACtBF,EACL,CAACA,EAAK,EAEHf,EAAWiB,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAChB,IAAM,IACFU,EAAc,KAAK,CAAC,GAAG,CAAC,AAAC3C,GAAe,EAC1C,KAAM,CACL,GAAIA,EAAK,EAAE,CACX,MAAOA,EAAK,KAAK,CACjB,KAAMA,EAAK,IAAI,EAAI,GACnB,MAAOA,EAAK,KAAK,EAAI,UACrB,EAAGA,EAAK,CAAC,CACT,EAAGA,EAAK,CAAC,AACV,CACD,OACG2C,EAAc,KAAK,CAAC,GAAG,CAAC,AAACC,GAAe,EAC1C,KAAM,CACL,GAAK,GAAiBA,MAAAA,CAAfA,EAAK,MAAM,CAAC,KAAe,OAAZA,EAAK,MAAM,EACjC,OAAQA,EAAK,MAAM,CACnB,OAAQA,EAAK,MAAM,AACpB,CACD,IACA,CACD,CAACD,EAAc,EAIVE,EAAkBZ,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EACvB,IAAM,CACL,CACC,SAAU,OACV,MAAO,CACN,mBAAoB,cACpB,MAAO,aACP,OAAQ,aACR,cAAe,MACf,cAAe,SACf,gBAAiB,GACjB,YAAa,OACb,MAAO,UACP,qBAAsB,EACtB,qBAAsB,UACtB,UAAW,EAEX,MAAO,EACR,CACD,EACA,CACC,SAAU,OACV,MAAO,CACN,MAAO,EACP,aAAc,UACd,qBAAsB,UACtB,qBAAsB,WACtB,cAAe,QAChB,CACD,EACA,CACD,EAAE,EAGH,MACC,UAACjD,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,OAAQ,OAAQ,UAAW,QAAS,MAAO,MAAO,E,SAC5D,UAAC+B,EAAcA,CACd,SAAUC,EACV,MAAO,CAAE,MAAO,OAAQ,OAAQ,MAAO,EACvC,WAAY6B,EACZ,OACC,CACC,KAAMF,EAAc,KAAK,CAAC,MAAM,CAAG,IAAO,SAAW,QACrD,QAAS,GACT,aAAc,GACd,kBAAmB,KACnB,IAAK,GACL,QAAS,EACV,EAED,YAAavB,C,IAIjB,GAUY0B,EAAe,AAAC,I,GAAA,CAC5BC,OAAAA,CAAM,CACN1C,QAAAA,CAAO,CACPe,YAAAA,CAAW,CACXkB,WAAAA,CAAU,CACS,GACbU,EAAqBvE,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,AAACwE,IACvC,GAAI,CAACA,EAAc,MAAO,EAAE,CAE5B,IAAMC,EAAS,EAAE,CACjB,IAAK,IAAMT,KAAOhC,OAAO,IAAI,CAACwC,GAAe,CAC5C,IAAME,EAAUF,AAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAc,CAACR,EAAI,AAAD,GAAK,CAAC,EAClCW,EAAU,CACf,GAAIX,EACJ,KAAMU,EAAQ,GAAG,CAAC,AAACE,IAClB,IAAMC,EAAI7C,OAAO,IAAI,CAAC4C,EAAI,CAAC,EAAE,CAC7B,MAAO,CACN,EAAGE,WAAWD,GACd,EAAGC,WAAWF,CAAG,CAACC,EAAE,CACrB,CACD,EACD,EACAJ,EAAO,IAAI,CAACE,EACb,CACA,OAAOF,CACR,EAAG,EAAE,EAECM,EAAoB/E,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACzB,AAACwE,IACA,GAAI,CAACA,EAAc,MAAO,CAAC,EAE3B,IAAMC,EAAS,CAAC,EAChB,IAAK,IAAMV,KAAS/B,OAAO,MAAM,CAACwC,GACjC,IAAK,IAAMR,KAAOhC,OAAO,IAAI,CAAC+B,GAE7BU,CAAM,CAACT,EAAI,CAAGD,AAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAO,CAACC,EAAI,AAAD,GAAK,CAAC,EAGjC,OAAOS,CACR,EACA,EAAE,EAGGO,EAAsBhF,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAC3B,AAACwE,IACA,GAAI,CAACA,GAAgBxC,AAAuC,IAAvCA,OAAO,MAAM,CAACwC,GAAc,MAAM,CAAQ,MAAO,EAAE,CACxE,IAAMS,EAAS,IAAIC,IAInB,OAHAlD,OAAO,MAAM,CAACwC,GAAc,OAAO,CAAC,AAACW,IACpCnD,OAAO,IAAI,CAACmD,GAAK,OAAO,CAAC,AAACnB,GAAQiB,EAAO,GAAG,CAACjB,GAC9C,GACOoB,MAAM,IAAI,CAACH,GAAQ,IAAI,EAC/B,EACA,EAAE,EAGGI,EAAiBrF,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,AAACwE,IACnC,GAAI,CAACA,GAAgB,CAACA,EAAa,KAAK,CAAE,MAAO,CAAE,MAAO,EAAE,CAAE,MAAO,EAAE,AAAC,EAExE,IAAMc,EAAiB,IAAIC,IAG3Bf,EAAa,KAAK,CAAC,OAAO,CAAC,AAACjD,IAE3B,IAAMO,EAASP,EAAK,EAAE,EAAIA,EAAK,KAAK,CAE9BiE,EAAkB,mBACpBjE,GAAAA,CACH,GAAIO,EAEJ,MAAOP,EAAK,KAAK,EAAIO,EAErB,KAAMP,EAAK,IAAI,EAAI,GACnB,MAAOA,EAAK,KAAK,EAAI,S,EAGlB,CAAC+D,EAAe,GAAG,CAACE,EAAgB,EAAE,GACzCF,EAAe,GAAG,CAACE,EAAgB,EAAE,CAAEA,EAEzC,GAGA,IAAMC,EAAmBjB,EAAa,KAAK,CAAC,GAAG,CAAC,AAACL,IAEhD,IAAMuB,EACL,AAAuB,UAAvB,OAAOvB,EAAK,MAAM,CACfA,EAAK,MAAM,CAAC,EAAE,EAAIA,EAAK,MAAM,CAAC,KAAK,CACnCA,EAAK,MAAM,CAETwB,EACL,AAAuB,UAAvB,OAAOxB,EAAK,MAAM,CACfA,EAAK,MAAM,CAAC,EAAE,EAAIA,EAAK,MAAM,CAAC,KAAK,CACnCA,EAAK,MAAM,CAEf,MAAO,mBACHA,GAAAA,CACH,OAAQuB,EACR,OAAQC,C,EAEV,GAOA,MALsB,CACrB,MAAOP,MAAM,IAAI,CAACE,EAAe,MAAM,IACvC,MAAOG,CACR,CAGD,EAAG,EAAE,EAECG,EAAyB5F,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAC9B,CAACuB,EAAWtB,KACPA,IACHA,EAAM,cAAc,GACpBA,EAAM,eAAe,IAElBsB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM,EAAE,AAAD,GAEVoB,EADepB,EAAK,EAAE,CAAC,QAAQ,CAAC,KAAOA,EAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAGA,EAAK,EAAE,CAGxE,EACA,CAACoB,EAAY,EAGd,GAAI2B,AAAW,oBAAXA,EAA8B,CACjC,IAAMuB,EAAkBtB,EAAmB3C,GAE3C,MAEC,UAAC,OACA,UAAU,QACV,QAAS,AAACF,IACTA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,EACA,UAAW,AAACA,IACXA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,E,SAEA,UAAChB,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACyC,EAAAA,CAAkB,KAAMyC,C,MAI7B,CAAO,GAAIvB,EAAO,QAAQ,CAAC,iBAAkB,CAC5C,IAAMwB,EAAef,EAAkBnD,GACjCkC,EAAOkB,EAAoBpD,GACjC,MAEC,UAAC,OACA,UAAU,QACV,QAAS,AAACF,IACTA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,EACA,UAAW,AAACA,IACXA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,E,SAEA,UAAChB,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACiD,EAAAA,CACA,WAAYC,EACZ,KAAMiC,EACN,KAAMhC,C,MAKX,CAAO,IAAIQ,EAAO,QAAQ,CAAC,aAyB1B,OAAO,IAzBiC,EACxC,IAAMyB,EAAcV,EAAezD,GAEnC,MAEC,UAAC,OACA,UAAU,QACV,QAAS,AAACF,IACTA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,EACA,UAAW,AAACA,IACXA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,E,SAEA,UAAChB,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACsD,EAAAA,CACA,KAAM8B,EACN,YAAaH,C,MAKlB,CAGD,E,gDCjaO,IAAMI,EAA6B,AAAC,I,GAAA,CAC1CpE,QAAAA,CAAO,CAC0B,GAC3BV,EAAYC,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAuB,MACnC,CAAC8E,EAAgBC,EAAkB,CAAGC,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAS,GAE/CC,EAAqB5C,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAC1B,K,IACC6C,E,MAAAA,OAAAA,GAAAA,MAAAA,CAAAA,EAAAA,EAAS,UAAU,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,MAAM,CAAC,AAAC9E,GAAcA,AAAc,UAAdA,EAAK,IAAI,IAAiB,EAAE,A,EACxE,CAACK,MAAAA,EAAAA,KAAAA,EAAAA,EAAS,UAAU,CAAC,EAGtBqB,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACT,IAAMqD,EAAc,KACfpF,EAAU,OAAO,EACpBgF,EAAkBhF,EAAU,OAAO,CAAC,WAAW,CAEjD,EAIA,OAFAoF,IACAC,OAAO,gBAAgB,CAAC,SAAUD,GAC3B,IAAMC,OAAO,mBAAmB,CAAC,SAAUD,EACnD,EAAG,EAAE,EAEL,IAAME,EAAchD,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAAQ,IAC3B,AAAIyC,AAAmB,IAAnBA,EAA6B,EAC7BA,GAAkB,IAAY,EAC3B,EACL,CAACA,EAAe,EAEbQ,EAAOjD,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAAQ,KACpB,IAAMiB,EAAkB,EAAE,CAC1B,IAAK,IAAIiC,EAAI,EAAGA,EAAIN,EAAmB,MAAM,CAAEM,GAAKF,EACnD/B,EAAO,IAAI,CAAC2B,EAAmB,KAAK,CAACM,EAAGA,EAAIF,IAE7C,OAAO/B,CACR,EAAG,CAAC2B,EAAoBI,EAAY,EAE9BpF,EAAiBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAe,CACrC,MAAOoF,EAAK,MAAM,CAClB,iBAAkB,IAAMvF,EAAU,OAAO,CACzC,aAAclB,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,IAAM,IAAK,EAAE,EACvC,SAAU,CACX,GAEM2G,EAAa3G,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,AAACmC,I,IACfyE,EAAhB,IAAMC,EAAUD,AAAAA,OAAAA,CAAAA,EAAAA,EAAQ,QAAQ,AAAD,EAAfA,KAAAA,EAAAA,EAAkB,UAAU,CAAC,SAAQ,GAAKzE,EAAQ,KAAK,CACjE2E,EACL9E,OAAO,MAAM,CAACG,EAAS,UACvBA,AAAkB,OAAlBA,EAAQ,KAAK,EACbA,AAAkB4E,SAAlB5E,EAAQ,KAAK,CAEd,MACC,UAAC6E,EAAAA,CAAIA,CAAAA,CACJ,GAAI,CACH,MAAO,OACP,QAAS,OACT,cAAe,SACf,OAAQ,IACR,UAAW,GACZ,E,SAEA,WAACC,EAAAA,CAAWA,CAAAA,CACX,GAAI,CAAE,SAAU,EAAG,QAAS,OAAQ,cAAe,QAAS,E,UAE5D,UAACzG,EAAAA,CAAUA,CAAAA,CACV,QAAQ,KACR,UAAU,MACV,GAAI,CAAE,UAAW,YAAa,E,SAE7B2B,EAAQ,IAAI,A,GAEb0E,GACA,UAACK,EAAAA,CAASA,CAAAA,CACT,UAAU,MACV,GAAI,CACH,UAAW,IACX,MAAO,OACP,UAAW,UACX,GAAI,EACJ,OAAQ,gBACT,EACA,MAAQ,QAAkC/E,MAAAA,CAA3BA,EAAQ,QAAQ,CAAC,YAAwB,OAAdA,EAAQ,KAAK,EACvD,IAAM,oBAAgC,OAAbA,EAAQ,IAAI,C,GAGtC,CAAC0E,GAAWC,GACZ,UAACtG,EAAAA,CAAUA,CAAAA,CACV,QAAQ,QACR,UAAU,MACV,GAAI,CACH,WAAY,WACZ,UAAW,YACX,GAAI,EACJ,EAAG,EACH,gBAAiB,UACjB,aAAc,EACd,SAAU,OACV,UAAW,GACZ,E,SAEC,AAAyB,UAAzB,OAAO2B,EAAQ,KAAK,CAClBgF,KAAK,SAAS,CAAChF,EAAQ,KAAK,CAAE,KAAM,GACpCiF,OAAOjF,EAAQ,KAAK,C,GAGxB,CAAC2E,GAAY,CAACD,GACd,UAACrG,EAAAA,CAAUA,CAAAA,CACV,QAAQ,QACR,GAAI,CACH,UAAW,SACX,GAAI,EACJ,EAAG,EACH,gBAAiB,UACjB,aAAc,EACd,SAAU,EACV,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,UAAW,EACZ,E,SACA,wB,OAON,EAAG,EAAE,SAEL,AAAK4E,MAAM,OAAO,CAACxD,MAAAA,EAAAA,KAAAA,EAAAA,EAAS,UAAU,EASlCA,AAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS,UAAU,CAAC,MAAM,AAAD,IAAM,EAC3B,UAACpB,EAAAA,CAAUA,CAAAA,CAAC,GAAI,CAAE,EAAG,CAAE,E,SAAG,4B,GAIjC,UAACD,EAAAA,CAAGA,CAAAA,CACH,IAAKW,EACL,GAAI,CACH,OAAQ,QACR,SAAU,OACV,EAAG,EACH,MAAO,MACR,E,SAEA,UAACX,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,OAAS,GAAgC,OAA9Ba,EAAe,YAAY,GAAG,MACzC,MAAO,OACP,SAAU,UACX,E,SAECA,EAAe,eAAe,GAAG,GAAG,CAAC,AAACiG,IACtC,IAAMC,EAAWb,CAAI,CAACY,EAAW,KAAK,CAAC,QACvC,AAAKC,EAGJ,UAAC/G,EAAAA,CAAGA,CAAAA,CAEH,GAAI,CACH,SAAU,WACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAS,GAAkB,OAAhB8G,EAAW,IAAI,CAAC,MAC3B,UAAY,cAA8B,OAAjBA,EAAW,KAAK,CAAC,MAC3C,E,SAEA,UAACE,EAAAA,CAAIA,CAAAA,CAAC,UAAS,GAAC,QAAS,EAAG,GAAI,CAAE,MAAO,MAAO,E,SAC9CD,EAAS,GAAG,CAAC,AAACnF,GACd,UAACoF,EAAAA,CAAIA,CAAAA,CAEJ,KAAM,CAAE,GAAI,GAAI,GAAI,CAAE,EACtB,GAAI,CAAE,QAAS,MAAO,E,SAErBZ,EAAWxE,E,EAJPA,EAAQ,EAAE,E,IAbbkF,EAAW,GAAG,EAJC,IA2BvB,E,KAzDD,WAAC7G,EAAAA,CAAUA,CAAAA,CAAC,GAAI,CAAE,EAAG,CAAE,EAAG,MAAM,Q,UAAQ,gFAEjC,MAAOoB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS,UAAU,AAAD,EAAE,I,EA2DrC,E,sEC0CA,MAzOsD,AAAC,I,GAAA,CAAE4F,MAAAA,CAAK,CAAE,GACzD5E,EAAezB,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAuB,MACtCsG,EAAatG,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAuB,MACpC,CAACuG,EAAMC,EAAQ,CAAGxB,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAS,GAC3B,CAACyB,EAAUC,EAAY,CAAG1B,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAS,CAAE,EAAG,EAAG,EAAG,CAAE,GAChD,CAAC2B,EAAYC,EAAc,CAAG5B,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAS,IACvC,CAAC6B,EAAWC,EAAa,CAAG9B,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAS,CAAE,EAAG,EAAG,EAAG,CAAE,GAExDlD,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACTiF,EAAAA,CAAAA,CAAAA,UAAkB,CAAC,CAClB,YAAa,GACb,MAAO,OACP,cAAe,QAEf,WAAY,WACb,EACD,EAAG,EAAE,EAELjF,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KAuBTkF,AAtBsB,WACrB,GAAIV,EAAW,OAAO,EAAID,EACzB,GAAI,CACH,IAAMY,EAAM,WAAqB,OAAXC,KAAK,GAAG,GAG9BZ,CAAAA,EAAW,OAAO,CAAC,SAAS,CAAG,GAG/B,GAAM,CAAEa,IAAAA,CAAG,CAAE,CAAG,MAAMJ,EAAAA,CAAAA,CAAAA,MAAc,CAACE,EAAIZ,EACzCC,CAAAA,EAAW,OAAO,CAAC,SAAS,CAAGa,EAG/BX,EAAQ,GACRE,EAAY,CAAE,EAAG,EAAG,EAAG,CAAE,EAC1B,CAAE,MAAOU,EAAO,CACfC,QAAQ,KAAK,CAAC,2BAA4BD,GAC1Cd,EAAW,OAAO,CAAC,SAAS,CAAI,oEAAyE,OAANc,EAAM,SAC1G,CAEF,IAGD,EAAG,CAACf,EAAM,EAGVvE,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACT,IAAMwF,EAAY7F,EAAa,OAAO,CACtC,GAAI,CAAC6F,EAAW,OAEhB,IAAMC,EAAgB,AAAChH,IACtBA,EAAE,cAAc,EACjB,EAIA,OAFA+G,EAAU,gBAAgB,CAAC,QAASC,EAAe,CAAE,QAAS,EAAM,GAE7D,KACND,EAAU,mBAAmB,CAAC,QAASC,EACxC,CACD,EAAG,EAAE,EAEL,IAAMC,EAAe3I,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,KAChC2H,EAAQ,AAACiB,GAASC,KAAK,GAAG,CAACD,AAAO,IAAPA,EAAY,GACxC,EAAG,EAAE,EAECE,EAAgB9I,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,KACjC2H,EAAQ,AAACiB,GAASC,KAAK,GAAG,CAACD,EAAO,IAAK,IACxC,EAAG,EAAE,EAECG,EAAkB/I,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,KACnC2H,EAAQ,GACRE,EAAY,CAAE,EAAG,EAAG,EAAG,CAAE,EAC1B,EAAG,EAAE,EAECmB,EAAkBhJ,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACvB,AAAC0B,IACiB,IAAbA,EAAE,MAAM,GACXqG,EAAc,IACdE,EAAa,CACZ,EAAGvG,EAAE,OAAO,CAAGkG,EAAS,CAAC,CACzB,EAAGlG,EAAE,OAAO,CAAGkG,EAAS,CAAC,AAC1B,GAEF,EACA,CAACA,EAAS,EAGLqB,EAAkBjJ,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACvB,AAAC0B,IACIoG,GACHD,EAAY,CACX,EAAGnG,EAAE,OAAO,CAAGsG,EAAU,CAAC,CAC1B,EAAGtG,EAAE,OAAO,CAAGsG,EAAU,CAAC,AAC3B,EAEF,EACA,CAACF,EAAYE,EAAU,EAGlBkB,EAAgBlJ,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,KACjC+H,EAAc,GACf,EAAG,EAAE,EAECoB,EAAcnJ,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACnB,AAAC0B,IACA,GAAIkB,EAAa,OAAO,CAAE,CACzB,IAAMwG,EAAOxG,EAAa,OAAO,CAAC,qBAAqB,GACjDyG,EAAUD,EAAK,KAAK,CAAG,EACvBE,EAAUF,EAAK,MAAM,CAAG,EAExBG,EAAQ7H,EAAE,MAAM,CAAG,EAAI,GAAM,IAC7B8H,EAAUX,KAAK,GAAG,CAAC,GAAKA,KAAK,GAAG,CAAC,GAAInB,EAAO6B,IAG5CE,EAAS/H,EAAE,OAAO,CAAG0H,EAAK,IAAI,CAC9BM,EAAShI,EAAE,OAAO,CAAG0H,EAAK,GAAG,CAE7BO,EAAUF,AAAAA,CAAAA,EAASJ,CAAM,EAAM,GAAIE,CAAI,EACvCK,EAAUF,AAAAA,CAAAA,EAASJ,CAAM,EAAM,GAAIC,CAAI,EAE7C5B,EAAQ6B,GACR3B,EAAY,AAACe,GAAU,EACtB,EAAGA,EAAK,CAAC,CAAGe,EACZ,EAAGf,EAAK,CAAC,CAAGgB,CACb,GACD,CACD,EACA,CAAClC,EAAK,EAGP,MACC,WAACmC,EAAAA,CAAKA,CAAAA,CACL,UAAW,EACX,GAAI,CACH,OAAQ,IACR,MAAO,OACP,QAAS,OACT,cAAe,SACf,SAAU,QACX,E,UAEA,WAACC,EAAAA,CAAOA,CAAAA,CACP,QAAQ,QACR,GAAI,CACH,gBAAiB,mBACjB,aAAc,EACd,YAAa,UACb,UAAW,EACZ,E,UAEA,UAACtJ,EAAAA,CAAUA,CAAAA,CAAC,QAAQ,KAAK,UAAU,MAAM,GAAI,CAAE,SAAU,CAAE,E,SAAG,iB,GAI9D,WAACD,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,QAAS,OAAQ,IAAK,CAAE,E,UAClC,UAACJ,EAAAA,CAAOA,CAAAA,CAAC,MAAM,U,SACd,UAACC,EAAAA,CAAUA,CAAAA,CAAC,QAASuI,EAAc,KAAK,Q,SACvC,UAACoB,EAAAA,CAAMA,CAAAA,CAAAA,E,KAIT,UAAC5J,EAAAA,CAAOA,CAAAA,CAAC,MAAM,W,SACd,UAACC,EAAAA,CAAUA,CAAAA,CAAC,QAAS0I,EAAe,KAAK,Q,SACxC,UAACkB,EAAAA,CAAOA,CAAAA,CAAAA,E,KAIV,UAAC7J,EAAAA,CAAOA,CAAAA,CAAC,MAAM,a,SACd,UAACC,EAAAA,CAAUA,CAAAA,CAAC,QAAS2I,EAAiB,KAAK,Q,SAC1C,UAACkB,EAAAA,CAAiBA,CAAAA,CAAAA,E,WAMtB,WAAC1J,EAAAA,CAAGA,CAAAA,CACH,IAAKqC,EACL,GAAI,CACH,KAAM,EACN,SAAU,SACV,OAAQkF,EAAa,WAAa,OAClC,gBAAiB,qBACjB,SAAU,WACV,WAAY,MACb,EACA,YAAakB,EACb,YAAaC,EACb,UAAWC,EACX,aAAcA,EACd,QAASC,E,UAET,UAAC5I,EAAAA,CAAGA,CAAAA,CACH,IAAKkH,EACL,GAAI,CACH,UAAY,aAA6BG,MAAAA,CAAjBA,EAAS,CAAC,CAAC,QAA6BF,MAAAA,CAAvBE,EAAS,CAAC,CAAC,cAAiB,OAALF,EAAK,KACrE,gBAAiB,gBACjB,WAAYI,EAAa,OAAS,0BAClC,MAAO,OACP,OAAQ,OACR,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,SAAU,WACV,IAAK,EACL,KAAM,EACN,QAAS,CACR,SAAU,OACV,UAAW,OACX,cAAe,MAChB,CACD,C,GAID,WAACvH,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,SAAU,WACV,OAAQ,GACR,MAAO,GACP,gBAAiB,mBACjB,GAAI,EACJ,GAAI,GACJ,aAAc,EACd,SAAU,UACV,QAAS,EACV,E,UAECsI,KAAK,KAAK,CAACnB,AAAO,IAAPA,GAAY,I,QAK7B,EClOawC,EAAiB,AAAC,I,GAAA,CAC9B5F,OAAAA,CAAM,CACN1C,QAAAA,CAAO,CACPuI,YAAAA,CAAW,CACXC,gBAAAA,CAAe,CACfvI,WAAAA,CAAU,CACVwI,SAAAA,CAAQ,CACRC,iBAAAA,CAAgB,CAChBzG,WAAAA,CAAU,CACW,GACf0G,EAAcpJ,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAuB,MAErCqJ,EAAiBxK,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,KAC9BmK,AAAgB,aAAhBA,GAA8BI,EAAY,OAAO,EACpDE,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAASF,EAAY,OAAO,CAAE,CAC7B,OAAQ,MACR,IAAK,GACL,KAAM,EACP,GAAG,SAAS,CAAC3I,EAEf,EAAG,CAACA,EAASuI,EAAY,EAMzB,GAJAlH,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACTuH,GACD,EAAG,CAACA,EAAe,EAEf,CAAC5I,EACJ,MAAO,UAAC,OAAI,UAAU,gB,SAAgB,uB,GAGvC,GAAIuI,AAAgB,qBAAhBA,EACH,GAAI7F,AAAW,0BAAXA,EACH,MAAO,UAAC0B,EAA0BA,CAAC,QAASpE,C,QACtC,GACN0C,AAAW,oBAAXA,GACAA,EAAO,QAAQ,CAAC,kBAChBA,EAAO,QAAQ,CAAC,aAEhB,MAEC,UAAC,OACA,UAAU,QACV,QAAS,AAAC5C,IACTA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,EACA,UAAW,AAACA,IACXA,EAAE,eAAe,GACjBA,EAAE,cAAc,EACjB,E,SAEA,UAAChB,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAAC0D,EAAYA,CACZ,OAAQC,EACR,QAAS1C,EACT,YAAaC,EACb,WAAYgC,C,YAKV,GAAIS,AAAW,oBAAXA,EACV,MACC,UAAC3C,EAAqBA,CAAC,QAASC,EAAS,WAAYC,C,QAGtD,MACC,UAAC,OACA,UAAU,oBACV,MAAO,CAAE,WAAYuI,CAAgB,E,SAErC,UAAC1J,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACC,EAAAA,EAAQA,CAAAA,CAAC,KAAMgB,EAAS,iBAAkB8I,EAAAA,CAAiBA,A,OAK1D,GAAIP,AAAgB,aAAhBA,EACV,MACC,UAAC,OACA,UAAU,uCACV,MAAO,CAAE,WAAYC,CAAgB,E,SAErC,UAAC,OAAI,IAAKG,C,KAGN,GAAIJ,AAAgB,iBAAhBA,EACV,MACC,UAAC,OACA,UAAU,oBACV,MAAO,CACN,WAAYC,EACZ,MAAO,OACP,OAAQ,QACR,SAAU,SACV,SAAU,WACV,QAAS,EACT,OAAQ,EACR,aAAc,KACf,E,SAEA,UAACO,EAAcA,CAAC,MAAO/I,C,KAGnB,GAAIuI,AAAgB,cAAhBA,EACV,MACC,UAAC,OACA,UAAU,iCACV,MAAO,CAAE,WAAYC,CAAgB,E,SAErC,UAAC,OAEA,wBAAyB,CAAE,OAAQxI,CAAQ,C,KAIxC,GAAIuI,AAAgB,cAAhBA,EACV,MACC,UAAC,OAAI,UAAU,oBAAoB,MAAO,CAAE,WAAY,aAAc,E,SACrE,UAAC,OAEA,wBAAyB,CAAE,OAAQvI,CAAQ,EAC3C,MAAO,CAAE,WAAY,aAAc,C,UAIhC,GAAIuI,AAAgB,kBAAhBA,EACV,MACC,UAAC,OAAI,UAAU,oBAAoB,MAAO,CAAE,WAAY,aAAc,E,SACrE,UAAC,OACA,IAAM,6BAAoC,OAARvI,GAClC,IAAI,WACJ,MAAO,CAAE,WAAY,aAAc,C,UAIhC,GAAIuI,AAAgB,cAAhBA,GAA+BA,AAAgB,eAAhBA,EACzC,MACC,UAAC,OACA,UAAU,oBACV,MAAO,CAAE,WAAYC,CAAgB,E,SAErC,UAAC,OAAI,IAAM,QAA6BxI,MAAAA,CAAtBuI,EAAY,YAAkB,OAARvI,GAAW,IAAI,S,UAGnD,GAAIuI,AAAgB,kBAAhBA,EACV,MACC,UAAC,OACA,UAAU,oBACV,MAAO,CAAE,WAAYC,CAAgB,E,SAErC,UAAC1J,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACC,EAAAA,EAAQA,CAAAA,CAAC,KAAMgB,C,YAIb,GAAIuI,AAAgB,cAAhBA,EACV,MACC,UAAC,OACA,UAAU,oBACV,MAAO,CAAE,WAAYC,CAAgB,E,SAErC,UAAC1J,EAAAA,QAAQA,CAAAA,CAAC,SAAU,UAACC,EAAAA,CAAgBA,CAAAA,CAAAA,G,SACpC,UAACiK,EAAeA,CAAC,SAAS,OAAO,KAAMhJ,C,YAIpC,GAAIuI,AAAgB,aAAhBA,EACV,MACC,UAAC,OACA,UAAU,oBACV,MAAO,CAAE,WAAYC,CAAgB,E,SAErC,UAACS,EAAAA,EAAYA,CAAAA,CACZ,MAAOR,EACP,aAAY,GACZ,iBAAkBC,C,UAKrB,MACC,WAAC,OAAI,UAAU,gB,UAAgB,6BACHH,E,EAI/B,ECjMaW,GAAc,AAAC,QAoEvBC,EAAAA,E,GApEuB,CAC3BC,QAAAA,CAAO,CACPzC,MAAAA,CAAK,CACL0C,WAAAA,CAAU,CACVC,YAAAA,CAAW,CACXd,gBAAAA,CAAe,CACfvI,WAAAA,CAAU,CACVwI,SAAAA,CAAQ,CACRC,iBAAAA,CAAgB,CAChBhG,OAAAA,CAAM,CACY,GACZ6G,EAAa3H,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAClB,K,IAAM4H,EAAAA,EAAAA,E,aAAAA,GAAAA,MAAAA,CAAAA,EAAAA,EAAa,OAAO,AAAD,GAAnBA,MAAAA,CAAAA,EAAAA,CAAsB,CAAC,EAAE,AAAD,GAAxBA,MAAAA,CAAAA,EAAAA,EAA2B,MAAM,AAAD,EAAhCA,KAAAA,EAAAA,EAAmC,IAAI,A,EAC7C,CAACF,EAAY,EAERG,EAAoB7H,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EACzB,K,IAAM8H,EAAAA,EAAAA,EAAAA,EAAAA,E,aAAAA,GAAAA,MAAAA,CAAAA,EAAAA,EAAa,OAAO,AAAD,GAAnBA,MAAAA,CAAAA,EAAAA,CAAsB,CAAC,EAAE,AAAD,GAAxBA,MAAAA,CAAAA,EAAAA,EAA2B,MAAM,AAAD,GAAhCA,MAAAA,CAAAA,EAAAA,EAAmC,WAAW,AAAD,GAA7CA,MAAAA,CAAAA,EAAAA,EAAgD,KAAK,CAAC,IAAG,EAAzDA,KAAAA,EAAAA,CAA4D,CAAC,EAAE,A,EACrE,CAACJ,EAAY,EAERrH,EAAaL,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAClB,K,IAAMuH,EAAAA,E,aAAAA,GAAAA,MAAAA,CAAAA,EAAAA,EAAa,OAAO,AAAD,GAAnBA,MAAAA,CAAAA,EAAAA,CAAsB,CAAC,EAAE,AAAD,EAAxBA,KAAAA,EAAAA,EAA2B,WAAW,A,EAC5C,CAACG,EAAY,SAGd,AAAIF,EAEF,UAACzK,EAAAA,CAAGA,CAAAA,CACH,UAAU,iBACV,GAAI,CACH,SAAU,WACV,QAAS,EACT,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,UAAW,OACZ,E,SAEA,UAACI,EAAAA,CAAgBA,CAAAA,CAAAA,E,GAKhB4H,EAEF,UAAChI,EAAAA,CAAGA,CAAAA,CACH,UAAU,kCACV,GAAI,CAAE,SAAU,WAAY,QAAS,CAAE,E,SAEvC,WAAC,OAAI,UAAU,gBAAgB,MAAO,CAAE,UAAW,MAAO,E,UAAG,wBACtCgI,EAAM,OAAO,C,KAMlC0C,EAaDF,OAAAA,GAAAA,MAAAA,CAAAA,EAAAA,EAAa,OAAO,AAAD,GAAnBA,MAAAA,CAAAA,EAAAA,CAAsB,CAAC,EAAE,AAAD,EAAxBA,KAAAA,EAAAA,EAA2B,KAAK,IAAKhE,OAEvC,UAACxG,EAAAA,CAAGA,CAAAA,CACH,UAAU,kCACV,GAAI,CAAE,SAAU,WAAY,QAAS,CAAE,E,SAEvC,WAAC,OAAI,UAAU,gBAAgB,MAAO,CAAE,UAAW,MAAO,E,UAAG,kBAC5C2K,EAAY,OAAO,CAAC,EAAE,CAAC,KAAK,C,KAM5C,AAACC,GAAeE,EAcnB,UAAC9K,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,SAAU,WACV,QAAS,EACT,KAAM,EACN,UAAW,QACX,QAAS,OACT,cAAe,SACf,SAAU,QACX,E,SAEA,UAACA,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,GAAI,EACJ,KAAM,EACN,SAAU,OACV,uBAAwB,CACvB,MAAO,MACP,OAAQ,KACT,EACA,6BAA8B,CAC7B,WAAY,UACZ,aAAc,KACf,EACA,6BAA8B,CAC7B,WAAY,OACZ,aAAc,KACf,EACA,mCAAoC,CACnC,WAAY,MACb,CACD,E,SAEA,UAAC2J,EAAcA,CACd,OAAQ5F,EACR,QAAS6G,EACT,YAAaE,EACb,gBAAiBjB,EACjB,WAAYvI,EACZ,SAAUwI,EACV,iBAAkBC,EAClB,WAAYzG,C,OArDd,UAACtD,EAAAA,CAAGA,CAAAA,CACH,UAAU,kCACV,GAAI,CAAE,SAAU,WAAY,QAAS,CAAE,E,SAEvC,UAAC,OAAI,UAAU,gBAAgB,MAAO,CAAE,UAAW,MAAO,E,SAAG,sD,KA9B9D,UAACA,EAAAA,CAAGA,CAAAA,CACH,UAAU,kCACV,GAAI,CAAE,SAAU,WAAY,QAAS,CAAE,E,SAEvC,UAAC,OAAI,UAAU,gBAAgB,MAAO,CAAE,UAAW,MAAO,E,SAAG,oB,IAgFjE,ECrIagL,GAAOlI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,AAAC,I,GAAA,CAAEiB,OAAAA,CAAM,CAAEkH,GAAAA,CAAE,CAAa,GAC5C,CACL,KAAMP,CAAU,CAChB,UAAWD,CAAO,CAClBzC,MAAAA,CAAK,CACLkD,QAAAA,CAAO,CACP,CAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EACHpH,EACA,CAAC,EACD,CAEC,UAAW,IACX,OAAQ,IACR,qBAAsB,GACtB,mBAAoB,GACpB,MAAO,EACP,WAAY,AAACqH,GACZ9C,KAAK,GAAG,CAAC,IAAO,GAAK8C,EAAc,IACrC,GAGKC,EAAcC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IACd,CAAE,UAAWC,CAAU,CAAEC,YAAAA,CAAW,CAAE,CAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAGzC,CAACtM,EAAaC,EAAgBsM,EAAgB,CAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EACtD,GACA,CACC,kBAAmB,EACpB,GAGK,CAACC,EAAKC,EAAQC,EAAgB,CAAGH,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAkB,UAAW,CACnE,kBAAmB,GACnB,WAAY,GACb,GAEM,CAACI,EAAWC,EAAcC,EAAoB,CAAGN,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAErD,KAAM,CACP,kBAAmB,EACpB,GAGMO,EAAiBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAiBpI,GAClCqI,EAAcD,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAiBP,GAC/B,CAACS,EAAe,CAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAqBV,EAAK,KAG7CW,EAAaC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAe,gBAAiB,CAClD,UAAW,KAEVlN,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAgB,KACf+L,EAAY,YAAY,CAAC,CAAC,UAAWtH,EAAO,CAAE,AAAC0I,I,IAOnCC,SANX,AAAKD,EAEE,mBADWA,GAEdE,CACH,KAAM,mBACFA,AAJaF,EAIH,IAAI,GACjB,QAAS,MAAAC,CAAAA,EAAAA,AALOD,EAKG,IAAI,CAAC,OAAO,AAAD,EAArBC,KAAAA,EAAAA,EAAwB,GAAG,CAAC,AAACxI,GAAiB,mBACnDA,GAAAA,CACH,MAAOmI,C,QARWI,CAYtB,GACAT,EAAa,KACd,EACD,EACA,QAAS,AAAChE,IACTC,QAAQ,KAAK,CAAC,wBAAyBD,GACvC1I,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAgB,KACf0M,EAAa,gCAEbH,EAAO,UACR,EACD,CACD,GAEMe,EAAeJ,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAe,OAAQ,CAC3C,UAAW,UAEVlN,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAgB,KACf+L,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,UAAU,AAAC,GACtDW,EAAa,KACd,EACD,EACA,QAAS,AAAChE,IACTC,QAAQ,KAAK,CAAC,0BAA2BD,GACzC1I,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAgB,KACf0M,EAAa,6BACd,EACD,CACD,GAGMa,EAAkBpN,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACvB,AAACqN,IAEAjB,EAAOiB,EAAO,GAAG,CAClB,EACA,CAACjB,EAAO,EAITnJ,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACL2J,AAAmB,YAAnBA,GAAgCA,IAAmBT,GACtDJ,EAAY,UACX,GAAI,CACH,MAAMe,EAAW,WAAW,CAAC,CAC5B,QAASL,EACT,MAAOG,CACR,EACD,CAAE,MAAOrE,EAAgB,CACxBC,QAAQ,KAAK,CAAC,uBAAwBD,EACvC,CACD,EAEF,EAAG,CAACqE,EAAgBH,EAAgBK,EAAYf,EAAaI,EAAI,EAGjE,IAAMtK,EAAa7B,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAClB,AAAC8B,IACAiK,EAAY,UACX,GAAI,CACH,MAAMoB,EAAa,WAAW,CAAC,CAAE,QAASrL,CAAO,EAClD,CAAE,MAAOyG,EAAgB,CACxBC,QAAQ,KAAK,CAAC,uBAAwBD,EACvC,CACD,EACD,EACA,CAAC4E,EAAcpB,EAAY,EAItBuB,EAAoBtN,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACzB,AAACuN,IACA1N,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAgB,KACfF,EAAe4N,EAChB,EACD,EACA,CAAC5N,EAAe,EAIX6N,EAAcxN,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EAAY,KAC/B+L,EAAY,UACX,GAAI,CACH,MAAMN,IACNc,EAAa,KACd,CAAE,MAAOhE,EAAgB,CACxBC,QAAQ,KAAK,CAAC,gBAAiBD,GAC/BgE,EAAa,kCACd,CACD,EACD,EAAG,CAACd,EAASM,EAAaQ,EAAa,EAGjC,CAAErB,YAAAA,CAAW,CAAEuC,WAAAA,CAAU,CAAErD,gBAAAA,CAAe,CAAE,CAAG5G,AAAAA,GAAAA,EAAAA,OAAAA,AAAAA,EAAQ,KAC5D,GAAI,C,IAEgBkK,EAAAA,EAAAA,EAAAA,EADnB,IAAMxC,EAAcD,MAAAA,EAAAA,KAAAA,EAAAA,EAAY,IAAI,CAC9BwC,QAAaC,GAAAA,MAAAA,CAAAA,EAAAA,EAAY,IAAI,AAAD,GAAfA,MAAAA,CAAAA,EAAAA,EAAkB,OAAO,AAAD,GAAxBA,MAAAA,CAAAA,EAAAA,CAA2B,CAAC,EAAE,AAAD,GAA7BA,MAAAA,CAAAA,EAAAA,EAAgC,MAAM,AAAD,EAArCA,KAAAA,EAAAA,EAAwC,IAAI,CACzDtD,EAAkBoB,AAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAI,OAAO,AAAD,GAAK,cAEvC,MAAO,CACNN,YAAAA,EACAuC,WAAAA,EACArD,gBAAAA,CACD,CACD,CAAE,MAAO7B,EAAgB,CAGxB,OAFAC,QAAQ,KAAK,CAAC,8BAA+BD,GAC7CgE,EAAa,8BACN,CACN,YAAaxF,OACb,WAAYA,OACZ,gBAAiByE,AAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAI,OAAO,AAAD,GAAK,aACjC,CACD,CACD,EAAG,CAACP,EAAYO,MAAAA,EAAAA,KAAAA,EAAAA,EAAI,OAAO,CAAEe,EAAa,EAGpCoB,EAAoB3N,AAAAA,GAAAA,EAAAA,WAAAA,AAAAA,EACzB,AAAC,I,GAAA,CACA,MAAO4N,CAAQ,CACfC,WAAAA,CAAU,CAIV,G,MACA,WAACtN,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,OAAQ,QACR,QAAS,EACT,OAAQ,oBACR,aAAc,EACd,gBAAiB,SAClB,E,UAEA,WAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,UAAW,SAAU,GAAI,CAAE,E,UACrC,UAACA,EAAAA,CAAGA,CAAAA,CAAC,UAAU,OAAO,GAAI,CAAE,SAAU,OAAQ,MAAO,SAAU,E,SAAG,I,GAGlE,WAACA,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,GAAI,EAAG,MAAO,OAAQ,SAAU,UAAW,E,UAAG,wBAClC+D,E,GAEtBwJ,GAKAxB,GACA,UAAC/L,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,GAAI,EAAG,MAAO,UAAW,SAAU,SAAU,E,SACtD+L,C,MAIJ,WAAC/L,EAAAA,CAAGA,CAAAA,CAAC,GAAI,CAAE,QAAS,OAAQ,IAAK,CAAE,E,UAClC,UAAC,UACA,KAAK,SACL,QAAS,KACRsN,IACAtB,EAAa,KACd,EACA,MAAO,CACN,QAAS,WACT,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,UACX,E,SACA,O,GAGD,UAAC,UACA,KAAK,SACL,QAASiB,EACT,MAAO,CACN,QAAS,WACT,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,OAAQ,UACR,SAAU,UACX,E,SACA,c,UAMJ,CAAClJ,EAAQgI,EAAWkB,EAAajB,EAAa,EAGzCwB,EACLjC,GAAcG,GAAmBI,GAAmBG,EAErD,MACC,UAACwB,EAAAA,EAAaA,CAAAA,CACb,SACC,UAACL,EAAAA,CACA,MAAO,AAAIM,MAAM,qBACjB,WAAY,IAAM1H,OAAO,QAAQ,CAAC,MAAM,E,GAG1C,QAAS,CAACgC,EAAO2F,KAEhB1F,QAAQ,KAAK,CAAE,QAAc,OAAPlE,EAAO,WAAUiE,EAAO2F,GAC9C3B,EAAc,iBAA8B,OAAdhE,EAAM,OAAO,EAC5C,EACA,UAAW,CAACjE,EAAO,C,SAEnB,WAAC/D,EAAAA,CAAGA,CAAAA,CACH,UAAU,iBACV,GAAI,CACH,OAAQ,OACR,QAAS,OACT,cAAe,SACf,SAAU,WACV,QAASwN,EAAe,GAAM,EAC9B,WAAY,0BACb,E,UAGCzB,GACA,UAAC/L,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,SAAU,WACV,IAAK,EACL,KAAM,MACN,UAAW,mBACX,OAAQ,IACR,QAAS,aACT,MAAO,QACP,GAAI,EACJ,GAAI,EACJ,aAAc,EACd,SAAU,SACX,E,SAEC+L,C,GAKH,UAAC0B,EAAAA,EAAaA,CAAAA,CACb,SAAU,UAAC,O,SAAI,qB,GACf,QAAS,AAACzF,IACTC,QAAQ,KAAK,CAAC,eAAgBD,GAC9BgE,EAAa,uBACd,E,SAEA,UAAC7L,EAAAA,QAAQA,CAAAA,CAAC,SAAU,K,SACnB,UAAClB,EAAcA,CACd,aAAciO,EACd,YAAa/N,EACb,eAAgB4N,C,OAMnB,UAACU,EAAAA,EAAaA,CAAAA,CACb,SACC,UAACL,EAAAA,CACA,MAAO,AAAIM,MAAM,sBACjB,WAAYT,C,GAGd,QAAS,CAACjF,EAAO2F,KAChB1F,QAAQ,KAAK,CAAC,sBAAuBD,EAAO2F,GAC5C3B,EAAc,kBAA+B,OAAdhE,EAAM,OAAO,EAC7C,E,SAEA,UAAC7H,EAAAA,QAAQA,CAAAA,CACR,SACC,UAACyN,EAAAA,EAAAA,CAAAA,SAAuB,EACvB,QAAU,WAAyB,OAAf1B,EAAe,M,YAIrC,UAAC3B,GAAWA,CACX,QAASE,EACT,MAAOzC,EACP,WAAY0C,EACZ,YAAaC,EACb,gBAAiBd,EACjB,WAAYvI,EACZ,SAAU8K,EACV,iBAAkBS,EAClB,OAAQX,C,OAMVsB,GACA,UAACxN,EAAAA,CAAGA,CAAAA,CACH,GAAI,CACH,SAAU,WACV,IAAK,EACL,MAAO,EACP,OAAQ,EACT,E,SAEA,UAAC4N,EAAAA,EAAAA,CAAAA,MAAoB,EAAC,KAAK,E,SAMjC,EAEA5C,CAAAA,GAAK,WAAW,CAAG,M,wDClZZ,IAAM6C,EAAW,AAACC,IACxB,IAAMC,EAAkB,AAAoB,aAApB,OAAOC,SACzBC,EAAgBrN,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAOmN,EAAkBC,SAAS,KAAK,CAAG,MAEhEtL,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EAAU,KACT,GAAKqL,EAIL,OAFIC,SAAS,KAAK,GAAKF,GAAOE,CAAAA,SAAS,KAAK,CAAGF,CAAI,EAE5C,KACNE,SAAS,KAAK,CAAGC,EAAc,OAAO,AACvC,CACD,EAAG,CAACF,EAAiBD,EAAM,CAC5B,C"}