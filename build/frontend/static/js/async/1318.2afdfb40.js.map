{"version":3,"file":"static/js/async/1318.2afdfb40.js","sources":["webpack://login_page/./src/Components/FormPage/FormComponents/ExistingNodeSelector.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/ColorPickerField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/DocumentField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/CheckboxFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/DateFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/DropdownField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/ListCheckboxField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/MultiDropdownField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/RadioField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/TextFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/FormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/FieldRenderer.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/NestedFields.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/Form.tsx","webpack://login_page/./src/utils/utils.ts"],"sourcesContent":["import CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport {\n\tBox,\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tCircularProgress,\n\tIconButton,\n\tModal,\n\tStack,\n\tTextField,\n\tTypography,\n} from \"@mui/material\";\nimport React, { useCallback, useMemo, useState } from \"react\";\n\nexport type ExistingNodeSelectorProps = {\n\tshow: boolean;\n\tselectedField: any;\n\texistingNodeList: any[];\n\tloadingExistingNodes: boolean;\n\tonClose: () => void;\n\tonSelectNode: (node: any, selectedField: any) => void;\n};\n\nconst ExistingNodeSelector = ({\n\tshow,\n\tselectedField,\n\texistingNodeList,\n\tloadingExistingNodes,\n\tonClose,\n\tonSelectNode,\n}: ExistingNodeSelectorProps) => {\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\n\t// Memoize handlers to prevent recreating functions on each render\n\tconst handleSearchChange = useCallback((e: any) => {\n\t\tsetSearchQuery(e.target.value);\n\t}, []);\n\n\tconst handleClose = useCallback(() => {\n\t\tonClose();\n\t}, [onClose]);\n\n\t// Memoize the filtered list to avoid recalculation on every render\n\tconst filteredNodeList = useMemo(() => {\n\t\treturn existingNodeList.filter((node) =>\n\t\t\tnode.name.toLowerCase().includes(searchQuery.toLowerCase()),\n\t\t);\n\t}, [existingNodeList, searchQuery]);\n\n\t// Create a memoized handler for node selection\n\tconst handleSelectNode = useCallback(\n\t\t(node: any) => {\n\t\t\tonSelectNode(node, selectedField);\n\t\t},\n\t\t[onSelectNode, selectedField],\n\t);\n\n\treturn (\n\t\t<Modal\n\t\t\topen={show}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"existing-node-modal-title\"\n\t\t\taria-describedby=\"existing-node-modal-description\"\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t\twidth: { xs: \"95vw\", sm: \"90%\", md: \"80%\" },\n\t\t\t\t\tmaxWidth: { xs: \"none\", sm: 600 },\n\t\t\t\t\tmaxHeight: \"90vh\",\n\t\t\t\t\tbgcolor: \"background.paper\",\n\t\t\t\t\tboxShadow: 24,\n\t\t\t\t\toutline: \"none\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Card\n\t\t\t\t\tclassName=\"existing-node-card\"\n\t\t\t\t\tsx={{\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tmaxHeight: { xs: \"85vh\", sm: \"80vh\" },\n\t\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\tborderRadius: { xs: 1, sm: 2 },\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CardHeader\n\t\t\t\t\t\ttitle=\"Select Existing Node\"\n\t\t\t\t\t\taction={\n\t\t\t\t\t\t\t<IconButton onClick={handleClose} aria-label=\"close\">\n\t\t\t\t\t\t\t\t<CloseRoundedIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tplaceholder=\"Search nodes...\"\n\t\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\t\tonChange={handleSearchChange}\n\t\t\t\t\t\t\tsx={{ mb: 2 }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName=\"node-list\"\n\t\t\t\t\t\t\tsx={{ maxHeight: \"50vh\", overflow: \"auto\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{loadingExistingNodes ? (\n\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" p={2}>\n\t\t\t\t\t\t\t\t\t<CircularProgress size={24} />{\" \"}\n\t\t\t\t\t\t\t\t\t<Typography sx={{ ml: 1 }}>Loading nodes...</Typography>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Stack spacing={1}>\n\t\t\t\t\t\t\t\t\t{filteredNodeList.map((node) => (\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": { backgroundColor: \"action.hover\" },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelectNode(node)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography fontWeight=\"bold\">{node.name}</Typography>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</Modal>\n\t);\n};\n\n// Wrap with React.memo to prevent unnecessary re-renders\nexport default React.memo(ExistingNodeSelector);\n","import { Typography } from \"@mui/material\";\nimport Sketch from \"@uiw/react-color-sketch\";\nimport type React from \"react\";\n\nexport type ColorPickerFieldProps = {\n\tvalue: any;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst ColorPickerField = ({\n\tvalue,\n\tonFocus,\n\tonChange,\n\terror,\n\thelperText,\n\t...rest\n}: ColorPickerFieldProps) => {\n\treturn (\n\t\t<>\n\t\t\t<Sketch\n\t\t\t\tstyle={{ marginLeft: 20 }}\n\t\t\t\tcolor={value || \"\"}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonChange={(color) => {\n\t\t\t\t\tonChange(color.hex);\n\t\t\t\t}}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t\t{helperText && (\n\t\t\t\t<Typography\n\t\t\t\t\tcolor={error ? \"error\" : \"textSecondary\"}\n\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t>\n\t\t\t\t\t{helperText}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ColorPickerField;\n","import { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport InsertDriveFileIcon from \"@mui/icons-material/InsertDriveFile\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport {\n\tBox,\n\tButton,\n\tCircularProgress,\n\tDivider,\n\tStack,\n\tTypography,\n} from \"@mui/material\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"react-pdf/dist/Page/AnnotationLayer.css\";\nimport \"react-pdf/dist/Page/TextLayer.css\";\nimport { saveAs } from \"file-saver\";\n\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\n\t\"pdfjs-dist/build/pdf.worker.min.mjs\",\n\timport.meta.url,\n).toString();\n\nconst DocumentField = ({\n\tfield,\n\tparentId,\n}: {\n\tfield: any;\n\tparentId: string;\n}) => {\n\tconst { data: rawApiData, refetch } = useApiData(`class_attribute_field`, {\n\t\tnode_id: field.id,\n\t});\n\n\tconst setValueMutation = useApiMutation(\"set_value\");\n\n\tconst parsedApiData =\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes;\n\tconst data = parsedApiData\n\t\t? parsedApiData?.find((attr: any) => attr?.type === \"ByteNode\")\n\t\t: null;\n\tconst title = parsedApiData\n\t\t? parsedApiData?.find((attr: any) => attr?.type === \"StringNode\")\n\t\t: null;\n\tconst mimeType = parsedApiData\n\t\t? parsedApiData?.find((attr: any) => attr?.type === \"MimeTypeNode\")\n\t\t: null;\n\n\tconst handleFileChange = (event: any) => {\n\t\tconst selectedFile = event.target.files[0];\n\t\tif (selectedFile) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onloadend = async () => {\n\t\t\t\tif (typeof reader.result === \"string\") {\n\t\t\t\t\tconst base64String = reader.result?.split(\",\")[1];\n\t\t\t\t\tconsole.log(base64String);\n\n\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\tsetValueMutation.mutateAsync({\n\t\t\t\t\t\t\tid: data.id,\n\t\t\t\t\t\t\tvalue: base64String,\n\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tsetValueMutation.mutateAsync({\n\t\t\t\t\t\t\tid: title.id,\n\t\t\t\t\t\t\tvalue: selectedFile.name,\n\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tsetValueMutation.mutateAsync({\n\t\t\t\t\t\t\tid: mimeType.id,\n\t\t\t\t\t\t\tvalue: selectedFile.type,\n\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t}),\n\t\t\t\t\t]);\n\n\t\t\t\t\tawait refetch();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treader.readAsDataURL(selectedFile);\n\t\t} else {\n\t\t\talert(\"Veuillez sélectionner un fichier.\");\n\t\t\tevent.target.value = null;\n\t\t}\n\t};\n\n\tconsole.log(data, title, mimeType);\n\n\treturn (\n\t\t<Box sx={{ mb: 2 }}>\n\t\t\t<Stack spacing={2}>\n\t\t\t\t{data &&\n\t\t\t\ttitle &&\n\t\t\t\tmimeType &&\n\t\t\t\tdata.value &&\n\t\t\t\ttitle.value &&\n\t\t\t\tmimeType.value ? (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"subtitle2\"\n\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\tsx={{ mb: 1 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAperçu du fichier\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t\t\tborder: 1,\n\t\t\t\t\t\t\t\tborderColor: \"grey.300\",\n\t\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t\t\tbgcolor: \"grey.50\",\n\t\t\t\t\t\t\t\tminHeight: 200,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{mimeType.value === \"application/pdf\" ? (\n\t\t\t\t\t\t\t\t<Document\n\t\t\t\t\t\t\t\t\tfile={`data:${mimeType.value};base64,${data.value}`}\n\t\t\t\t\t\t\t\t\tloading={\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress size={40} sx={{ mb: 1 }} />\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"text.secondary\">\n\t\t\t\t\t\t\t\t\t\t\t\tChargement du PDF...\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<PictureAsPdfIcon\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: 48, mb: 1 }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t\t\t\t\t\tAperçu non disponible\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Page\n\t\t\t\t\t\t\t\t\t\tpageNumber={1}\n\t\t\t\t\t\t\t\t\t\twidth={200}\n\t\t\t\t\t\t\t\t\t\trenderTextLayer={false}\n\t\t\t\t\t\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Document>\n\t\t\t\t\t\t\t) : mimeType.value.startsWith(\"image/\") ? (\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\t\t\tsrc={`data:${mimeType.value};base64,${data.value}`}\n\t\t\t\t\t\t\t\t\talt={title.value}\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tmaxHeight: 180,\n\t\t\t\t\t\t\t\t\t\tmaxWidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\tobjectFit: \"contain\",\n\t\t\t\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\tp: 3,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InsertDriveFileIcon\n\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: 48, color: \"text.secondary\", mb: 1 }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\"{title.value}\"\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"text.secondary\"\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLe fichier ne peut pas être prévisualisé\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\tcolor=\"text.primary\"\n\t\t\t\t\t\t\tsx={{ mt: 1, fontWeight: \"medium\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{title.value}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t) : (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\tp: 4,\n\t\t\t\t\t\t\tborder: 2,\n\t\t\t\t\t\t\tborderColor: \"grey.300\",\n\t\t\t\t\t\t\tborderStyle: \"dashed\",\n\t\t\t\t\t\t\tborderRadius: 2,\n\t\t\t\t\t\t\tbgcolor: \"grey.50\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloudUploadIcon\n\t\t\t\t\t\t\tsx={{ fontSize: 48, color: \"text.secondary\", mb: 2 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\n\t\t\t\t\t\t\tAucun fichier téléchargé\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"text.secondary\" align=\"center\">\n\t\t\t\t\t\t\tTéléchargez un fichier pour commencer\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<Stack direction=\"row\" spacing={2} justifyContent=\"flex-start\">\n\t\t\t\t\t{data && title && mimeType && data.value && title.value && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tstartIcon={<DownloadIcon />}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsaveAs(\n\t\t\t\t\t\t\t\t\t`data:${mimeType.value};base64,${data.value}`,\n\t\t\t\t\t\t\t\t\ttitle.value,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t!(data && mimeType && data.value && title && title.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsx={{ minWidth: 140 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTélécharger\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcomponent=\"label\"\n\t\t\t\t\t\tstartIcon={<CloudUploadIcon />}\n\t\t\t\t\t\tsx={{ minWidth: 120 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tTélécharger un fichier\n\t\t\t\t\t\t<input type=\"file\" hidden onChange={handleFileChange} />\n\t\t\t\t\t</Button>\n\t\t\t\t</Stack>\n\t\t\t</Stack>\n\t\t</Box>\n\t);\n};\n\nexport default DocumentField;\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport type { FocusEventHandler } from \"react\";\n\nconst CheckboxFormField = ({\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\t...rest\n}: {\n\tfieldKey: string;\n\tvalue: boolean | undefined;\n\tonFocus?: FocusEventHandler<HTMLButtonElement>;\n\tonChange: (v: boolean) => void;\n}) => {\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Checkbox\n\t\t\t\t\tid={fieldKey}\n\t\t\t\t\tchecked={!!value}\n\t\t\t\t\tonChange={(e) => onChange(e.target.checked)}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"\"\n\t\t/>\n\t);\n};\n\nexport default CheckboxFormField;\n","import { FormControl, FormHelperText } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport dayjs, { type Dayjs } from \"dayjs\";\nimport { useEffect, useState } from \"react\";\n\nconst DateFormField = ({\n\tfieldKey,\n\tvalue,\n\tonChange,\n\terror,\n\thelperText,\n\tfield,\n\t...rest\n}: {\n\tfieldKey: string;\n\tvalue: any;\n\tonChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n\tfield?: any;\n}) => {\n\tconst [internalValue, setInternalValue] = useState<Dayjs | null>(\n\t\tvalue ? dayjs(value) : null,\n\t);\n\tconst [internalError, setInternalError] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tsetInternalValue(value ? dayjs(value) : null);\n\t}, [value]);\n\n\tlet minDate: Dayjs | undefined;\n\tlet maxDate: Dayjs | undefined;\n\n\tif (field?.validations) {\n\t\tif (field.validations.min !== undefined) {\n\t\t\tminDate = dayjs(field.validations.min);\n\t\t}\n\t\tif (field.validations.max !== undefined) {\n\t\t\tmaxDate = dayjs(field.validations.max);\n\t\t}\n\t}\n\n\tconst handleDateChange = (newValue: Dayjs | null, _context: any) => {\n\t\tsetInternalValue(newValue);\n\n\t\tconst hasError = newValue !== null && !newValue.isValid();\n\t\tsetInternalError(hasError);\n\n\t\tif (newValue === null || newValue?.isValid()) {\n\t\t\tonChange(newValue?.toISOString());\n\t\t}\n\t};\n\n\tconst displayError = error || internalError;\n\tconst displayHelperText =\n\t\tinternalError && !helperText ? \"Date invalide\" : helperText;\n\n\treturn (\n\t\t<FormControl fullWidth error={displayError}>\n\t\t\t<DatePicker\n\t\t\t\tvalue={internalValue}\n\t\t\t\tonChange={handleDateChange}\n\t\t\t\tsx={{ width: \"100%\" }}\n\t\t\t\tminDate={minDate}\n\t\t\t\tmaxDate={maxDate}\n\t\t\t\t{...rest}\n\t\t\t\tslotProps={{\n\t\t\t\t\ttextField: {\n\t\t\t\t\t\tsize: \"small\",\n\t\t\t\t\t\terror: displayError,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{displayHelperText && (\n\t\t\t\t<FormHelperText>{displayHelperText}</FormHelperText>\n\t\t\t)}\n\t\t</FormControl>\n\t);\n};\n\nexport default DateFormField;\n","import { useApiData } from \"@hooks/useApiData\";\nimport {\n\tAutocomplete,\n\tFormControl,\n\tFormHelperText,\n\tTextField,\n} from \"@mui/material\";\nimport type React from \"react\";\nimport { useEffect } from \"react\";\n\nexport type DropdownFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tdefaultValue?: string;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\tonFirstChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n};\n\nconst DropdownField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tdefaultValue,\n\tonFocus,\n\tonChange,\n\tonFirstChange,\n\terror,\n\thelperText,\n\tmultiple = false,\n\t...rest\n}: DropdownFieldProps) => {\n\tconst shortName = field.listNodeType?.split(\".\").pop();\n\n\tconst choices = field.choices || [];\n\tconst hasStaticChoices = choices.length > 0;\n\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: rawApiDataLoading,\n\t\tisError: rawApiDataError,\n\t} = useApiData(`class_attribute_field`, {\n\t\tnode_id: field.id,\n\t});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!hasStaticChoices &&\n\t\t\t!rawApiDataLoading &&\n\t\t\t!rawApiDataError &&\n\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length !== 0\n\t\t) {\n\t\t\tonFirstChange(\n\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map(\n\t\t\t\t\t(data: any) => ({\n\t\t\t\t\t\tlabel: data.name.split(\". \")[1],\n\t\t\t\t\t\tvalue: field.elementType === \"STRING\" ? data.value : data.id,\n\t\t\t\t\t}),\n\t\t\t\t)?.[0],\n\t\t\t);\n\t\t}\n\t}, [\n\t\tfield.elementType,\n\t\thasStaticChoices,\n\t\trawApiDataLoading,\n\t\trawApiDataError,\n\t\tonFirstChange,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map,\n\t]);\n\n\tconst {\n\t\tdata: listData,\n\t\tisLoading,\n\t\tisError,\n\t} = useApiData(hasStaticChoices ? undefined : \"list_existing_node\", {\n\t\ttype: shortName,\n\t});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\thasStaticChoices &&\n\t\t\t!isLoading &&\n\t\t\t!isError &&\n\t\t\tlistData?.data?.results?.[0]?.result?.data?.length !== 0 &&\n\t\t\t!multiple\n\t\t) {\n\t\t\tif (defaultValue) {\n\t\t\t\tif (defaultValue.split(\"@\").length === 2) {\n\t\t\t\t\tconst id = Number.parseInt(defaultValue.split(\"@\")[1], 10);\n\t\t\t\t\tconst existingOption =\n\t\t\t\t\t\tlistData?.data?.results?.[0]?.result?.data.find(\n\t\t\t\t\t\t\t(option: any) => option.id === id,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (existingOption) {\n\t\t\t\t\t\tonFirstChange({\n\t\t\t\t\t\t\tlabel: existingOption.name,\n\t\t\t\t\t\t\tvalue: existingOption.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonFirstChange(undefined);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tonFirstChange({\n\t\t\t\t\t\tlabel: defaultValue,\n\t\t\t\t\t\tvalue: defaultValue,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tonFirstChange(undefined);\n\t\t\t}\n\t\t}\n\t}, [\n\t\thasStaticChoices,\n\t\tisLoading,\n\t\tisError,\n\t\tdefaultValue,\n\t\tlistData?.data?.results?.[0]?.result?.data.find,\n\t\tlistData?.data?.results?.[0]?.result?.data?.length,\n\t\tmultiple,\n\t\tonFirstChange,\n\t]);\n\n\treturn (\n\t\t<FormControl fullWidth error={error}>\n\t\t\t<Autocomplete\n\t\t\t\tdisablePortal\n\t\t\t\trenderInput={(params) => <TextField {...params} error={error} />}\n\t\t\t\toptions={\n\t\t\t\t\thasStaticChoices\n\t\t\t\t\t\t? choices.map((choice: string) => ({\n\t\t\t\t\t\t\t\tlabel: choice,\n\t\t\t\t\t\t\t\tvalue: choice,\n\t\t\t\t\t\t\t\tfirstLetter: choice[0]?.toUpperCase(),\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t: listData?.data?.results?.[0]?.result?.data\n\t\t\t\t\t\t\t\t.map((option: any) => {\n\t\t\t\t\t\t\t\t\tconst firstLetter = option.name[0]?.toUpperCase();\n\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tlabel: option.name,\n\t\t\t\t\t\t\t\t\t\tvalue: option.id,\n\t\t\t\t\t\t\t\t\t\tfirstLetter:\n\t\t\t\t\t\t\t\t\t\t\toption.name === \"France(FR)\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \" \"\n\t\t\t\t\t\t\t\t\t\t\t\t: /[0-9]/.test(firstLetter)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"0-9\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: firstLetter,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.sort(\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\ta: {\n\t\t\t\t\t\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t\t\t\t\t\tfirstLetter: string;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tb: {\n\t\t\t\t\t\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t\t\t\t\t\tfirstLetter: string;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\tif (a.firstLetter !== b.firstLetter) {\n\t\t\t\t\t\t\t\t\t\t\treturn a.firstLetter.localeCompare(b.firstLetter);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn a.label.localeCompare(b.label);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t) || []\n\t\t\t\t}\n\t\t\t\tgroupBy={(option) => option.firstLetter}\n\t\t\t\tgetOptionKey={(option) => option.value ?? \"\"}\n\t\t\t\tgetOptionLabel={(option) => option.label ?? \"\"}\n\t\t\t\tisOptionEqualToValue={(option, value) => {\n\t\t\t\t\treturn option.value === value.value;\n\t\t\t\t}}\n\t\t\t\tsize=\"small\"\n\t\t\t\tid={fieldKey}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(_event, newValue) => {\n\t\t\t\t\tonChange(newValue);\n\t\t\t\t}}\n\t\t\t\tmultiple={multiple}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t\t{helperText && <FormHelperText>{helperText}</FormHelperText>}\n\t\t</FormControl>\n\t);\n};\n\nexport default DropdownField;\n","import { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport {\n\tCheckbox,\n\tFormControl,\n\tFormControlLabel,\n\tFormGroup,\n\tFormHelperText,\n} from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { shortenAndFormatLabel } from \"@/utils/utils\";\n\nconst ListCheckboxComponent = ({\n\toption,\n\tfieldId,\n}: {\n\toption: any;\n\tfieldId: string;\n}) => {\n\tconst [value, setValue] = useState(option.value);\n\tconst setValueMutation = useApiMutation(\"set_value\");\n\tconst queryClient = useQueryClient();\n\n\tconst handleSaveChanges = useDebouncedCallback(\n\t\tasync (field) => {\n\t\t\tif (!field) return console.warn(\"No field provided for saving changes\");\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\tsetValueMutation.mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: field.id,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"infinite\",\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(fieldId, 10),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(fieldId, 10),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t}\n\t\t},\n\t\t500,\n\t\t{ maxWait: 2000 },\n\t);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tlabel={option.name}\n\t\t\tcontrol={\n\t\t\t\t<Checkbox\n\t\t\t\t\tchecked={value || false}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetValue(e.target.checked);\n\t\t\t\t\t\thandleSaveChanges(option);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport type ListCheckboxFieldProps = {\n\tfield: any;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst ListCheckboxField = ({\n\tfield,\n\terror,\n\thelperText,\n}: ListCheckboxFieldProps) => {\n\tconst { data } = useApiData(\"class_attribute_field\", {\n\t\tnode_id: field.id,\n\t});\n\n\treturn (\n\t\t<FormControl fullWidth error={error}>\n\t\t\t<FormGroup row>\n\t\t\t\t{data?.data?.results?.[0]?.result?.data?.attributes?.map(\n\t\t\t\t\t(option: any, index: any) => (\n\t\t\t\t\t\t<ListCheckboxComponent\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\toption={option}\n\t\t\t\t\t\t\tfieldId={field.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t)}\n\t\t\t</FormGroup>\n\t\t\t{helperText && <FormHelperText>{helperText}</FormHelperText>}\n\t\t</FormControl>\n\t);\n};\n\nexport default ListCheckboxField;\n","import { useApiData } from \"@hooks/useApiData\";\nimport type React from \"react\";\nimport { useEffect } from \"react\";\nimport DropdownField from \"./DropdownField\";\n\nexport type MultiDropdownFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\tonFirstChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst MultiDropdownField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\tonFirstChange,\n\terror,\n\thelperText,\n\t...rest\n}: MultiDropdownFieldProps) => {\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading,\n\t\tisError,\n\t} = useApiData(`class_attribute_field`, {\n\t\tnode_id: field.id,\n\t});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!isLoading &&\n\t\t\t!isError &&\n\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length !== 0\n\t\t) {\n\t\t\tonFirstChange(\n\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map(\n\t\t\t\t\t(data: any) => ({\n\t\t\t\t\t\tfirstLetter: data.name.split(\". \")[1][0],\n\t\t\t\t\t\tlabel: data.name.split(\". \")[1],\n\t\t\t\t\t\tvalue: data.id,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}, [\n\t\tisLoading,\n\t\tisError,\n\t\tonFirstChange,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map,\n\t]);\n\n\treturn (\n\t\t<DropdownField\n\t\t\tfield={field}\n\t\t\tfieldKey={fieldKey}\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tonFirstChange={onFirstChange}\n\t\t\terror={error}\n\t\t\thelperText={helperText}\n\t\t\tmultiple\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport default MultiDropdownField;\n","import {\n\tFormControl,\n\tFormControlLabel,\n\tFormHelperText,\n\tRadio,\n\tRadioGroup,\n} from \"@mui/material\";\n\nexport type RadioFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tdefaultValue?: string;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\tonFirstChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst RadioField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tdefaultValue,\n\tonFocus,\n\tonChange,\n\terror,\n\thelperText,\n\tonFirstChange,\n\t...rest\n}: RadioFieldProps) => {\n\treturn (\n\t\t<FormControl fullWidth error={error}>\n\t\t\t<RadioGroup\n\t\t\t\trow\n\t\t\t\tname={fieldKey}\n\t\t\t\tvalue={value || defaultValue}\n\t\t\t\tonChange={(e) => onChange(e.target.value)}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{field.choices?.map((option: any, index: any) => (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tvalue={index}\n\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\tlabel={option}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</RadioGroup>\n\t\t\t{helperText && <FormHelperText>{helperText}</FormHelperText>}\n\t\t</FormControl>\n\t);\n};\n\nexport default RadioField;\n","import { TextField, type TextFieldProps, Typography } from \"@mui/material\";\nimport type React from \"react\";\n\nexport type TextFormFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n} & TextFieldProps;\n\nconst TextFormField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\terror,\n\thelperText,\n\t...rest\n}: TextFormFieldProps) => {\n\tconst getInputType = (type: string) => {\n\t\tswitch (type) {\n\t\t\tcase \"EmailNode\":\n\t\t\t\treturn \"email\";\n\t\t\tcase \"PhoneNumberNode\":\n\t\t\t\treturn \"tel\";\n\t\t\tcase \"IntNode\":\n\t\t\t\treturn \"number\";\n\t\t\tdefault:\n\t\t\t\treturn \"text\";\n\t\t}\n\t};\n\n\t// Extract min and max values from validations if they exist\n\tconst inputProps: any = {};\n\n\tif (field.validations) {\n\t\t// For number inputs, apply min and max directly\n\t\tif (field.type === \"IntNode\" && field.validations.min !== undefined) {\n\t\t\tinputProps.min = field.validations.min;\n\t\t}\n\t\tif (field.type === \"IntNode\" && field.validations.max !== undefined) {\n\t\t\tinputProps.max = field.validations.max;\n\t\t}\n\n\t\t// For text inputs with size constraints\n\t\tif (field.validations.size) {\n\t\t\tif (field.validations.size.min !== undefined) {\n\t\t\t\tinputProps.minLength = field.validations.size.min;\n\t\t\t}\n\t\t\tif (field.validations.size.max !== undefined) {\n\t\t\t\tinputProps.maxLength = field.validations.size.max;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (field.canEdit === false) {\n\t\treturn (\n\t\t\t<Typography variant=\"body1\" sx={{ py: 1 }}>\n\t\t\t\t{value || \"\"}\n\t\t\t</Typography>\n\t\t);\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tfullWidth\n\t\t\tid={fieldKey}\n\t\t\tvariant=\"outlined\"\n\t\t\ttype={getInputType(field.type)}\n\t\t\tvalue={value || \"\"}\n\t\t\tonFocus={onFocus}\n\t\t\tonChange={(e) => onChange(e.target.value)}\n\t\t\terror={error}\n\t\t\thelperText={helperText}\n\t\t\tinputProps={inputProps}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport default TextFormField;\n","import ColorPickerField from \"@components/FormPage/FormComponents/ColorPickerField\";\nimport DocumentField from \"@components/FormPage/FormComponents/DocumentField\";\nimport { useApiMutation } from \"@hooks/useApiData\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n\tBox,\n\tButton,\n\tFormControl,\n\tGrid,\n\tIconButton,\n\tTypography,\n} from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport {\n\tcheckboxField,\n\tcolorField,\n\tdateField,\n\tdocumentField,\n\tgetErrorMessage,\n\tinputTextField,\n\tlistField,\n\tshortenAndFormatLabel,\n\ttypeComponent,\n\tvalidateFieldValue,\n} from \"@/utils/utils\";\nimport CheckboxFormField from \"./CheckboxFormField.js\";\nimport DateFormField from \"./DateFormField.js\";\nimport DropdownField from \"./DropdownField\";\nimport ListCheckboxField from \"./ListCheckboxField.js\";\nimport MultiDropdownField from \"./MultiDropdownField.js\";\nimport RadioField from \"./RadioField.js\";\nimport TextFormField from \"./TextFormField\";\n\nconst FormField = ({\n\tfield,\n\tfieldKey,\n\tisExpanded,\n\tonToggleField,\n\tonChangingForm,\n\tparentId,\n\tdefaultValue = \"\",\n}: {\n\tfield: any;\n\tfieldKey: string;\n\tisExpanded: boolean;\n\tonToggleField: (fieldKey: string, id: string) => void;\n\tonChangingForm: (name: string, id: string) => void;\n\tparentId: string;\n\tdefaultValue?: any;\n}) => {\n\tconst { id, name, type, validations, isValid } = field;\n\tconst [value, setValue] = useState(\n\t\tlistField.includes(type)\n\t\t\t? field.listType === \"RADIO\"\n\t\t\t\t? field.value\n\t\t\t\t: []\n\t\t\t: defaultValue,\n\t);\n\tconst [error, setError] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\tconst queryClient = useQueryClient();\n\n\tconst setValueMutation = useApiMutation(\"set_value\");\n\tconst addExistingNodeMutation = useApiMutation(\"add_existing_node\");\n\tconst removeFromListMutation = useApiMutation(\"remove_from_list\");\n\n\tconst validateAndSetError = useDebouncedCallback(\n\t\t(currentValue: any) => {\n\t\t\tconst validationResult = validateFieldValue(\n\t\t\t\ttype,\n\t\t\t\tcurrentValue,\n\t\t\t\tvalidations,\n\t\t\t);\n\t\t\tsetError(!validationResult.isValid);\n\t\t\tsetErrorMessage(validationResult.message);\n\t\t\treturn validationResult.isValid;\n\t\t},\n\t\t300,\n\t\t{ maxWait: 1000 },\n\t);\n\n\tuseEffect(() => {\n\t\tvalidateAndSetError(value);\n\t}, [value, validateAndSetError]);\n\n\tconst handleSaveChanges = useDebouncedCallback(\n\t\tasync (field) => {\n\t\t\tif (!field) return console.warn(\"No field provided for saving changes\");\n\t\t\tconst isValid = validateAndSetError(value);\n\n\t\t\tif (!isValid) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Invalid value for ${field.name} (${field.type}): ${value}`,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\tsetValueMutation.mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: field.id,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"infinite\",\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId, 10),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId, 10),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error: any) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(`Error saving changes: ${error.message}`);\n\t\t\t}\n\t\t},\n\t\t500,\n\t\t{ maxWait: 2000 },\n\t);\n\n\tconst handleSaveDropdownChanges = useDebouncedCallback(\n\t\tasync (field, value, added: boolean = true) => {\n\t\t\tif (!field) return console.warn(\"No field provided for saving changes\");\n\t\t\tconst isValid = validateAndSetError(value);\n\n\t\t\tif (!isValid) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Invalid value for ${field.name} (${field.type}): ${value}`,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\t(added\n\t\t\t\t\t\t? addExistingNodeMutation\n\t\t\t\t\t\t: removeFromListMutation\n\t\t\t\t\t).mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode_id: field.id,\n\t\t\t\t\t\t\tid: value,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"infinite\",\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId, 10),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId, 10),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error: any) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(`Error saving changes: ${error.message}`);\n\t\t\t}\n\t\t},\n\t);\n\n\tconst handleValueChange = useCallback(\n\t\t(value: any, _f = undefined) => {\n\t\t\tconst isValid = validateFieldValue(field.type, value, validations);\n\t\t\tsetError(!isValid);\n\t\t\tif (!isValid) {\n\t\t\t\tsetErrorMessage(getErrorMessage(field.type, value, validations));\n\t\t\t} else {\n\t\t\t\tsetErrorMessage(\"\");\n\t\t\t}\n\n\t\t\thandleSaveChanges(field);\n\t\t\tsetValue(value);\n\t\t},\n\t\t[field, handleSaveChanges, validations],\n\t);\n\n\tconst handleDropdownValueChange = useCallback(\n\t\t(value: any) => {\n\t\t\tconst isValid = validateFieldValue(field.type, value?.value, validations);\n\t\t\tsetError(!isValid);\n\t\t\tif (!isValid) {\n\t\t\t\tsetErrorMessage(getErrorMessage(field.type, value?.value, validations));\n\t\t\t} else {\n\t\t\t\tsetErrorMessage(\"\");\n\t\t\t}\n\n\t\t\thandleSaveDropdownChanges(field, value?.value);\n\t\t\tsetValue(value);\n\t\t},\n\t\t[field, handleSaveDropdownChanges, validations],\n\t);\n\n\tconst handleFirstValueChange = useCallback((value: any) => {\n\t\tsetValue(value);\n\t}, []);\n\n\tconst handleMultiDropdownValueChange = useCallback(\n\t\t(newValue: any) => {\n\t\t\tconst isValid = validateAndSetError(newValue);\n\n\t\t\tif (!isValid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldValues = value || [];\n\t\t\tconst newValues = newValue || [];\n\n\t\t\tconst addedValues = newValues.filter(\n\t\t\t\t(newItem: any) =>\n\t\t\t\t\t!oldValues.some((oldItem: any) => oldItem.value === newItem.value),\n\t\t\t);\n\n\t\t\tif (addedValues.length > 0) {\n\t\t\t\taddedValues.forEach((addedItem: any) => {\n\t\t\t\t\thandleSaveDropdownChanges(field, addedItem.value);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst removedValues = oldValues.filter(\n\t\t\t\t(oldItem: any) =>\n\t\t\t\t\t!newValues.some((newItem: any) => newItem.value === oldItem.value),\n\t\t\t);\n\n\t\t\tif (removedValues.length > 0) {\n\t\t\t\tremovedValues.forEach((removedItem: any) => {\n\t\t\t\t\thandleSaveDropdownChanges(field, removedItem.value, false);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetValue(newValue);\n\t\t},\n\t\t[field, handleSaveDropdownChanges, value, validateAndSetError],\n\t);\n\n\tconst handleMultiDropdownFirstChange = useCallback(\n\t\t(newValue: any) => setValue(newValue),\n\t\t[],\n\t);\n\n\tconst handleChangingForm = useCallback(() => {\n\t\tonChangingForm(name, id);\n\t}, [onChangingForm, name, id]);\n\n\tconst handleToggleField = useCallback(() => {\n\t\tonToggleField(fieldKey, id);\n\t}, [onToggleField, fieldKey, id]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\thandleSaveChanges.flush();\n\t\t};\n\t}, [handleSaveChanges]);\n\n\treturn (\n\t\t<Box key={fieldKey} className=\"form-field-wrapper\" sx={{ p: 1 }}>\n\t\t\t<Grid container className=\"form-field\" spacing={2} alignItems=\"center\">\n\t\t\t\t<Grid size={{ xs: 12, sm: 4 }}>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tcomponent=\"fieldset\"\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={handleChangingForm}\n\t\t\t\t\t\t\ttitle={fieldKey}\n\t\t\t\t\t\t\tsx={{ textAlign: \"left\", justifyContent: \"flex-start\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tfontWeight=\"medium\"\n\t\t\t\t\t\t\t\tcolor={isValid === false ? \"error\" : \"primary\"}\n\t\t\t\t\t\t\t\tsx={{ fontWeight: isValid === false ? \"bold\" : \"regular\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{shortenAndFormatLabel(name)}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{!(\n\t\t\t\t\t\t\ttypeComponent.includes(type) ||\n\t\t\t\t\t\t\t(listField.includes(type) && field.listType !== \"LIST\")\n\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t<Box className=\"toggle-wrapper\" textAlign=\"right\">\n\t\t\t\t\t\t\t\t<IconButton onClick={handleToggleField} size=\"small\">\n\t\t\t\t\t\t\t\t\t{isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid size={{ xs: 12, sm: 6 }}>\n\t\t\t\t\t{listField.includes(type) && field.listType === \"CHECKBOX\" && (\n\t\t\t\t\t\t<ListCheckboxField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{inputTextField.includes(type) && (\n\t\t\t\t\t\t<TextFormField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{dateField.includes(type) && (\n\t\t\t\t\t\t<DateFormField\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{checkboxField.includes(type) && (\n\t\t\t\t\t\t<CheckboxFormField\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{documentField.includes(type) && (\n\t\t\t\t\t\t<DocumentField field={field} parentId={parentId} />\n\t\t\t\t\t)}\n\n\t\t\t\t\t{listField.includes(type) && field.listType === \"DROPDOWN\" && (\n\t\t\t\t\t\t<DropdownField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value ?? null}\n\t\t\t\t\t\t\tonChange={handleDropdownValueChange}\n\t\t\t\t\t\t\tonFirstChange={handleFirstValueChange}\n\t\t\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{listField.includes(type) && field.listType === \"MULTIDROPDOWN\" && (\n\t\t\t\t\t\t<MultiDropdownField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value ?? []}\n\t\t\t\t\t\t\tonChange={handleMultiDropdownValueChange}\n\t\t\t\t\t\t\tonFirstChange={handleMultiDropdownFirstChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{listField.includes(type) && field.listType === \"RADIO\" && (\n\t\t\t\t\t\t<RadioField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\tonFirstChange={handleFirstValueChange}\n\t\t\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{colorField.includes(type) && (\n\t\t\t\t\t\t<ColorPickerField\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={errorMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default React.memo(FormField, (prevProps, nextProps) => {\n\treturn (\n\t\tprevProps.fieldKey === nextProps.fieldKey &&\n\t\tprevProps.isExpanded === nextProps.isExpanded &&\n\t\tprevProps.onToggleField === nextProps.onToggleField &&\n\t\tprevProps.defaultValue === nextProps.defaultValue\n\t);\n});\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { createKey, listField, typeComponent } from \"@/utils/utils\";\nimport FormField from \"./FormField.js\";\nimport NestedFields from \"./NestedFields\";\n\nconst FieldRenderer = ({\n\tparentId,\n\tfields,\n\tvisited = new Set(),\n\texpandedFields,\n\ttoggleField,\n\thandleChangingForm,\n\trootId,\n}: {\n\tparentId: string;\n\tfields: any[];\n\tvisited?: Set<any>;\n\texpandedFields: any;\n\ttoggleField: (fieldName: string, nodeId: string) => void;\n\thandleChangingForm: (name: string, id: string) => void;\n\trootId: number;\n}) => {\n\tif (!fields || !Array.isArray(fields)) return null;\n\n\treturn fields.map((subField) => {\n\t\tconst { id, name, type } = subField;\n\t\tif (!name || name === \"graph\") return null;\n\t\tconst subFieldKey = createKey(subField.id, subField.name);\n\n\t\tif (visited.has(id)) {\n\t\t\treturn (\n\t\t\t\t<Typography key={`cycle-${id}`} color=\"error\">\n\t\t\t\t\tCircular reference detected for {name}\n\t\t\t\t</Typography>\n\t\t\t);\n\t\t}\n\n\t\tconst isFieldExpanded = expandedFields[subFieldKey] || false;\n\n\t\treturn (\n\t\t\t<React.Fragment key={subFieldKey}>\n\t\t\t\t<FormField\n\t\t\t\t\tfield={subField}\n\t\t\t\t\tfieldKey={subFieldKey}\n\t\t\t\t\tisExpanded={isFieldExpanded}\n\t\t\t\t\tonToggleField={toggleField}\n\t\t\t\t\tonChangingForm={handleChangingForm}\n\t\t\t\t\tdefaultValue={subField.value}\n\t\t\t\t\tparentId={parentId}\n\t\t\t\t/>\n\n\t\t\t\t{!(\n\t\t\t\t\ttypeComponent.includes(type) ||\n\t\t\t\t\t(listField.includes(type) && subField.listType !== \"LIST\")\n\t\t\t\t) && (\n\t\t\t\t\t<NestedFields\n\t\t\t\t\t\tfieldKey={subFieldKey}\n\t\t\t\t\t\tfield={subField}\n\t\t\t\t\t\trootId={rootId}\n\t\t\t\t\t\tisToggle={isFieldExpanded}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t});\n};\n\nexport default FieldRenderer;\n","import { useApiMutation, useInfiniteApiData } from \"@hooks/useApiData\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { Box, Button, Stack, Typography } from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { createKey, listField } from \"@/utils/utils\";\nimport ExistingNodeSelector from \"./ExistingNodeSelector\";\nimport FieldRenderer from \"./FieldRenderer\";\n\nconst NestedFields = ({\n\tfield,\n\trootId,\n\tisRoot = false,\n\tisToggle = false,\n}: {\n\tfieldKey: string;\n\tfield: any;\n\trootId: number;\n\tisRoot?: boolean;\n\tisToggle?: boolean;\n}) => {\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: loading,\n\t\tfetchNextPage,\n\t\thasNextPage,\n\t\tisFetchingNextPage,\n\t\terror,\n\t\tisError,\n\t} = useInfiniteApiData(\n\t\t`class_attribute_field`,\n\t\t{\n\t\t\tnode_id:\n\t\t\t\ttypeof field.id === \"string\" ? Number.parseInt(field.id, 10) : field.id,\n\t\t},\n\t\t{\n\t\t\tenabled: isToggle || isRoot,\n\t\t},\n\t);\n\n\tconst navigate = useNavigate();\n\tconst queryClient = useQueryClient();\n\n\tconst jumpToId = useApiMutation(\"jump\");\n\tconst addNode = useApiMutation(\"add_node\");\n\tconst listExistingNode = useApiMutation(\"list_existing_node\");\n\tconst addExistingNode = useApiMutation(\"add_existing_node\");\n\n\tconst [expandedFields, setExpandedFields] = useState<any>({});\n\tconst [showExistingNodeCard, setShowExistingNodeCard] =\n\t\tuseState<boolean>(false);\n\tconst [existingNodeList, setExistingNodeList] = useState<any[]>([]);\n\tconst [selectedField, setSelectedField] = useState<any>(null);\n\tconst [loadingExistingNodes, setLoadingExistingNodes] =\n\t\tuseState<boolean>(false);\n\n\t// Handle functions - memoized to prevent unnecessary re-renders\n\n\tconst handleChangingForm = useCallback(\n\t\tasync (_name: string, id: string) => {\n\t\t\ttry {\n\t\t\t\tawait jumpToId.mutateAsync({ node_id: id });\n\t\t\t\tawait navigate(`/add-node/form/${id}`);\n\t\t\t\twindow.location.reload();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error changing form:\", error);\n\t\t\t}\n\t\t},\n\t\t[jumpToId, navigate],\n\t);\n\n\tconst { type, name } = field;\n\n\t// Use a ref to store the expanded fields state to prevent unnecessary rerenders\n\tconst expandedFieldsRef = useRef(expandedFields);\n\n\t// Update the ref whenever expandedFields changes\n\tuseEffect(() => {\n\t\texpandedFieldsRef.current = expandedFields;\n\t}, [expandedFields]);\n\n\tconst toggleField = useCallback(\n\t\tasync (fieldName: string, _nodeId: string) => {\n\t\t\t// Get the current expanded state from the ref\n\t\t\tconst currentExpandedState = expandedFieldsRef.current[fieldName];\n\n\t\t\t// Only update the specific field that was toggled\n\t\t\tsetExpandedFields((prev: any) => {\n\t\t\t\t// Create a new object that only updates the specific field\n\t\t\t\treturn {\n\t\t\t\t\t...prev,\n\t\t\t\t\t[fieldName]: !currentExpandedState,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\t[],\n\t);\n\n\tconst handleAddNewNode = useCallback(\n\t\tasync (field: any) => {\n\t\t\tconst id = field?.id;\n\t\t\tconst fullName = field?.listNodeType;\n\n\t\t\ttry {\n\t\t\t\tconst _data = await addNode.mutateAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tBNodeClass: fullName,\n\t\t\t\t\t\tnode_id: id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\"infinite\",\n\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode_id: id,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode_id: id,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error adding new node:\", error);\n\t\t\t}\n\t\t},\n\t\t[addNode, queryClient],\n\t);\n\n\tconst handleListExistingNode = useCallback(\n\t\tasync (field: any) => {\n\t\t\tsetSelectedField(field);\n\t\t\tsetShowExistingNodeCard(true);\n\t\t\tsetLoadingExistingNodes(true);\n\n\t\t\tconst shortName = field.listNodeType.split(\".\").pop();\n\n\t\t\ttry {\n\t\t\t\tconst data = await listExistingNode.mutateAsync({ type: shortName });\n\t\t\t\tconst result = data?.data?.results?.[0]?.result?.data || [];\n\t\t\t\tsetExistingNodeList(result);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error fetching class attribute field:\", error);\n\t\t\t} finally {\n\t\t\t\tsetLoadingExistingNodes(false);\n\t\t\t}\n\t\t},\n\t\t[listExistingNode],\n\t);\n\n\tconst handleAddExistingNode = useCallback(\n\t\tasync (node: any) => {\n\t\t\ttry {\n\t\t\t\tawait addExistingNode.mutateAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\tnode_id: field.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\"infinite\",\n\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode_id: field.id,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tjumpToId.mutate({ node_id: rootId });\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error adding existing node:\", error);\n\t\t\t}\n\t\t},\n\t\t[addExistingNode, jumpToId, rootId, field.id, queryClient],\n\t);\n\n\tconst handleSelectExistingNode = useCallback(\n\t\t(node: any, _selectedField: any) => {\n\t\t\thandleAddExistingNode(node);\n\t\t\tsetShowExistingNodeCard(false);\n\t\t},\n\t\t[handleAddExistingNode],\n\t);\n\n\t// Flatten paginated data from infinite query\n\tconst subfieldData = React.useMemo(() => {\n\t\tif (!rawApiData?.pages || rawApiData.pages.length === 0) return [];\n\n\t\treturn rawApiData.pages.reduce((acc: any[], page: any) => {\n\t\t\ttry {\n\t\t\t\t// Handle the response structure with attributes array\n\t\t\t\tconst pageData =\n\t\t\t\t\tpage?.data?.results?.[0]?.result?.data?.attributes || [];\n\t\t\t\tacc.push(...pageData);\n\t\t\t\treturn acc;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(\"Error extracting page data:\", error);\n\t\t\t\treturn acc;\n\t\t\t}\n\t\t}, []);\n\t}, [rawApiData]);\n\n\tuseEffect(() => {\n\t\tif (!loading && rawApiData?.pages && subfieldData.length > 0) {\n\t\t\tconst initialValues: {\n\t\t\t\t[key: string]: any;\n\t\t\t} = {};\n\t\t\tconst initialFieldData: {\n\t\t\t\t[key: string]: any;\n\t\t\t} = {};\n\n\t\t\tsubfieldData.forEach((field: any) => {\n\t\t\t\tif (field.name && field.value !== \"null\" && field.value !== undefined) {\n\t\t\t\t\tconst fieldKey = createKey(field.id, field.name);\n\t\t\t\t\tinitialValues[fieldKey] = field.value;\n\t\t\t\t\tinitialFieldData[fieldKey] = field;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [loading, rawApiData?.pages, subfieldData]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{isRoot ? (\n\t\t\t\t<Box\n\t\t\t\t\tcomponent=\"form\"\n\t\t\t\t\tclassName=\"form-fields\"\n\t\t\t\t\tonSubmit={(e) => e.preventDefault()}\n\t\t\t\t\tsx={{ mt: 3 }}\n\t\t\t\t>\n\t\t\t\t\t{isError ? (\n\t\t\t\t\t\t<Typography color=\"error\">\n\t\t\t\t\t\t\tError loading fields: {error?.message || \"Unknown error\"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t) : loading && subfieldData.length === 0 ? (\n\t\t\t\t\t\t<Typography>Loading fields...</Typography>\n\t\t\t\t\t) : subfieldData.length > 0 ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FieldRenderer\n\t\t\t\t\t\t\t\tparentId={field.id}\n\t\t\t\t\t\t\t\tfields={subfieldData}\n\t\t\t\t\t\t\t\texpandedFields={expandedFields}\n\t\t\t\t\t\t\t\ttoggleField={toggleField}\n\t\t\t\t\t\t\t\thandleChangingForm={handleChangingForm}\n\t\t\t\t\t\t\t\trootId={rootId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{hasNextPage && (\n\t\t\t\t\t\t\t\t<Box sx={{ mt: 2, textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => fetchNextPage()}\n\t\t\t\t\t\t\t\t\t\tdisabled={isFetchingNextPage}\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{isFetchingNextPage ? \"Loading...\" : \"Load More Fields\"}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Typography>No fields available.</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t<Box\n\t\t\t\t\tclassName=\"nested-fields\"\n\t\t\t\t\tsx={{ mt: 2, pl: 2, borderLeft: \"1px solid #e0e0e0\" }}\n\t\t\t\t>\n\t\t\t\t\t{isToggle &&\n\t\t\t\t\t\t(isError ? (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"error\">\n\t\t\t\t\t\t\t\tError loading subfields: {error?.message || \"Unknown error\"}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t) : loading && subfieldData.length === 0 ? (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\n\t\t\t\t\t\t\t\tLoading subfields...\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t) : subfieldData.length > 0 ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<FieldRenderer\n\t\t\t\t\t\t\t\t\tparentId={field.id}\n\t\t\t\t\t\t\t\t\tfields={subfieldData}\n\t\t\t\t\t\t\t\t\texpandedFields={expandedFields}\n\t\t\t\t\t\t\t\t\ttoggleField={toggleField}\n\t\t\t\t\t\t\t\t\thandleChangingForm={handleChangingForm}\n\t\t\t\t\t\t\t\t\trootId={rootId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{hasNextPage && (\n\t\t\t\t\t\t\t\t\t<Box sx={{ mt: 1, textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => fetchNextPage()}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isFetchingNextPage}\n\t\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: \"0.75rem\" }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{isFetchingNextPage ? \"Loading...\" : \"Load More\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\n\t\t\t\t\t\t\t\tNo subfields available for this.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t{listField.includes(type) && isToggle && field.canAddNewNode && (\n\t\t\t\t\t\t<Stack\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\tclassName=\"add-new-node\"\n\t\t\t\t\t\t\tsx={{ mt: 2 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{field.allowCreation && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => handleAddNewNode(field)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd new {name}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\t\t\t\tonClick={() => handleListExistingNode(field)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd {name} from Existing Node\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t<ExistingNodeSelector\n\t\t\t\tshow={showExistingNodeCard}\n\t\t\t\tselectedField={selectedField}\n\t\t\t\texistingNodeList={existingNodeList}\n\t\t\t\tloadingExistingNodes={loadingExistingNodes}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tsetShowExistingNodeCard(false);\n\t\t\t\t\tjumpToId.mutate({ node_id: rootId });\n\t\t\t\t}}\n\t\t\t\tonSelectNode={handleSelectExistingNode}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default React.memo(NestedFields, (prevProps, nextProps) => {\n\treturn (\n\t\tprevProps.fieldKey === nextProps.fieldKey &&\n\t\tprevProps.rootId === nextProps.rootId &&\n\t\tprevProps.isToggle === nextProps.isToggle &&\n\t\tprevProps.field?.id === nextProps.field?.id\n\t);\n});\n","import { type useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n\tBox,\n\tButton,\n\tCircularProgress,\n\tSpeedDial,\n\tSpeedDialAction,\n\tSpeedDialIcon,\n\tTypography,\n} from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { saveAs } from \"file-saver\";\nimport { useNavigate } from \"react-router\";\nimport { createKey } from \"@/utils/utils\";\nimport NestedFields from \"./NestedFields\";\n\nexport const Form = ({\n\trawApiData,\n\tloading,\n\terror,\n\trefetch,\n}: {\n\trawApiData: ReturnType<typeof useApiData>[\"data\"];\n\tloading: ReturnType<typeof useApiData>[\"isLoading\"];\n\terror: ReturnType<typeof useApiData>[\"error\"];\n\trefetch: ReturnType<typeof useApiData>[\"refetch\"];\n}) => {\n\tconst rootId = rawApiData?.data?.node_id;\n\tconst queryClient = useQueryClient();\n\tconst navigate = useNavigate();\n\tconst pageName =\n\t\trawApiData?.data?.results?.[0]?.result?.data?.currentNode?.name;\n\tconst exportCSVMutation = useApiMutation(\"export_csv\");\n\tconst removeNodeMutation = useApiMutation(\"remove_node\");\n\tconst searchNodeMutation = useApiMutation(\"search_node\", {\n\t\tonSuccess: async () => {\n\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\tqueryKey: [\n\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t{\n\t\t\t\t\t\tnode_id:\n\t\t\t\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.filter(\n\t\t\t\t\t\t\t\t(attribute: any) => attribute.name === \"results\",\n\t\t\t\t\t\t\t)[0].id,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\tqueryKey: [\n\t\t\t\t\t\"infinite\",\n\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t{\n\t\t\t\t\t\tnode_id:\n\t\t\t\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.filter(\n\t\t\t\t\t\t\t\t(attribute: any) => attribute.name === \"results\",\n\t\t\t\t\t\t\t)[0].id,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t},\n\t});\n\n\tif (loading)\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\theight=\"100vh\"\n\t\t\t>\n\t\t\t\t<CircularProgress />\n\t\t\t</Box>\n\t\t);\n\tif (error)\n\t\treturn (\n\t\t\t<Typography color=\"error\">\n\t\t\t\tError loading form fields: {error.message || \"Unknown error\"}\n\t\t\t</Typography>\n\t\t);\n\n\treturn (\n\t\t<Box>\n\t\t\t<NestedFields\n\t\t\t\tfieldKey={createKey(rootId, pageName)}\n\t\t\t\trootId={rootId}\n\t\t\t\tisRoot\n\t\t\t\tfield={{\n\t\t\t\t\tid: rootId,\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{rawApiData?.data?.results?.[0]?.result?.data.currentNode?.type ===\n\t\t\t\"SearchForm\" ? (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsx={{}}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsearchNodeMutation.mutate({\n\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\tpageSize: 1000,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tRechercher\n\t\t\t\t</Button>\n\t\t\t) : (\n\t\t\t\t\"\"\n\t\t\t)}\n\t\t\t<SpeedDial\n\t\t\t\tariaLabel=\"SpeedDial playground example\"\n\t\t\t\tsx={{ position: \"absolute\", bottom: 16, right: 16 }}\n\t\t\t\thidden={false}\n\t\t\t\ticon={<SpeedDialIcon />}\n\t\t\t>\n\t\t\t\t{[\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <DownloadIcon />,\n\t\t\t\t\t\tname: \"Exporter\",\n\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\tconst response = await exportCSVMutation.mutateAsync({\n\t\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\t\tincludeAllFields: true,\n\t\t\t\t\t\t\t\tmaxDepth: 4,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tconst blob = new Blob(\n\t\t\t\t\t\t\t\t[response?.data?.results?.[0]?.result?.data],\n\t\t\t\t\t\t\t\t{ type: \"text/csv\" },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsaveAs(blob, `${pageName}.csv`);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <AddIcon />,\n\t\t\t\t\t\tname: \"Ajouter une nouvelle entrée\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <DeleteIcon />,\n\t\t\t\t\t\tname: \"Supprimer\",\n\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\tawait removeNodeMutation.mutateAsync(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\t\t\tdelete: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tonSuccess: async (data) => {\n\t\t\t\t\t\t\t\t\t\tawait refetch();\n\t\t\t\t\t\t\t\t\t\tvar li = data?.data?.results?.[0]?.result?.data;\n\t\t\t\t\t\t\t\t\t\tvar chaine = \"Those node will be affected : \\n\";\n\t\t\t\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\t\t\t\ti < data?.data?.results?.[0]?.result?.data.length;\n\t\t\t\t\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tchaine += `${li[i].id}@${li[i].class}, `;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tchaine += \"\\n\\nAre you sure you want to delete this node ?\";\n\t\t\t\t\t\t\t\t\t\tif (window.confirm(chaine)) {\n\t\t\t\t\t\t\t\t\t\t\tawait removeNodeMutation.mutateAsync(\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdelete: true,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnavigate(-1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t].map((action) => (\n\t\t\t\t\t<SpeedDialAction\n\t\t\t\t\t\tkey={action.name}\n\t\t\t\t\t\ticon={action.icon}\n\t\t\t\t\t\ttooltipTitle={action.name}\n\t\t\t\t\t\tonClick={action.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SpeedDial>\n\t\t</Box>\n\t);\n};\n","import dayjs from \"dayjs\";\n\nexport const shortenAndFormatLabel = (label: string) => {\n\tif (!label) return \"\";\n\tconst spaced = label\n\t\t.replace(/([a-z])([A-Z])/g, \"$1 $2\")\n\t\t.replace(/_/g, \" \")\n\t\t.trim();\n\treturn spaced.charAt(0).toUpperCase() + spaced.slice(1);\n};\n\n/***\n * Creates a unique key for a node based on its ID and name.\n * This is useful for identifying nodes in lists or maps.\n * @param {string} id - The unique identifier of the node.\n * @param {string} name - The name of the node.\n * @return {string} A string in the format \"id@name\" that uniquely identifies the node.\n */\nexport const createKey = (id: string | number, name: string) => `${id}@${name}`;\n\nexport const getErrorMessage = (\n\ttype: string,\n\tvalue: string | number | Date | any[] | null | undefined,\n\tvalidations: any,\n) => {\n\tif (\n\t\tvalidations?.required &&\n\t\t(value === null ||\n\t\t\tvalue === undefined ||\n\t\t\t(typeof value === \"string\" && value.trim() === \"\") ||\n\t\t\t(Array.isArray(value) && value.length === 0))\n\t) {\n\t\treturn \"Ce champ est requis\";\n\t}\n\n\tif (\n\t\tvalidations?.min !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue < validations.min\n\t) {\n\t\treturn `La valeur doit être au moins ${validations.min}`;\n\t}\n\n\tif (\n\t\tvalidations?.max !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue > validations.max\n\t) {\n\t\treturn `La valeur doit être au plus ${validations.max}`;\n\t}\n\n\tif (validations?.size) {\n\t\tconst len = Array.isArray(value)\n\t\t\t? value.length\n\t\t\t: typeof value === \"string\"\n\t\t\t\t? value.length\n\t\t\t\t: -1;\n\t\tif (len !== -1) {\n\t\t\tif (validations.size.min !== undefined && len < validations.size.min) {\n\t\t\t\treturn `Doit contenir au moins ${validations.size.min} caractères/éléments`;\n\t\t\t}\n\t\t\tif (validations.size.max !== undefined && len > validations.size.max) {\n\t\t\t\treturn `Doit contenir au plus ${validations.size.max} caractères/éléments`;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tvalidations?.pattern &&\n\t\ttypeof value === \"string\" &&\n\t\t!new RegExp(validations.pattern).test(value)\n\t) {\n\t\treturn `Doit correspondre au modèle : ${validations.pattern}`;\n\t}\n\n\tswitch (type) {\n\t\tcase \"EmailNode\":\n\t\t\treturn \"Veuillez entrer une adresse e-mail valide\";\n\t\tcase \"IntNode\":\n\t\t\treturn \"Veuillez entrer un entier valide\";\n\t\tcase \"PhoneNumberNode\":\n\t\t\treturn \"Veuillez entrer un numéro de téléphone valide\";\n\t\tcase \"DateNode\":\n\t\t\treturn \"Veuillez entrer une date valide\";\n\t\tdefault:\n\t\t\treturn \"Valeur invalide\";\n\t}\n};\n\nexport const validateFieldValue = (\n\ttype: string,\n\tvalue: string | number | Date | any[] | null | undefined,\n\tvalidations: any,\n) => {\n\tlet isValid = true;\n\tlet message = \"\";\n\n\t// Required validation\n\tif (\n\t\tvalidations?.required &&\n\t\t(value === null ||\n\t\t\tvalue === undefined ||\n\t\t\t(typeof value === \"string\" && value.trim() === \"\") ||\n\t\t\t(Array.isArray(value) && value.length === 0))\n\t) {\n\t\tisValid = false;\n\t\tmessage = \"Ce champ est requis\";\n\t\treturn { isValid, message };\n\t}\n\n\t// If not required and value is empty, it's valid\n\tif (\n\t\t!validations?.required &&\n\t\t(value === null ||\n\t\t\tvalue === undefined ||\n\t\t\t(typeof value === \"string\" && value.trim() === \"\") ||\n\t\t\t(Array.isArray(value) && value.length === 0))\n\t) {\n\t\treturn { isValid: true, message: \"\" };\n\t}\n\n\t// Min validation\n\tif (\n\t\tvalidations?.min !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue < validations.min\n\t) {\n\t\tisValid = false;\n\t\tmessage = `La valeur doit être au moins ${validations.min}`;\n\t\treturn { isValid, message };\n\t}\n\n\t// Max validation\n\tif (\n\t\tvalidations?.max !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue > validations.max\n\t) {\n\t\tisValid = false;\n\t\tmessage = `La valeur doit être au plus ${validations.max}`;\n\t\treturn { isValid, message };\n\t}\n\n\t// Size validation\n\tif (validations?.size) {\n\t\tconst len = Array.isArray(value)\n\t\t\t? value.length\n\t\t\t: typeof value === \"string\"\n\t\t\t\t? value.length\n\t\t\t\t: -1;\n\t\tif (len !== -1) {\n\t\t\tif (validations.size.min !== undefined && len < validations.size.min) {\n\t\t\t\tisValid = false;\n\t\t\t\tmessage = `Doit contenir au moins ${validations.size.min} caractères/éléments`;\n\t\t\t\treturn { isValid, message };\n\t\t\t}\n\t\t\tif (validations.size.max !== undefined && len > validations.size.max) {\n\t\t\t\tisValid = false;\n\t\t\t\tmessage = `Doit contenir au plus ${validations.size.max} caractères/éléments`;\n\t\t\t\treturn { isValid, message };\n\t\t\t}\n\t\t}\n\t}\n\n\t// Pattern validation\n\tif (\n\t\tvalidations?.pattern &&\n\t\ttypeof value === \"string\" &&\n\t\t!new RegExp(validations.pattern).test(value)\n\t) {\n\t\tisValid = false;\n\t\tmessage = `Doit correspondre au modèle : ${validations.pattern}`;\n\t\treturn { isValid, message };\n\t}\n\n\tswitch (type) {\n\t\tcase \"IntNode\":\n\t\t\tisValid = /^-?\\d+$/.test(value as string);\n\t\t\tif (!isValid) message = \"Veuillez entrer un entier valide\";\n\t\t\tbreak;\n\t\tcase \"DateNode\":\n\t\t\tisValid = dayjs(value as string).isValid();\n\t\t\tif (!isValid) message = \"Veuillez entrer une date valide\";\n\t\t\tbreak;\n\t}\n\n\treturn { isValid, message };\n};\n\nexport const inputTextField = [\n\t\"StringNode\",\n\t\"EmailNode\",\n\t\"PhoneNumberNode\",\n\t\"IntNode\",\n\t\"HistoryChangeNode\",\n\t\"MimeTypeNode\",\n];\nexport const checkboxField = [\"BooleanNode\", \"HideNode\"];\nexport const documentField = [\"DocumentNode\"];\nexport const dateField = [\"DateNode\"];\nexport const listField = [\"ListNode\"];\nexport const colorField = [\"ColorNode\"];\nexport const typeComponent = [\n\t...inputTextField,\n\t...documentField,\n\t...checkboxField,\n\t...dateField,\n\t...colorField,\n];\n"],"names":["React","show","selectedField","existingNodeList","loadingExistingNodes","onClose","onSelectNode","searchQuery","setSearchQuery","useState","handleSearchChange","useCallback","e","handleClose","filteredNodeList","useMemo","node","handleSelectNode","Modal","Box","Card","CardHeader","IconButton","CloseRoundedIcon","CardContent","TextField","CircularProgress","Typography","Stack","value","onFocus","onChange","error","helperText","rest","Sketch","color","pdfjs","URL","_rawApiData_data_results__result_data","field","parentId","rawApiData","refetch","useApiData","setValueMutation","useApiMutation","parsedApiData","data","attr","title","mimeType","Document","PictureAsPdfIcon","Page","InsertDriveFileIcon","CloudUploadIcon","Divider","Button","DownloadIcon","saveAs","event","selectedFile","reader","FileReader","_reader_result","base64String","Promise","alert","fieldKey","FormControlLabel","Checkbox","minDate","maxDate","internalValue","setInternalValue","dayjs","internalError","setInternalError","useEffect","undefined","displayError","displayHelperText","FormControl","DatePicker","newValue","_context","FormHelperText","_field_listNodeType","_rawApiData_data_results__result_data_attributes","_rawApiData_data_results__result_data_attributes1","_listData_data_results__result","_listData_data_results__result_data","_listData_data_results__result2","defaultValue","onFirstChange","multiple","shortName","choices","hasStaticChoices","rawApiDataLoading","rawApiDataError","_rawApiData_data_results__result_data_attributes_map","listData","isLoading","isError","_listData_data_results__result1","id","Number","existingOption","option","Autocomplete","params","choice","_choice_","_option_name_","firstLetter","a","b","_option_value","_option_label","_event","ListCheckboxComponent","fieldId","setValue","queryClient","useQueryClient","handleSaveChanges","useDebouncedCallback","console","toast","shortenAndFormatLabel","_data_data_results__result_data_attributes","FormGroup","index","DropdownField","_field_choices","RadioGroup","Radio","inputProps","getInputType","type","isExpanded","onToggleField","onChangingForm","name","validations","isValid","listField","setError","errorMessage","setErrorMessage","addExistingNodeMutation","removeFromListMutation","validateAndSetError","currentValue","validationResult","validateFieldValue","handleSaveDropdownChanges","added","handleValueChange","_f","getErrorMessage","handleDropdownValueChange","handleFirstValueChange","handleMultiDropdownValueChange","oldValues","newValues","addedValues","newItem","oldItem","addedItem","removedValues","removedItem","handleMultiDropdownFirstChange","handleChangingForm","handleToggleField","Grid","typeComponent","ExpandLessIcon","ExpandMoreIcon","ListCheckboxField","inputTextField","TextFormField","dateField","DateFormField","checkboxField","CheckboxFormField","documentField","DocumentField","MultiDropdownField","RadioField","colorField","ColorPickerField","prevProps","nextProps","fields","visited","Set","expandedFields","toggleField","rootId","Array","subField","subFieldKey","createKey","isFieldExpanded","FormField","NestedFields","ex","isRoot","isToggle","loading","fetchNextPage","hasNextPage","isFetchingNextPage","useInfiniteApiData","navigate","useNavigate","jumpToId","addNode","listExistingNode","addExistingNode","setExpandedFields","showExistingNodeCard","setShowExistingNodeCard","setExistingNodeList","setSelectedField","setLoadingExistingNodes","_name","window","expandedFieldsRef","useRef","fieldName","_nodeId","currentExpandedState","prev","handleAddNewNode","fullName","handleListExistingNode","_data_data_results__result","result","handleAddExistingNode","handleSelectExistingNode","_selectedField","subfieldData","acc","page","_page_data_results__result_data","pageData","initialValues","initialFieldData","FieldRenderer","AddIcon","ExistingNodeSelector","_prevProps_field","_nextProps_field","Form","_rawApiData_data","_rawApiData_data_results__result_data_currentNode","_rawApiData_data_results__result_data_currentNode1","pageName","exportCSVMutation","removeNodeMutation","searchNodeMutation","attribute","SpeedDial","SpeedDialIcon","_response_data_results__result","response","blob","Blob","DeleteIcon","_data_data_results__result1","li","chaine","i","action","SpeedDialAction","label","spaced","len","RegExp","message"],"mappings":"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"}