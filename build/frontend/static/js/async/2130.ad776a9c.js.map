{"version":3,"file":"static/js/async/2130.ad776a9c.js","sources":["webpack://login_page/./src/Components/View/ModalComponent.tsx","webpack://login_page/./src/global/CustomCodeBlock.tsx","webpack://login_page/./src/Components/View/BNodeNavigatorDisplay.tsx","webpack://login_page/./src/Components/View/Charts/MemoizedBarChart.tsx","webpack://login_page/./src/Components/View/Charts/MemoizedLineChart.tsx","webpack://login_page/./src/Components/View/CytoscapeGraph.tsx","webpack://login_page/./src/Components/View/Charts/MemoizedNetworkChart.tsx","webpack://login_page/./src/Components/View/ChartDisplay.tsx","webpack://login_page/./src/Components/View/MermaidDisplay.tsx","webpack://login_page/./src/Components/View/ContentDisplay.tsx","webpack://login_page/./src/Components/View/ViewContent.tsx","webpack://login_page/./src/Components/Common/View.tsx","webpack://login_page/./src/global/useTitle.tsx"],"sourcesContent":["interface ModalComponentProps {\n\tdataForModal: any;\n\tisModalOpen: boolean;\n\tsetIsModalOpen: (isOpen: boolean) => void;\n}\n\nexport const ModalComponent = ({\n\tdataForModal: _dataForModal,\n\tisModalOpen: _isModalOpen,\n\tsetIsModalOpen: _setIsModalOpen,\n}: ModalComponentProps) => {\n\treturn null;\n};\n\nexport default ModalComponent;\n","interface CustomCodeBlockProps {\n\tcode: string;\n\tlanguage: string;\n}\n\nconst CustomCodeBlock = ({ code, language }: CustomCodeBlockProps) => {\n\treturn (\n\t\t<code\n\t\t\tstyle={{\n\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\tpadding: \"10px\",\n\t\t\t\tborderRadius: \"5px\",\n\t\t\t\tfontFamily: \"Monaco, 'Courier New', monospace\",\n\t\t\t\tfontSize: \"14px\",\n\t\t\t\tbackgroundColor: \"#f5f5f5\",\n\t\t\t\tdisplay: \"block\",\n\t\t\t\toverflow: \"auto\",\n\t\t\t}}\n\t\t\tclassName={`language-${language}`}\n\t\t>\n\t\t\t{code.trim()}\n\t\t</code>\n\t);\n};\n\nexport default CustomCodeBlock;\n","import { Box, Button } from \"@mui/material\";\nimport { useVirtualizer } from \"@tanstack/react-virtual\";\nimport { useCallback, useRef } from \"react\";\n\ninterface BNodeNavigatorDisplayProps {\n\tcontent: any;\n\tjumpToNode: (nodeId: number | string) => void;\n}\n\ninterface VirtualNavigatorProps {\n\tallNodes: Array<{\n\t\tkey: string;\n\t\tid: number | string;\n\t\ttype: \"in\" | \"out\";\n\t}>;\n\thandleButtonClick: (\n\t\tevent: React.MouseEvent<HTMLButtonElement>,\n\t\tnodeId: number | string,\n\t) => void;\n}\n\nconst VirtualNavigator = ({\n\tallNodes,\n\thandleButtonClick,\n}: VirtualNavigatorProps) => {\n\t\"use no memo\";\n\tconst parentRef = useRef<HTMLDivElement>(null);\n\tconst rowVirtualizer = useVirtualizer({\n\t\tcount: allNodes.length,\n\t\testimateSize: () => 56,\n\t\tgetScrollElement: () => parentRef.current,\n\t\toverscan: 10,\n\t});\n\n\treturn (\n\t\t<Box\n\t\t\tref={parentRef}\n\t\t\tsx={{\n\t\t\t\theight: 400,\n\t\t\t\toverflowY: \"auto\",\n\t\t\t\tposition: \"relative\",\n\t\t\t\tborder: \"1px solid #e0e0e0\",\n\t\t\t\tborderRadius: 1,\n\t\t\t\tp: 1,\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\theight: `${rowVirtualizer.getTotalSize()}px`,\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{rowVirtualizer.getVirtualItems().map((virtualItem) => {\n\t\t\t\t\tconst node = allNodes[virtualItem.index];\n\t\t\t\t\tif (!node) return null;\n\n\t\t\t\t\tconst isInNode = node.type === \"in\";\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tkey={virtualItem.key}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\theight: `${virtualItem.size}px`,\n\t\t\t\t\t\t\t\ttransform: `translateY(${virtualItem.start}px)`,\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\tpx: 1,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={(e) => handleButtonClick(e, node.id)}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tbgcolor: isInNode ? \"#3949ab\" : \"#00897b\",\n\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\t\t\tbgcolor: isInNode ? \"#5c6bc0\" : \"#26a69a\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{node.key} ({node.id})\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport const BNodeNavigatorDisplay = ({\n\tcontent,\n\tjumpToNode,\n}: BNodeNavigatorDisplayProps) => {\n\tconst handleButtonClick = useCallback(\n\t\t(event: React.MouseEvent<HTMLButtonElement>, nodeId: number | string) => {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tjumpToNode(nodeId);\n\t\t},\n\t\t[jumpToNode],\n\t);\n\n\tconst inNodes = Object.keys(content.ins || {});\n\tconst outNodes = Object.keys(content.outs || {});\n\tconst allNodes = [\n\t\t...inNodes.map((node) => ({\n\t\t\tkey: node,\n\t\t\tid: content.ins[node],\n\t\t\ttype: \"in\" as const,\n\t\t})),\n\t\t...outNodes.map((node) => ({\n\t\t\tkey: node,\n\t\t\tid: content.outs[node],\n\t\t\ttype: \"out\" as const,\n\t\t})),\n\t];\n\n\tif (allNodes.length <= 50) {\n\t\treturn (\n\t\t\t<Box sx={{ p: 1 }}>\n\t\t\t\t<Box sx={{ mb: 2 }}>\n\t\t\t\t\t{inNodes.map((inNode) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={inNode}\n\t\t\t\t\t\t\tonClick={(e) => handleButtonClick(e, content.ins[inNode])}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tbgcolor: \"#3949ab\",\n\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\tmr: 1,\n\t\t\t\t\t\t\t\tmb: 1,\n\t\t\t\t\t\t\t\t\"&:hover\": { bgcolor: \"#5c6bc0\" },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{inNode} ({content.ins[inNode]})\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t\t<Box sx={{ paddingY: \"10px\" }}>\n\t\t\t\t\t{outNodes.map((outNode) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={outNode}\n\t\t\t\t\t\t\tonClick={(e) => handleButtonClick(e, content.outs[outNode])}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tbgcolor: \"#00897b\",\n\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\tmr: 1,\n\t\t\t\t\t\t\t\tmb: 1,\n\t\t\t\t\t\t\t\t\"&:hover\": { bgcolor: \"#26a69a\" },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{outNode} ({content.outs[outNode]})\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\treturn (\n\t\t<VirtualNavigator\n\t\t\tallNodes={allNodes}\n\t\t\thandleButtonClick={handleButtonClick}\n\t\t/>\n\t);\n};\n","import ReactECharts from \"echarts-for-react\";\nimport { memo, useMemo } from \"react\";\n\ninterface MemoizedBarChartProps {\n\tprettyName: string | undefined;\n\tdata: Record<string, any>;\n\tkeys: string[];\n}\n\nexport const MemoizedBarChart = memo(\n\t({ prettyName, data, keys }: MemoizedBarChartProps) => {\n\t\tconst option = useMemo(\n\t\t\t() => ({\n\t\t\t\ttooltip: {\n\t\t\t\t\tconfine: true,\n\t\t\t\t\ttrigger: \"axis\",\n\t\t\t\t\taxisPointer: {\n\t\t\t\t\t\ttype: \"shadow\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tcontainLabel: false,\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\tdata: keys,\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\trotate: 45,\n\t\t\t\t\t\tformatter: (value: string) =>\n\t\t\t\t\t\t\tvalue.length > 10 ? `${value.substring(0, 10)}...` : value,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t},\n\t\t\t\tseries: {\n\t\t\t\t\tname: prettyName,\n\t\t\t\t\ttype: \"bar\",\n\t\t\t\t\tdata: keys.map((key) => {\n\t\t\t\t\t\treturn data[key];\n\t\t\t\t\t}),\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tfocus: \"series\",\n\t\t\t\t\t\tblurScope: \"coordinateSystem\",\n\t\t\t\t\t},\n\t\t\t\t\tanimationDuration: 300,\n\t\t\t\t},\n\t\t\t}),\n\t\t\t[data, keys, prettyName],\n\t\t);\n\n\t\treturn (\n\t\t\t<ReactECharts\n\t\t\t\tlazyUpdate\n\t\t\t\toption={option}\n\t\t\t\tstyle={{ height: \"100%\", minHeight: \"300px\", width: \"100%\" }}\n\t\t\t/>\n\t\t);\n\t},\n);\n\nMemoizedBarChart.displayName = \"MemoizedBarChart\";\n","import ReactECharts from \"echarts-for-react\";\nimport { memo, useMemo } from \"react\";\n\ninterface MemoizedLineChartProps {\n\tdata: Array<{\n\t\tid: string;\n\t\tdata: Array<{ x: number; y: number }>;\n\t}>;\n}\n\nexport const MemoizedLineChart = memo(({ data }: MemoizedLineChartProps) => {\n\tconst option = useMemo(\n\t\t() => ({\n\t\t\ttooltip: {\n\t\t\t\ttrigger: \"axis\",\n\t\t\t\tconfine: true,\n\t\t\t},\n\t\t\tcolor: [\n\t\t\t\t\"#5470c6\",\n\t\t\t\t\"#91cc75\",\n\t\t\t\t\"#fac858\",\n\t\t\t\t\"#ee6666\",\n\t\t\t\t\"#73c0de\",\n\t\t\t\t\"#3ba272\",\n\t\t\t\t\"#fc8452\",\n\t\t\t\t\"#9a60b4\",\n\t\t\t\t\"#ea7ccc\",\n\t\t\t],\n\t\t\tlegend: {\n\t\t\t\tdata: data.map((series: any) => series.id),\n\t\t\t\torient: \"vertical\",\n\t\t\t\tright: 10,\n\t\t\t\ttop: \"center\",\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tleft: \"5%\",\n\t\t\t\tright: \"15%\",\n\t\t\t\tbottom: \"10%\",\n\t\t\t\ttop: \"10%\",\n\t\t\t\tcontainLabel: true,\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttype: \"value\",\n\t\t\t\tname: \"X Axis\",\n\t\t\t\tnameLocation: \"middle\",\n\t\t\t\tnameGap: 30,\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttype: \"value\",\n\t\t\t\tname: \"Y Axis\",\n\t\t\t\tmin: -1,\n\t\t\t\tmax: 1,\n\t\t\t\tnameLocation: \"middle\",\n\t\t\t\tnameGap: 50,\n\t\t\t},\n\t\t\tseries: data.map((series: any) => ({\n\t\t\t\tname: series.id,\n\t\t\t\ttype: \"line\",\n\t\t\t\tdata: series.data.map((point: any) => [point.x, point.y]),\n\t\t\t\tshowSymbol: false,\n\t\t\t\tsymbolSize: 8,\n\t\t\t\temphasis: {\n\t\t\t\t\tfocus: \"series\",\n\t\t\t\t},\n\t\t\t\tanimationDuration: 300,\n\t\t\t})),\n\t\t}),\n\t\t[data],\n\t);\n\n\treturn (\n\t\t<ReactECharts\n\t\t\tlazyUpdate\n\t\t\toption={option}\n\t\t\tstyle={{ height: \"100%\", minHeight: \"300px\", width: \"100%\" }}\n\t\t/>\n\t);\n});\n\nMemoizedLineChart.displayName = \"MemoizedLineChart\";\n","import Cytoscape, { type Core, type ElementDefinition } from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\nimport { useCallback, useEffect, useRef } from \"react\";\n\nCytoscape.use(fcose);\n\nexport interface CytoscapeGraphProps {\n\telements: ElementDefinition[];\n\tstyle?: React.CSSProperties;\n\tstylesheet?: any[];\n\tlayout?: any;\n\tonNodeClick?: (node: any, event: any) => void;\n}\n\nexport const CytoscapeGraph = ({\n\telements,\n\tstyle,\n\tstylesheet,\n\tlayout,\n\tonNodeClick,\n}: CytoscapeGraphProps) => {\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst cyRef = useRef<Core | null>(null);\n\n\tconst handleNodeClick = useCallback(\n\t\t(event: any) => {\n\t\t\tconst node = event.target;\n\t\t\tif (onNodeClick) {\n\t\t\t\tonNodeClick({ id: node.id() }, event);\n\t\t\t}\n\t\t},\n\t\t[onNodeClick],\n\t);\n\n\tconst handleNodeMouseOver = useCallback((event: any) => {\n\t\tconst node = event.target;\n\t\tnode.style(\"label\", node.data(\"label\"));\n\t}, []);\n\n\tconst handleNodeMouseOut = useCallback((event: any) => {\n\t\tconst node = event.target;\n\t\tnode.style(\"label\", \"\");\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!containerRef.current) return;\n\n\t\t// Initialize Cytoscape instance\n\t\tconst cy = Cytoscape({\n\t\t\tcontainer: containerRef.current,\n\t\t\telements,\n\t\t\tstyle: stylesheet || [\n\t\t\t\t{\n\t\t\t\t\tselector: \"node\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"background-color\": \"data(color)\",\n\t\t\t\t\t\twidth: \"data(size)\",\n\t\t\t\t\t\theight: \"data(size)\",\n\t\t\t\t\t\t\"text-valign\": \"top\",\n\t\t\t\t\t\t\"text-halign\": \"center\",\n\t\t\t\t\t\t\"text-margin-y\": -5,\n\t\t\t\t\t\t\"font-size\": \"12px\",\n\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\"text-outline-width\": 2,\n\t\t\t\t\t\t\"text-outline-color\": \"#ffffff\",\n\t\t\t\t\t\t\"z-index\": 1,\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: \"edge\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\t\"line-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-shape\": \"triangle\",\n\t\t\t\t\t\t\"curve-style\": \"bezier\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tlayout: layout || {\n\t\t\t\tname: \"fcose\",\n\t\t\t\tanimate: false,\n\t\t\t\tsamplingType: false,\n\t\t\t\tanimationDuration: 1500,\n\t\t\t\tfit: true,\n\t\t\t\tpadding: 30,\n\t\t\t},\n\t\t});\n\n\t\tcyRef.current = cy;\n\n\t\t// Set up event listeners\n\t\tcy.on(\"tap\", \"node\", handleNodeClick);\n\t\tcy.on(\"mouseover\", \"node\", handleNodeMouseOver);\n\t\tcy.on(\"mouseout\", \"node\", handleNodeMouseOut);\n\n\t\t// Cleanup function\n\t\treturn () => {\n\t\t\tif (cyRef.current) {\n\t\t\t\tcyRef.current.destroy();\n\t\t\t\tcyRef.current = null;\n\t\t\t}\n\t\t};\n\t}, [\n\t\telements,\n\t\tstylesheet,\n\t\tlayout,\n\t\thandleNodeClick,\n\t\thandleNodeMouseOver,\n\t\thandleNodeMouseOut,\n\t]);\n\n\t// Update elements when they change\n\tuseEffect(() => {\n\t\tif (cyRef.current && elements) {\n\t\t\tcyRef.current.elements().remove();\n\t\t\tcyRef.current.add(elements);\n\n\t\t\t// Re-run layout\n\t\t\tconst layoutOptions = layout || {\n\t\t\t\tname: \"fcose\",\n\t\t\t\tanimate: false,\n\t\t\t\tsamplingType: false,\n\t\t\t\tanimationDuration: 1500,\n\t\t\t\tfit: true,\n\t\t\t\tpadding: 30,\n\t\t\t};\n\n\t\t\tcyRef.current.layout(layoutOptions).run();\n\t\t}\n\t}, [elements, layout]);\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tstyle={{ width: \"100%\", height: \"100%\", ...style }}\n\t\t/>\n\t);\n};\n","import { Box } from \"@mui/material\";\nimport type { ElementDefinition } from \"cytoscape\";\nimport type { FcoseLayoutOptions } from \"cytoscape-fcose\";\nimport { memo, useMemo } from \"react\";\nimport { CytoscapeGraph } from \"../CytoscapeGraph\";\n\ninterface NetworkData {\n\tnodes: Array<{\n\t\tid: string;\n\t\tlabel: string;\n\t\tsize?: number;\n\t\tcolor?: string;\n\t\tx?: number;\n\t\ty?: number;\n\t}>;\n\tlinks: Array<{\n\t\tsource: string;\n\t\ttarget: string;\n\t}>;\n}\n\ninterface MemoizedNetworkChartProps {\n\tdata: NetworkData;\n\tonNodeClick: (node: any, event: any) => void;\n}\n\nexport const MemoizedNetworkChart = memo(\n\t({ data, onNodeClick }: MemoizedNetworkChartProps) => {\n\t\tconst processedData = useMemo(() => {\n\t\t\treturn data;\n\t\t}, [data]);\n\n\t\tconst elements = useMemo(\n\t\t\t() => [\n\t\t\t\t...processedData.nodes.map((node: any) => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\tlabel: node.label,\n\t\t\t\t\t\tsize: node.size || 30,\n\t\t\t\t\t\tcolor: node.color || \"#1f77b4\",\n\t\t\t\t\t\tx: node.x,\n\t\t\t\t\t\ty: node.y,\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t\t...processedData.links.map((link: any) => ({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tid: `${link.source}-${link.target}`,\n\t\t\t\t\t\tsource: link.source,\n\t\t\t\t\t\ttarget: link.target,\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t],\n\t\t\t[processedData],\n\t\t);\n\n\t\tconst cytoscapeStyles = useMemo(\n\t\t\t() => [\n\t\t\t\t{\n\t\t\t\t\tselector: \"node\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\"background-color\": \"data(color)\",\n\t\t\t\t\t\twidth: \"data(size)\",\n\t\t\t\t\t\theight: \"data(size)\",\n\t\t\t\t\t\t\"text-valign\": \"top\",\n\t\t\t\t\t\t\"text-halign\": \"center\",\n\t\t\t\t\t\t\"text-margin-y\": -5,\n\t\t\t\t\t\t\"font-size\": \"12px\",\n\t\t\t\t\t\tcolor: \"#000000\",\n\t\t\t\t\t\t\"text-outline-width\": 2,\n\t\t\t\t\t\t\"text-outline-color\": \"#ffffff\",\n\t\t\t\t\t\t\"z-index\": 1,\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: \"edge\",\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\t\"line-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-color\": \"#cccccc\",\n\t\t\t\t\t\t\"target-arrow-shape\": \"triangle\",\n\t\t\t\t\t\t\"curve-style\": \"bezier\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t[],\n\t\t);\n\n\t\treturn (\n\t\t\t<Box sx={{ height: \"300px\", width: \"100%\" }}>\n\t\t\t\t<CytoscapeGraph\n\t\t\t\t\telements={elements as ElementDefinition[]}\n\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\tstylesheet={cytoscapeStyles}\n\t\t\t\t\tlayout={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: processedData.nodes.length > 1000 ? \"random\" : \"fcose\",\n\t\t\t\t\t\t\tanimate: false,\n\t\t\t\t\t\t\tsamplingType: false,\n\t\t\t\t\t\t\tanimationDuration: 1500,\n\t\t\t\t\t\t\tfit: true,\n\t\t\t\t\t\t\tpadding: 30,\n\t\t\t\t\t\t} as FcoseLayoutOptions\n\t\t\t\t\t}\n\t\t\t\t\tonNodeClick={onNodeClick}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t},\n);\n\nMemoizedNetworkChart.displayName = \"MemoizedNetworkChart\";\n","import { CircularProgress } from \"@mui/material\";\nimport { Suspense, useCallback } from \"react\";\nimport {\n\tMemoizedBarChart,\n\tMemoizedLineChart,\n\tMemoizedNetworkChart,\n} from \"./Charts\";\n\ninterface ChartDisplayProps {\n\tviewId: string;\n\tcontent: any;\n\tonNodeClick: (nodeId: number | string) => void;\n\tprettyName?: string;\n}\n\nexport const ChartDisplay = ({\n\tviewId,\n\tcontent,\n\tonNodeClick,\n\tprettyName,\n}: ChartDisplayProps) => {\n\tconst parseNivoChartData = useCallback((chartContent: any) => {\n\t\tif (!chartContent) return [];\n\n\t\tconst result = [];\n\t\tfor (const key of Object.keys(chartContent)) {\n\t\t\tconst cosData = chartContent?.[key] || {};\n\t\t\tconst cosLine = {\n\t\t\t\tid: key,\n\t\t\t\tdata: cosData.map((val: any) => {\n\t\t\t\t\tconst k = Object.keys(val)[0];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: parseFloat(k),\n\t\t\t\t\t\ty: parseFloat(val[k]),\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t};\n\t\t\tresult.push(cosLine);\n\t\t}\n\t\treturn result;\n\t}, []);\n\n\tconst parseBarChartData = useCallback(\n\t\t(chartContent: { [s: string]: { [s2: string]: string } }) => {\n\t\t\tif (!chartContent) return {};\n\n\t\t\tconst result = {};\n\t\t\tfor (const value of Object.values(chartContent)) {\n\t\t\t\tfor (const key of Object.keys(value)) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tresult[key] = value?.[key] || {};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t[],\n\t);\n\n\tconst getDistributionKeys = useCallback(\n\t\t(chartContent: { [s: string]: any } | ArrayLike<unknown>) => {\n\t\t\tif (!chartContent || Object.values(chartContent).length === 0) return [];\n\t\t\tconst keySet = new Set<string>();\n\t\t\tObject.values(chartContent).forEach((obj: string) => {\n\t\t\t\tObject.keys(obj).forEach((key) => keySet.add(key));\n\t\t\t});\n\t\t\treturn Array.from(keySet).sort();\n\t\t},\n\t\t[],\n\t);\n\n\tconst getNetworkData = useCallback((chartContent: any) => {\n\t\tif (!chartContent || !chartContent.nodes) return { nodes: [], links: [] };\n\n\t\tconst uniqueNodesMap = new Map();\n\n\t\tchartContent.nodes.forEach((node: any) => {\n\t\t\tconst nodeId = node.id || node.label;\n\n\t\t\tconst transformedNode = {\n\t\t\t\t...node,\n\t\t\t\tid: nodeId,\n\t\t\t\tlabel: node.label || nodeId,\n\t\t\t\tsize: node.size || 30,\n\t\t\t\tcolor: node.color || \"#1f77b4\",\n\t\t\t};\n\n\t\t\tif (!uniqueNodesMap.has(transformedNode.id)) {\n\t\t\t\tuniqueNodesMap.set(transformedNode.id, transformedNode);\n\t\t\t}\n\t\t});\n\n\t\tconst transformedLinks = chartContent.links.map((link: any) => {\n\t\t\tconst sourceId =\n\t\t\t\ttypeof link.source === \"object\"\n\t\t\t\t\t? link.source.id || link.source.label\n\t\t\t\t\t: link.source;\n\n\t\t\tconst targetId =\n\t\t\t\ttypeof link.target === \"object\"\n\t\t\t\t\t? link.target.id || link.target.label\n\t\t\t\t\t: link.target;\n\n\t\t\treturn {\n\t\t\t\t...link,\n\t\t\t\tsource: sourceId,\n\t\t\t\ttarget: targetId,\n\t\t\t};\n\t\t});\n\n\t\tconst processedData = {\n\t\t\tnodes: Array.from(uniqueNodesMap.values()),\n\t\t\tlinks: transformedLinks,\n\t\t};\n\n\t\treturn processedData;\n\t}, []);\n\n\tconst handleNetworkNodeClick = useCallback(\n\t\t(node: any, event: MouseEvent) => {\n\t\t\tif (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t\tif (node?.id) {\n\t\t\t\tconst nodeId = node.id.includes(\"@\") ? node.id.split(\"@\")[1] : node.id;\n\t\t\t\tonNodeClick(nodeId);\n\t\t\t}\n\t\t},\n\t\t[onNodeClick],\n\t);\n\n\tif (viewId === \"char_example_xy\") {\n\t\tconst parsedChartData = parseNivoChartData(content);\n\n\t\treturn (\n\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t<div\n\t\t\t\tclassName=\"graph\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<MemoizedLineChart data={parsedChartData} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (viewId.endsWith(\"_distribution\")) {\n\t\tconst barChartData = parseBarChartData(content);\n\t\tconst keys = getDistributionKeys(content);\n\t\treturn (\n\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t<div\n\t\t\t\tclassName=\"graph\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<MemoizedBarChart\n\t\t\t\t\t\tprettyName={prettyName}\n\t\t\t\t\t\tdata={barChartData}\n\t\t\t\t\t\tkeys={keys}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (viewId.endsWith(\"nivo_view\")) {\n\t\tconst networkData = getNetworkData(content);\n\n\t\treturn (\n\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t<div\n\t\t\t\tclassName=\"graph\"\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<MemoizedNetworkChart\n\t\t\t\t\t\tdata={networkData}\n\t\t\t\t\t\tonNodeClick={handleNetworkNodeClick}\n\t\t\t\t\t/>\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n};\n","import { CenterFocusStrong, ZoomIn, ZoomOut } from \"@mui/icons-material\";\nimport {\n\tBox,\n\tIconButton,\n\tPaper,\n\tToolbar,\n\tTooltip,\n\tTypography,\n} from \"@mui/material\";\nimport mermaid from \"mermaid\";\nimport type React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\ninterface MermaidDisplayProps {\n\tchart: string;\n}\n\nconst MermaidDisplay: React.FC<MermaidDisplayProps> = ({ chart }) => {\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst mermaidRef = useRef<HTMLDivElement>(null);\n\tconst [zoom, setZoom] = useState(1);\n\tconst [position, setPosition] = useState({ x: 0, y: 0 });\n\tconst [isDragging, setIsDragging] = useState(false);\n\tconst [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n\n\tuseEffect(() => {\n\t\tmermaid.initialize({\n\t\t\tstartOnLoad: false,\n\t\t\ttheme: \"dark\",\n\t\t\tsecurityLevel: \"loose\",\n\n\t\t\tfontFamily: \"Fira Code\",\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst renderMermaid = async () => {\n\t\t\tif (mermaidRef.current && chart) {\n\t\t\t\ttry {\n\t\t\t\t\tconst id = `mermaid-${Date.now()}`;\n\n\t\t\t\t\t// Clear previous content\n\t\t\t\t\tmermaidRef.current.innerHTML = \"\";\n\n\t\t\t\t\t// Parse and render the chart\n\t\t\t\t\tconst { svg } = await mermaid.render(id, chart);\n\t\t\t\t\tmermaidRef.current.innerHTML = svg;\n\n\t\t\t\t\t// Reset zoom and position when chart changes\n\t\t\t\t\tsetZoom(1);\n\t\t\t\t\tsetPosition({ x: 0, y: 0 });\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Mermaid rendering error:\", error);\n\t\t\t\t\tmermaidRef.current.innerHTML = `<div style=\"color: red; padding: 20px;\">Error rendering diagram: ${error}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trenderMermaid();\n\t}, [chart]);\n\n\t// Prevent page scrolling when mouse is over the container\n\tuseEffect(() => {\n\t\tconst container = containerRef.current;\n\t\tif (!container) return;\n\n\t\tconst preventScroll = (e: WheelEvent) => {\n\t\t\te.preventDefault();\n\t\t};\n\n\t\tcontainer.addEventListener(\"wheel\", preventScroll, { passive: false });\n\n\t\treturn () => {\n\t\t\tcontainer.removeEventListener(\"wheel\", preventScroll);\n\t\t};\n\t}, []);\n\n\tconst handleZoomIn = useCallback(() => {\n\t\tsetZoom((prev) => Math.min(prev * 1.2, 3));\n\t}, []);\n\n\tconst handleZoomOut = useCallback(() => {\n\t\tsetZoom((prev) => Math.max(prev / 1.2, 0.3));\n\t}, []);\n\n\tconst handleResetView = useCallback(() => {\n\t\tsetZoom(1);\n\t\tsetPosition({ x: 0, y: 0 });\n\t}, []);\n\n\tconst handleMouseDown = useCallback(\n\t\t(e: React.MouseEvent) => {\n\t\t\tif (e.button === 0) {\n\t\t\t\tsetIsDragging(true);\n\t\t\t\tsetDragStart({\n\t\t\t\t\tx: e.clientX - position.x,\n\t\t\t\t\ty: e.clientY - position.y,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[position],\n\t);\n\n\tconst handleMouseMove = useCallback(\n\t\t(e: React.MouseEvent) => {\n\t\t\tif (isDragging) {\n\t\t\t\tsetPosition({\n\t\t\t\t\tx: e.clientX - dragStart.x,\n\t\t\t\t\ty: e.clientY - dragStart.y,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[isDragging, dragStart],\n\t);\n\n\tconst handleMouseUp = useCallback(() => {\n\t\tsetIsDragging(false);\n\t}, []);\n\n\tconst handleWheel = useCallback(\n\t\t(e: React.WheelEvent) => {\n\t\t\tif (containerRef.current) {\n\t\t\t\tconst rect = containerRef.current.getBoundingClientRect();\n\t\t\t\tconst centerX = rect.width / 2;\n\t\t\t\tconst centerY = rect.height / 2;\n\n\t\t\t\tconst delta = e.deltaY > 0 ? 0.9 : 1.1;\n\t\t\t\tconst newZoom = Math.max(0.3, Math.min(10, zoom * delta));\n\n\t\t\t\t// Adjust position to zoom towards mouse cursor\n\t\t\t\tconst mouseX = e.clientX - rect.left;\n\t\t\t\tconst mouseY = e.clientY - rect.top;\n\n\t\t\t\tconst deltaX = (mouseX - centerX) * (1 - delta);\n\t\t\t\tconst deltaY = (mouseY - centerY) * (1 - delta);\n\n\t\t\t\tsetZoom(newZoom);\n\t\t\t\tsetPosition((prev) => ({\n\t\t\t\t\tx: prev.x + deltaX,\n\t\t\t\t\ty: prev.y + deltaY,\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\t[zoom],\n\t);\n\n\treturn (\n\t\t<Paper\n\t\t\televation={2}\n\t\t\tsx={{\n\t\t\t\theight: 600,\n\t\t\t\twidth: \"100%\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\toverflow: \"hidden\",\n\t\t\t}}\n\t\t>\n\t\t\t<Toolbar\n\t\t\t\tvariant=\"dense\"\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundColor: \"background.paper\",\n\t\t\t\t\tborderBottom: 1,\n\t\t\t\t\tborderColor: \"divider\",\n\t\t\t\t\tminHeight: 48,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n\t\t\t\t\tMermaid Diagram\n\t\t\t\t</Typography>\n\n\t\t\t\t<Box sx={{ display: \"flex\", gap: 1 }}>\n\t\t\t\t\t<Tooltip title=\"Zoom In\">\n\t\t\t\t\t\t<IconButton onClick={handleZoomIn} size=\"small\">\n\t\t\t\t\t\t\t<ZoomIn />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t<Tooltip title=\"Zoom Out\">\n\t\t\t\t\t\t<IconButton onClick={handleZoomOut} size=\"small\">\n\t\t\t\t\t\t\t<ZoomOut />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t<Tooltip title=\"Reset View\">\n\t\t\t\t\t\t<IconButton onClick={handleResetView} size=\"small\">\n\t\t\t\t\t\t\t<CenterFocusStrong />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Box>\n\t\t\t</Toolbar>\n\n\t\t\t<Box\n\t\t\t\tref={containerRef}\n\t\t\t\tsx={{\n\t\t\t\t\tflex: 1,\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\tcursor: isDragging ? \"grabbing\" : \"grab\",\n\t\t\t\t\tbackgroundColor: \"background.default\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t}}\n\t\t\t\tonMouseDown={handleMouseDown}\n\t\t\t\tonMouseMove={handleMouseMove}\n\t\t\t\tonMouseUp={handleMouseUp}\n\t\t\t\tonMouseLeave={handleMouseUp}\n\t\t\t\tonWheel={handleWheel}\n\t\t\t>\n\t\t\t\t<Box\n\t\t\t\t\tref={mermaidRef}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\ttransform: `translate(${position.x}px, ${position.y}px) scale(${zoom})`,\n\t\t\t\t\t\ttransformOrigin: \"center center\",\n\t\t\t\t\t\ttransition: isDragging ? \"none\" : \"transform 0.1s ease-out\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\"& svg\": {\n\t\t\t\t\t\t\tmaxWidth: \"none\",\n\t\t\t\t\t\t\tmaxHeight: \"none\",\n\t\t\t\t\t\t\tpointerEvents: \"none\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{/* Zoom indicator */}\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbottom: 16,\n\t\t\t\t\t\tright: 16,\n\t\t\t\t\t\tbackgroundColor: \"background.paper\",\n\t\t\t\t\t\tpx: 1,\n\t\t\t\t\t\tpy: 0.5,\n\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\tfontSize: \"0.75rem\",\n\t\t\t\t\t\topacity: 0.8,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{Math.round(zoom * 100)}%\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Paper>\n\t);\n};\n\nexport default MermaidDisplay;\n","import { Form } from \"@components/FormPage/FormComponents/Form\";\nimport CustomCodeBlock from \"@global/CustomCodeBlock\";\nimport type { useApiData } from \"@hooks/useApiData\";\nimport { CircularProgress } from \"@mui/material\";\nimport { graphviz } from \"d3-graphviz\";\nimport { Suspense, useCallback, useEffect, useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { collapseAllNested, JsonView } from \"react-json-view-lite\";\nimport { BNodeNavigatorDisplay } from \"./BNodeNavigatorDisplay\";\nimport { ChartDisplay } from \"./ChartDisplay\";\nimport MermaidDisplay from \"./MermaidDisplay\";\n\ninterface ContentDisplayProps {\n\tviewId: string;\n\tcontent: ReturnType<\n\t\ttypeof useApiData\n\t>[\"data\"][\"data\"][\"results\"][number][\"result\"][\"data\"];\n\trawApiData: ReturnType<typeof useApiData>[\"data\"];\n\trefetch: ReturnType<typeof useApiData>[\"refetch\"];\n\tcontentType: string;\n\tbackgroundColor: string;\n\tjumpToNode: (nodeId: number | string) => void;\n\thexColor: string;\n\tonHexColorChange: (color: { hex: string }) => void;\n\tprettyName?: string;\n}\n\nexport const ContentDisplay = ({\n\tviewId,\n\tcontent,\n\trawApiData,\n\trefetch,\n\tcontentType,\n\tbackgroundColor,\n\tjumpToNode,\n\thexColor,\n\tonHexColorChange,\n\tprettyName,\n}: ContentDisplayProps) => {\n\tconst graphvizRef = useRef<HTMLDivElement>(null);\n\n\tconst renderGraphviz = useCallback(() => {\n\t\tif (contentType === \"text/dot\" && graphvizRef.current) {\n\t\t\tgraphviz(graphvizRef.current, {\n\t\t\t\tengine: \"dot\",\n\t\t\t\tfit: true,\n\t\t\t\tzoom: true,\n\t\t\t}).renderDot(content);\n\t\t}\n\t}, [content, contentType]);\n\n\tuseEffect(() => {\n\t\trenderGraphviz();\n\t}, [renderGraphviz]);\n\n\tif (!content) {\n\t\treturn <div className=\"error-message\">No content available.</div>;\n\t}\n\n\tif (contentType === \"application/json\") {\n\t\tif (viewId === \"class_attribute_field\") {\n\t\t\treturn (\n\t\t\t\t<Form\n\t\t\t\t\trawApiData={rawApiData}\n\t\t\t\t\tloading={false}\n\t\t\t\t\terror={null}\n\t\t\t\t\trefetch={refetch}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (\n\t\t\tviewId === \"char_example_xy\" ||\n\t\t\tviewId.endsWith(\"_distribution\") ||\n\t\t\tviewId.endsWith(\"nivo_view\")\n\t\t) {\n\t\t\treturn (\n\t\t\t\t// biome-ignore lint/a11y/noStaticElementInteractions: This is a controlled click handler\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"graph\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t\t<ChartDisplay\n\t\t\t\t\t\t\tviewId={viewId}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\tonNodeClick={jumpToNode}\n\t\t\t\t\t\t\tprettyName={prettyName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (viewId === \"bnode_navigator\") {\n\t\t\treturn (\n\t\t\t\t<BNodeNavigatorDisplay content={content} jumpToNode={jumpToNode} />\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"content-container\"\n\t\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t\t>\n\t\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t\t<JsonView data={content} shouldExpandNode={collapseAllNested} />\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else if (contentType === \"text/dot\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container graphviz-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<div ref={graphvizRef} />\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/mermaid\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"mermaid-container\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: backgroundColor,\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: \"600px\",\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MermaidDisplay chart={content} />\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/html\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container html-content\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\t// biome-ignore lint/security/noDangerouslySetInnerHtml: This is safe as we control the content\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: content }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/svg\") {\n\t\treturn (\n\t\t\t<div className=\"content-container\" style={{ background: \"transparent\" }}>\n\t\t\t\t<div\n\t\t\t\t\t// biome-ignore lint/security/noDangerouslySetInnerHtml: t\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: content }}\n\t\t\t\t\tstyle={{ background: \"transparent\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/svg+xml\") {\n\t\treturn (\n\t\t\t<div className=\"content-container\" style={{ background: \"transparent\" }}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={`data:image/svg+xml;base64,${content}`}\n\t\t\t\t\talt=\"Graphviz\"\n\t\t\t\t\tstyle={{ background: \"transparent\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/png\" || contentType === \"image/jpeg\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<img src={`data:${contentType};base64,${content}`} alt=\"Content\" />\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"image/jsondot\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<JsonView data={content} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/java\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<CustomCodeBlock language=\"java\" code={content} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/hex\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<ChromePicker\n\t\t\t\t\tcolor={hexColor}\n\t\t\t\t\tdisableAlpha\n\t\t\t\t\tonChangeComplete={onHexColorChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t} else if (contentType === \"text/plain\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"content-container\"\n\t\t\t\tstyle={{ background: backgroundColor }}\n\t\t\t>\n\t\t\t\t<Suspense fallback={<CircularProgress />}>\n\t\t\t\t\t<CustomCodeBlock language=\"plaintext\" code={content} />\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"error-message\">\n\t\t\t\tUnsupported content type: {contentType}\n\t\t\t</div>\n\t\t);\n\t}\n};\n","import type { useApiData } from \"@hooks/useApiData\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport { useMemo } from \"react\";\nimport { ContentDisplay } from \"./ContentDisplay\";\n\ninterface ViewContentProps {\n\tloading: ReturnType<typeof useApiData>[\"isLoading\"];\n\terror: ReturnType<typeof useApiData>[\"error\"];\n\trawApiData: ReturnType<typeof useApiData>[\"data\"];\n\trefetch: ReturnType<typeof useApiData>[\"refetch\"];\n\tdataContent: any;\n\tbackgroundColor: string;\n\tjumpToNode: (nodeId: number | string) => void;\n\thexColor: string;\n\tonHexColorChange: (color: { hex: string }) => void;\n\tviewId: string;\n}\n\nexport const ViewContent = ({\n\tloading,\n\terror,\n\tdataContent,\n\trefetch,\n\trawApiData,\n\tbackgroundColor,\n\tjumpToNode,\n\thexColor,\n\tonHexColorChange,\n\tviewId,\n}: ViewContentProps) => {\n\tconst resultData = useMemo(\n\t\t() => dataContent?.results?.[0]?.result?.data,\n\t\t[dataContent],\n\t);\n\tconst resultContentType = useMemo(\n\t\t() => dataContent?.results?.[0]?.result?.contentType?.split(\";\")?.[0],\n\t\t[dataContent],\n\t);\n\tconst prettyName = useMemo(\n\t\t() => dataContent?.results?.[0]?.pretty_name,\n\t\t[dataContent],\n\t);\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container\"\n\t\t\t\tsx={{\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tpadding: 2,\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tminHeight: \"300px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CircularProgress />\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (error) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tError fetching data: {error.message}\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (!rawApiData) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tNo data available.\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (dataContent?.results?.[0]?.error !== undefined) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tBackend Error: {dataContent.results[0].error}\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (!resultData || !resultContentType) {\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tclassName=\"view-container information-page\"\n\t\t\t\tsx={{ position: \"relative\", padding: 2 }}\n\t\t\t>\n\t\t\t\t<div className=\"error-message\" style={{ marginTop: \"40px\" }}>\n\t\t\t\t\tResult data or content type missing in the response.\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tsx={{\n\t\t\t\tposition: \"relative\",\n\t\t\t\tpadding: 2,\n\t\t\t\tflex: 1,\n\t\t\t\tminHeight: \"300px\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\toverflow: \"hidden\",\n\t\t\t}}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmt: 4,\n\t\t\t\t\tflex: 1,\n\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\"&::-webkit-scrollbar\": {\n\t\t\t\t\t\twidth: \"8px\",\n\t\t\t\t\t\theight: \"8px\",\n\t\t\t\t\t},\n\t\t\t\t\t\"&::-webkit-scrollbar-track\": {\n\t\t\t\t\t\tbackground: \"#f1f1f1\",\n\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t},\n\t\t\t\t\t\"&::-webkit-scrollbar-thumb\": {\n\t\t\t\t\t\tbackground: \"#888\",\n\t\t\t\t\t\tborderRadius: \"4px\",\n\t\t\t\t\t},\n\t\t\t\t\t\"&::-webkit-scrollbar-thumb:hover\": {\n\t\t\t\t\t\tbackground: \"#555\",\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ContentDisplay\n\t\t\t\t\tviewId={viewId}\n\t\t\t\t\tcontent={resultData}\n\t\t\t\t\trefetch={refetch}\n\t\t\t\t\trawApiData={rawApiData}\n\t\t\t\t\tcontentType={resultContentType}\n\t\t\t\t\tbackgroundColor={backgroundColor}\n\t\t\t\t\tjumpToNode={jumpToNode}\n\t\t\t\t\thexColor={hexColor}\n\t\t\t\t\tonHexColorChange={onHexColorChange}\n\t\t\t\t\tprettyName={prettyName}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n","import ErrorBoundary from \"@components/ErrorBoundary\";\nimport {\n\tLoadingStates,\n\tuseLoadingState,\n} from \"@components/Loading/LoadingComponents\";\nimport {\n\tstartTransition,\n\tuseDeferredValue,\n\tuseOptimizedDebounce,\n\tuseOptimizedState,\n} from \"@hooks/react19\";\nimport { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport { Alert, Box, Button, Paper, Typography, useTheme } from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { memo, Suspense, useCallback, useEffect, useMemo } from \"react\";\nimport { ModalComponent } from \"../View/ModalComponent\";\nimport { ViewContent } from \"../View/ViewContent\";\n\ninterface ViewProps {\n\tviewId: string;\n\tsx?: any;\n}\n\nexport const View = memo(({ viewId, sx }: ViewProps) => {\n\tconst theme = useTheme();\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: loading,\n\t\terror,\n\t\trefetch,\n\t} = useApiData(\n\t\tviewId,\n\t\t{},\n\t\t{\n\t\t\tstaleTime: 30000,\n\t\t\tgcTime: 5 * 60 * 1000,\n\t\t\trefetchOnWindowFocus: false,\n\t\t\trefetchOnReconnect: true,\n\t\t\tretry: 3,\n\t\t\tretryDelay: (attemptIndex: number) =>\n\t\t\t\tMath.min(1000 * 2 ** attemptIndex, 30000),\n\t\t},\n\t);\n\n\tconst queryClient = useQueryClient();\n\tconst { isLoading: isMutating, withLoading } = useLoadingState();\n\n\tconst [isModalOpen, setIsModalOpen, isModalUpdating] = useOptimizedState(\n\t\tfalse,\n\t\t{\n\t\t\ttransitionUpdates: true,\n\t\t},\n\t);\n\n\tconst [hex, setHex, isColorUpdating] = useOptimizedState(\"#ffffff\", {\n\t\ttransitionUpdates: true,\n\t\tdebounceMs: 300,\n\t});\n\n\tconst [viewError, setViewError, isViewErrorUpdating] = useOptimizedState<\n\t\tstring | null\n\t>(null, {\n\t\ttransitionUpdates: true,\n\t});\n\n\tconst deferredViewId = useDeferredValue(viewId);\n\tconst deferredHex = useDeferredValue(hex);\n\tconst [debouncedColor] = useOptimizedDebounce(hex, 500);\n\n\tconst saveColour = useApiMutation(\"update_colour\", {\n\t\tonSuccess: () => {\n\t\t\tstartTransition(() => {\n\t\t\t\tqueryClient.setQueryData([\"apiData\", viewId], (oldData: unknown) => {\n\t\t\t\t\tif (!oldData) return oldData;\n\t\t\t\t\tconst typedData = oldData as any;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...typedData,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t...typedData.data,\n\t\t\t\t\t\t\tresults: typedData.data.results?.map((result: any) => ({\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tcolor: debouncedColor,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetViewError(null);\n\t\t\t});\n\t\t},\n\t\tonError: (error: unknown) => {\n\t\t\tconsole.error(\"Failed to save color:\", error);\n\t\t\tstartTransition(() => {\n\t\t\t\tsetViewError(\"Failed to save color changes\");\n\t\t\t\tsetHex(\"#ffffff\");\n\t\t\t});\n\t\t},\n\t});\n\n\tconst jumpMutation = useApiMutation(\"jump\", {\n\t\tonSuccess: async () => {\n\t\t\tstartTransition(() => {\n\t\t\t\tqueryClient.invalidateQueries({ queryKey: [\"apiData\"] });\n\t\t\t\tsetViewError(null);\n\t\t\t});\n\t\t},\n\t\tonError: (error: unknown) => {\n\t\t\tconsole.error(\"Failed to jump to node:\", error);\n\t\t\tstartTransition(() => {\n\t\t\t\tsetViewError(\"Failed to navigate to node\");\n\t\t\t});\n\t\t},\n\t});\n\n\t// Optimized color change handler with debouncing\n\tconst handleHexChange = useCallback(\n\t\t(colour: { hex: string }) => {\n\t\t\tsetHex(colour.hex);\n\t\t},\n\t\t[setHex],\n\t);\n\n\t// Effect to handle debounced color saves\n\tuseEffect(() => {\n\t\tif (debouncedColor !== \"#ffffff\" && debouncedColor !== hex) {\n\t\t\twithLoading(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait saveColour.mutateAsync({\n\t\t\t\t\t\tview_id: deferredViewId,\n\t\t\t\t\t\tvalue: debouncedColor,\n\t\t\t\t\t});\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tconsole.error(\"Color update failed:\", error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [debouncedColor, deferredViewId, saveColour, withLoading, hex]);\n\n\t// Optimized jump to node handler\n\tconst jumpToNode = useCallback(\n\t\t(nodeId: number | string) => {\n\t\t\twithLoading(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait jumpMutation.mutateAsync({ node_id: nodeId });\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tconsole.error(\"Jump to node failed:\", error);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[jumpMutation, withLoading],\n\t);\n\n\t// Memoized modal handlers\n\tconst handleModalChange = useCallback(\n\t\t(opened: boolean) => {\n\t\t\tstartTransition(() => {\n\t\t\t\tsetIsModalOpen(opened);\n\t\t\t});\n\t\t},\n\t\t[setIsModalOpen],\n\t);\n\n\t// Retry handler for failed requests\n\tconst handleRetry = useCallback(() => {\n\t\twithLoading(async () => {\n\t\t\ttry {\n\t\t\t\tawait refetch();\n\t\t\t\tsetViewError(null);\n\t\t\t} catch (error: unknown) {\n\t\t\t\tconsole.error(\"Retry failed:\", error);\n\t\t\t\tsetViewError(\"Retry failed. Please try again.\");\n\t\t\t}\n\t\t});\n\t}, [refetch, withLoading, setViewError]);\n\n\t// Memoized data extraction with error handling\n\tconst { dataContent, exportData, backgroundColor } = useMemo(() => {\n\t\ttry {\n\t\t\tconst dataContent = rawApiData?.data;\n\t\t\tconst exportData = rawApiData?.data?.results?.[0]?.result?.data;\n\t\t\tconst backgroundColor = sx?.bgcolor || \"transparent\";\n\n\t\t\treturn {\n\t\t\t\tdataContent,\n\t\t\t\texportData,\n\t\t\t\tbackgroundColor,\n\t\t\t};\n\t\t} catch (error: unknown) {\n\t\t\tconsole.error(\"Error processing view data:\", error);\n\t\t\tsetViewError(\"Error processing view data\");\n\t\t\treturn {\n\t\t\t\tdataContent: undefined,\n\t\t\t\texportData: undefined,\n\t\t\t\tbackgroundColor: sx?.bgcolor || \"transparent\",\n\t\t\t};\n\t\t}\n\t}, [rawApiData, sx?.bgcolor, setViewError]);\n\n\t// Enhanced error boundary for view-specific errors\n\tconst ViewErrorFallback = useCallback(\n\t\t({\n\t\t\terror: errorObj,\n\t\t\tresetError,\n\t\t}: {\n\t\t\terror: Error;\n\t\t\tresetError: () => void;\n\t\t}) => (\n\t\t\t<Paper\n\t\t\t\televation={1}\n\t\t\t\tsx={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\tminHeight: 200,\n\t\t\t\t\tp: 3,\n\t\t\t\t\tborder: `1px solid ${theme.palette.divider}`,\n\t\t\t\t\tborderRadius: 2,\n\t\t\t\t\tbgcolor: \"background.paper\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box sx={{ textAlign: \"center\", mb: 2 }}>\n\t\t\t\t\t<Typography variant=\"h2\" sx={{ fontSize: \"2rem\", mb: 1 }}>\n\t\t\t\t\t\t⚠️\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n\t\t\t\t\t\tÉchec du chargement de la vue: {viewId}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{process.env.NODE_ENV === \"development\" && (\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"text.disabled\" display=\"block\">\n\t\t\t\t\t\t\t{errorObj.message}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t\t{viewError && (\n\t\t\t\t\t\t<Alert severity=\"error\" sx={{ mt: 1, fontSize: \"0.75rem\" }}>\n\t\t\t\t\t\t\t{viewError}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t\t<Box sx={{ display: \"flex\", gap: 1 }}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tresetError();\n\t\t\t\t\t\t\tsetViewError(null);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\tRéessayer\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"contained\" onClick={handleRetry} size=\"small\">\n\t\t\t\t\t\tRecharger les données\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Paper>\n\t\t),\n\t\t[viewId, viewError, handleRetry, setViewError, theme.palette.divider],\n\t);\n\n\tconst isPendingAny =\n\t\tisMutating || isModalUpdating || isColorUpdating || isViewErrorUpdating;\n\n\treturn (\n\t\t<ErrorBoundary\n\t\t\tfallback={\n\t\t\t\t<ViewErrorFallback\n\t\t\t\t\terror={new Error(\"View render error\")}\n\t\t\t\t\tresetError={() => window.location.reload()}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonError={(error, errorInfo) => {\n\t\t\t\tconsole.error(`View ${viewId} error:`, error, errorInfo);\n\t\t\t\tsetViewError(`Erreur de rendu: ${error.message}`);\n\t\t\t}}\n\t\t\tresetKeys={[viewId]}\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t\tminHeight: 300,\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\topacity: isPendingAny ? 0.8 : 1,\n\t\t\t\t\ttransition: \"opacity 0.2s ease-in-out\",\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t...sx,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* Error display */}\n\t\t\t\t{viewError && (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tseverity=\"error\"\n\t\t\t\t\t\tonClose={() => setViewError(null)}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 8,\n\t\t\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\t\t\ttransform: \"translateX(-50%)\",\n\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\tfontSize: \"0.75rem\",\n\t\t\t\t\t\t\tmaxWidth: \"90%\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{viewError}\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\n\t\t\t\t{/* Modal with Suspense boundary */}\n\t\t\t\t<ErrorBoundary\n\t\t\t\t\tfallback={\n\t\t\t\t\t\t<Alert severity=\"warning\" sx={{ m: 1 }}>\n\t\t\t\t\t\t\tErreur lors du chargement du modal\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t}\n\t\t\t\t\tonError={(error) => {\n\t\t\t\t\t\tconsole.error(\"Modal error:\", error);\n\t\t\t\t\t\tsetViewError(\"Le modal n'a pas pu être chargé\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Suspense fallback={null}>\n\t\t\t\t\t\t<ModalComponent\n\t\t\t\t\t\t\tdataForModal={exportData}\n\t\t\t\t\t\t\tisModalOpen={isModalOpen}\n\t\t\t\t\t\t\tsetIsModalOpen={handleModalChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Suspense>\n\t\t\t\t</ErrorBoundary>\n\n\t\t\t\t{/* Main content with error boundary and loading states */}\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\tscrollbarWidth: \"thin\",\n\t\t\t\t\t\tscrollbarColor: `${theme.palette.primary.main} ${theme.palette.grey[200]}`,\n\t\t\t\t\t\t\"&::-webkit-scrollbar\": { width: \"8px\", height: \"8px\" },\n\t\t\t\t\t\t\"&::-webkit-scrollbar-track\": {\n\t\t\t\t\t\t\tbgcolor: \"grey.100\",\n\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&::-webkit-scrollbar-thumb\": {\n\t\t\t\t\t\t\tbgcolor: \"primary.main\",\n\t\t\t\t\t\t\tborderRadius: 1,\n\t\t\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\t\t\tbgcolor: \"primary.dark\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ErrorBoundary\n\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t<ViewErrorFallback\n\t\t\t\t\t\t\t\terror={new Error(\"View content error\")}\n\t\t\t\t\t\t\t\tresetError={handleRetry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonError={(error, errorInfo) => {\n\t\t\t\t\t\t\tconsole.error(\"View content error:\", error, errorInfo);\n\t\t\t\t\t\t\tsetViewError(`Erreur de contenu: ${error.message}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\tminHeight: 200,\n\t\t\t\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<LoadingStates.Component\n\t\t\t\t\t\t\t\t\t\tmessage={`Chargement de ${deferredViewId}...`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ViewContent\n\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\t\trawApiData={rawApiData}\n\t\t\t\t\t\t\t\trefetch={refetch}\n\t\t\t\t\t\t\t\tdataContent={dataContent}\n\t\t\t\t\t\t\t\tbackgroundColor={backgroundColor}\n\t\t\t\t\t\t\t\tjumpToNode={jumpToNode}\n\t\t\t\t\t\t\t\thexColor={deferredHex}\n\t\t\t\t\t\t\t\tonHexColorChange={handleHexChange}\n\t\t\t\t\t\t\t\tviewId={deferredViewId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Box>\n\n\t\t\t\t{/* Loading indicator for mutations */}\n\t\t\t\t{isPendingAny && (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 8,\n\t\t\t\t\t\t\tright: 8,\n\t\t\t\t\t\t\tzIndex: 10,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\taria-live=\"polite\"\n\t\t\t\t\t\taria-label=\"Opération en cours\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<LoadingStates.Inline text=\"\" />\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</ErrorBoundary>\n\t);\n});\n\nView.displayName = \"View\";\nexport default View;\n","import { useEffect, useRef } from \"react\";\n\nexport const useTitle = (title: string) => {\n\tconst documentDefined = typeof document !== \"undefined\";\n\tconst originalTitle = useRef(documentDefined ? document.title : null);\n\n\tuseEffect(() => {\n\t\tif (!documentDefined) return;\n\n\t\tif (document.title !== title) document.title = title;\n\n\t\treturn () => {\n\t\t\tif (originalTitle.current === null) return;\n\n\t\t\tdocument.title = originalTitle.current;\n\t\t};\n\t}, [documentDefined, title]);\n};\n"],"names":["ModalComponent","_dataForModal","_isModalOpen","_setIsModalOpen","code","language","VirtualNavigator","allNodes","handleButtonClick","parentRef","useRef","rowVirtualizer","useVirtualizer","Box","virtualItem","node","isInNode","Button","e","BNodeNavigatorDisplay","content","jumpToNode","useCallback","event","nodeId","inNodes","Object","outNodes","inNode","outNode","MemoizedBarChart","memo","prettyName","data","keys","option","useMemo","value","key","ReactECharts","MemoizedLineChart","series","point","Cytoscape","fcose","CytoscapeGraph","elements","style","stylesheet","layout","onNodeClick","containerRef","cyRef","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","useEffect","cy","layoutOptions","MemoizedNetworkChart","processedData","link","cytoscapeStyles","ChartDisplay","viewId","parseNivoChartData","chartContent","result","cosData","cosLine","val","k","parseFloat","parseBarChartData","getDistributionKeys","keySet","Set","obj","Array","getNetworkData","uniqueNodesMap","Map","transformedNode","transformedLinks","sourceId","targetId","handleNetworkNodeClick","parsedChartData","Suspense","CircularProgress","barChartData","networkData","chart","mermaidRef","zoom","setZoom","useState","position","setPosition","isDragging","setIsDragging","dragStart","setDragStart","mermaid","renderMermaid","id","Date","svg","error","console","container","preventScroll","handleZoomIn","prev","Math","handleZoomOut","handleResetView","handleMouseDown","handleMouseMove","handleMouseUp","handleWheel","rect","centerX","centerY","delta","newZoom","mouseX","mouseY","deltaX","deltaY","Paper","Toolbar","Typography","Tooltip","IconButton","ZoomIn","ZoomOut","CenterFocusStrong","ContentDisplay","rawApiData","refetch","contentType","backgroundColor","hexColor","onHexColorChange","graphvizRef","renderGraphviz","graphviz","Form","JsonView","collapseAllNested","MermaidDisplay","CustomCodeBlock","ChromePicker","ViewContent","_dataContent_results_","loading","dataContent","resultData","_dataContent_results__result","resultContentType","_dataContent_results__result_contentType_split","undefined","View","sx","theme","useTheme","useApiData","attemptIndex","queryClient","useQueryClient","isMutating","withLoading","useLoadingState","isModalOpen","setIsModalOpen","isModalUpdating","useOptimizedState","hex","setHex","isColorUpdating","viewError","setViewError","isViewErrorUpdating","deferredViewId","useDeferredValue","deferredHex","debouncedColor","useOptimizedDebounce","saveColour","useApiMutation","startTransition","oldData","_typedData_data_results","typedData","jumpMutation","handleHexChange","colour","handleModalChange","opened","handleRetry","exportData","_rawApiData_data_results__result","ViewErrorFallback","errorObj","resetError","process","Alert","isPendingAny","ErrorBoundary","Error","window","errorInfo","LoadingStates","useTitle","title","documentDefined","document","originalTitle"],"mappings":"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"}