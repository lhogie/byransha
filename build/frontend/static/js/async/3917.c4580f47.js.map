{"version":3,"file":"static/js/async/3917.c4580f47.js","sources":["webpack://login_page/./node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://login_page/./node_modules/vscode-jsonrpc/lib/common/events.js","webpack://login_page/./node_modules/vscode-jsonrpc/lib/common/is.js","webpack://login_page/./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://login_page/./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://login_page/./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://login_page/./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://login_page/./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs","webpack://login_page/./node_modules/langium/lib/utils/grammar-loader.js","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs","webpack://login_page/./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://login_page/./node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://login_page/./node_modules/lodash-es/_createAggregator.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://login_page/./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://login_page/./node_modules/lodash-es/_baseSlice.js","webpack://login_page/./node_modules/lodash-es/drop.js","webpack://login_page/./node_modules/lodash-es/assign.js","webpack://login_page/./node_modules/lodash-es/pickBy.js","webpack://login_page/./node_modules/lodash-es/isRegExp.js","webpack://login_page/./node_modules/lodash-es/_baseIsRegExp.js","webpack://login_page/./node_modules/@chevrotain/gast/lib/src/model.js","webpack://login_page/./node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://login_page/./node_modules/lodash-es/_baseSome.js","webpack://login_page/./node_modules/lodash-es/some.js","webpack://login_page/./node_modules/lodash-es/includes.js","webpack://login_page/./node_modules/lodash-es/_arrayEvery.js","webpack://login_page/./node_modules/lodash-es/_baseEvery.js","webpack://login_page/./node_modules/lodash-es/every.js","webpack://login_page/./node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://login_page/./node_modules/lodash-es/uniq.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/constants.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://login_page/./node_modules/lodash-es/negate.js","webpack://login_page/./node_modules/lodash-es/reject.js","webpack://login_page/./node_modules/lodash-es/indexOf.js","webpack://login_page/./node_modules/lodash-es/_baseDifference.js","webpack://login_page/./node_modules/lodash-es/difference.js","webpack://login_page/./node_modules/lodash-es/compact.js","webpack://login_page/./node_modules/lodash-es/head.js","webpack://login_page/./node_modules/@chevrotain/utils/lib/src/print.js","webpack://login_page/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://login_page/./node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://login_page/./node_modules/chevrotain/lib/src/scan/lexer.js","webpack://login_page/./node_modules/@chevrotain/utils/lib/src/timer.js","webpack://login_page/./node_modules/chevrotain/lib/src/scan/tokens.js","webpack://login_page/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://login_page/./node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://login_page/./node_modules/lodash-es/_arrayAggregator.js","webpack://login_page/./node_modules/lodash-es/_baseAggregator.js","webpack://login_page/./node_modules/lodash-es/groupBy.js","webpack://login_page/./node_modules/lodash-es/dropRight.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://login_page/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://login_page/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://login_page/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://login_page/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://login_page/./node_modules/langium/lib/workspace/documents.js","webpack://login_page/./node_modules/langium/lib/utils/uri-utils.js","webpack://login_page/./node_modules/langium/lib/validation/document-validator.js","webpack://login_page/./node_modules/langium/lib/validation/validation-registry.js","webpack://login_page/./node_modules/langium/lib/utils/disposable.js","webpack://login_page/./node_modules/chevrotain-allstar/lib/atn.js","webpack://login_page/./node_modules/chevrotain-allstar/lib/dfa.js","webpack://login_page/./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://login_page/./node_modules/lodash-es/uniqBy.js","webpack://login_page/./node_modules/langium/lib/parser/cst-node-builder.js","webpack://login_page/./node_modules/langium/lib/parser/langium-parser.js","webpack://login_page/./node_modules/langium/lib/parser/parser-builder-base.js","webpack://login_page/./node_modules/langium/lib/utils/promise-utils.js","webpack://login_page/./node_modules/langium/lib/references/linker.js","webpack://login_page/./node_modules/langium/lib/references/name-provider.js","webpack://login_page/./node_modules/langium/lib/references/references.js","webpack://login_page/./node_modules/langium/lib/utils/collections.js","webpack://login_page/./node_modules/langium/lib/references/scope-computation.js","webpack://login_page/./node_modules/langium/lib/references/scope.js","webpack://login_page/./node_modules/langium/lib/utils/caching.js","webpack://login_page/./node_modules/langium/lib/references/scope-provider.js","webpack://login_page/./node_modules/langium/lib/serializer/json-serializer.js","webpack://login_page/./node_modules/langium/lib/service-registry.js","webpack://login_page/./node_modules/langium/lib/workspace/ast-descriptions.js","webpack://login_page/./node_modules/langium/lib/workspace/ast-node-locator.js","webpack://login_page/./node_modules/langium/lib/workspace/configuration.js","webpack://login_page/./node_modules/langium/lib/workspace/document-builder.js","webpack://login_page/./node_modules/langium/lib/workspace/index-manager.js","webpack://login_page/./node_modules/langium/lib/workspace/workspace-manager.js","webpack://login_page/./node_modules/langium/lib/parser/lexer.js","webpack://login_page/./node_modules/langium/lib/documentation/jsdoc.js","webpack://login_page/./node_modules/langium/lib/documentation/documentation-provider.js","webpack://login_page/./node_modules/langium/lib/documentation/comment-provider.js","webpack://login_page/./node_modules/langium/lib/parser/async-parser.js","webpack://login_page/./node_modules/langium/lib/workspace/workspace-lock.js","webpack://login_page/./node_modules/langium/lib/serializer/hydrator.js","webpack://login_page/./node_modules/langium/lib/default-module.js","webpack://login_page/./node_modules/langium/lib/languages/grammar-config.js","webpack://login_page/./node_modules/langium/lib/parser/langium-parser-builder.js","webpack://login_page/./node_modules/langium/lib/parser/completion-parser-builder.js","webpack://login_page/./node_modules/langium/lib/dependency-injection.js","webpack://login_page/./node_modules/langium/lib/languages/generated/ast.js","webpack://login_page/./node_modules/langium/lib/parser/token-builder.js","webpack://login_page/./node_modules/langium/lib/parser/value-converter.js","webpack://login_page/./node_modules/langium/lib/syntax-tree.js","webpack://login_page/./node_modules/langium/lib/utils/ast-utils.js","webpack://login_page/./node_modules/langium/lib/utils/cst-utils.js","webpack://login_page/./node_modules/langium/lib/utils/errors.js","webpack://login_page/./node_modules/langium/lib/utils/grammar-utils.js","webpack://login_page/./node_modules/langium/lib/utils/regexp-utils.js","webpack://login_page/./node_modules/langium/lib/utils/stream.js","webpack://login_page/./node_modules/langium/lib/workspace/file-system-provider.js","webpack://login_page/./node_modules/lodash-es/_baseExtremum.js","webpack://login_page/./node_modules/lodash-es/_baseLt.js","webpack://login_page/./node_modules/lodash-es/_baseSet.js","webpack://login_page/./node_modules/lodash-es/_basePickBy.js","webpack://login_page/./node_modules/lodash-es/clone.js","webpack://login_page/./node_modules/lodash-es/defaults.js","webpack://login_page/./node_modules/lodash-es/_createFind.js","webpack://login_page/./node_modules/lodash-es/findIndex.js","webpack://login_page/./node_modules/lodash-es/find.js","webpack://login_page/./node_modules/lodash-es/flatMap.js","webpack://login_page/./node_modules/lodash-es/flatten.js","webpack://login_page/./node_modules/lodash-es/_baseHas.js","webpack://login_page/./node_modules/lodash-es/has.js","webpack://login_page/./node_modules/lodash-es/isString.js","webpack://login_page/./node_modules/lodash-es/last.js","webpack://login_page/./node_modules/lodash-es/min.js","webpack://login_page/./node_modules/lodash-es/toFinite.js","webpack://login_page/./node_modules/lodash-es/toInteger.js","webpack://login_page/./node_modules/vscode-uri/lib/esm/index.mjs"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar ClassDefStatement = \"ClassDefStatement\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Item = \"Item\";\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Treemap = \"Treemap\";\nfunction isTreemap(item) {\n  return reflection.isInstance(item, Treemap);\n}\n__name(isTreemap, \"isTreemap\");\nvar TreemapRow = \"TreemapRow\";\nvar Direction = \"Direction\";\nvar Leaf = \"Leaf\";\nvar Section = \"Section\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, ClassDefStatement, Commit, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Item, Junction, Leaf, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Section, Service, Statement, Treemap, TreemapRow];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      case Leaf:\n      case Section: {\n        return this.isSubtype(Item, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case ClassDefStatement: {\n        return {\n          name: ClassDefStatement,\n          properties: [\n            { name: \"className\" },\n            { name: \"styleText\" }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Item: {\n        return {\n          name: Item,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"bits\" },\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Treemap: {\n        return {\n          name: Treemap,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" },\n            { name: \"TreemapRows\", defaultValue: [] }\n          ]\n        };\n      }\n      case TreemapRow: {\n        return {\n          name: TreemapRow,\n          properties: [\n            { name: \"indent\" },\n            { name: \"item\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Leaf: {\n        return {\n          name: Leaf,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Section: {\n        return {\n          name: Section,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"packet\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"bits\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]}]},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"REFERENCE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@2\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@2\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\nvar loadedTreemapGrammar;\nvar TreemapGrammar = /* @__PURE__ */ __name(() => loadedTreemapGrammar ?? (loadedTreemapGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Treemap\",\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Treemap\",\"returnType\":{\"$ref\":\"#/interfaces@4\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"TreemapRows\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"TREEMAP_KEYWORD\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap-beta\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"CLASS_DEF\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/classDef\\\\\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\\\\\s+([^;\\\\\\\\r\\\\\\\\n]*))?(?:;)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STYLE_SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":::\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"COMMA\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\",\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WS\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"ML_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\%\\\\\\\\%[^\\\\\\\\n]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"NL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"TreemapRow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"indent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"item\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"ClassDef\",\"dataType\":\"string\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Item\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Section\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Leaf\",\"returnType\":{\"$ref\":\"#/interfaces@2\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INDENTATION\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]{1,}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9_\\\\\\\\.\\\\\\\\,]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"MyNumber\",\"dataType\":\"number\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Item\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"name\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"classSelector\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Section\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[]},{\"$type\":\"Interface\",\"name\":\"Leaf\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}]},{\"$type\":\"Interface\",\"name\":\"ClassDefStatement\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"className\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"styleText\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Treemap\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"TreemapRows\",\"type\":{\"$type\":\"ArrayType\",\"elementType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@14\"}}},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[],\"$comment\":\"/**\\\\n * Treemap grammar for Langium\\\\n * Converted from mindmap grammar\\\\n *\\\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\\\n * before the treemap keyword, allowing for empty lines and comments before the\\\\n * treemap declaration.\\\\n */\"}`)), \"TreemapGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar TreemapLanguageMetaData = {\n  languageId: \"treemap\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar TreemapGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => TreemapGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => TreemapLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  Treemap,\n  isTreemap,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  TreemapGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  TreemapGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/treemap/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/treemap/tokenBuilder.ts\nvar TreemapTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"TreemapTokenBuilder\");\n  }\n  constructor() {\n    super([\"treemap\"]);\n  }\n};\n\n// src/language/treemap/valueConverter.ts\nvar classDefRegex = /classDef\\s+([A-Z_a-z]\\w+)(?:\\s+([^\\n\\r;]*))?;?/;\nvar TreemapValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"TreemapValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"NUMBER2\") {\n      return parseFloat(input.replace(/,/g, \"\"));\n    } else if (rule.name === \"SEPARATOR\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"STRING2\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"INDENTATION\") {\n      return input.length;\n    } else if (rule.name === \"ClassDef\") {\n      if (typeof input !== \"string\") {\n        return input;\n      }\n      const match = classDefRegex.exec(input);\n      if (match) {\n        return {\n          $type: \"ClassDefStatement\",\n          className: match[1],\n          styleText: match[2] || void 0\n        };\n      }\n    }\n    return void 0;\n  }\n};\n\n// src/language/treemap/treemap-validator.ts\nfunction registerValidationChecks(services) {\n  const validator = services.validation.TreemapValidator;\n  const registry = services.validation.ValidationRegistry;\n  if (registry) {\n    const checks = {\n      Treemap: validator.checkSingleRoot.bind(validator)\n      // Remove unused validation for TreemapRow\n    };\n    registry.register(checks, validator);\n  }\n}\n__name(registerValidationChecks, \"registerValidationChecks\");\nvar TreemapValidator = class {\n  static {\n    __name(this, \"TreemapValidator\");\n  }\n  /**\n   * Validates that a treemap has only one root node.\n   * A root node is defined as a node that has no indentation.\n   */\n  checkSingleRoot(doc, accept) {\n    let rootNodeIndentation;\n    for (const row of doc.TreemapRows) {\n      if (!row.item) {\n        continue;\n      }\n      if (rootNodeIndentation === void 0 && // Check if this is a root node (no indentation)\n      row.indent === void 0) {\n        rootNodeIndentation = 0;\n      } else if (row.indent === void 0) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      } else if (rootNodeIndentation !== void 0 && rootNodeIndentation >= parseInt(row.indent, 10)) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      }\n    }\n  }\n};\n\n// src/language/treemap/module.ts\nvar TreemapModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new TreemapTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new TreemapValueConverter(), \"ValueConverter\")\n  },\n  validation: {\n    TreemapValidator: /* @__PURE__ */ __name(() => new TreemapValidator(), \"TreemapValidator\")\n  }\n};\nfunction createTreemapServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Treemap = inject(\n    createDefaultCoreModule({ shared }),\n    TreemapGeneratedModule,\n    TreemapModule\n  );\n  shared.ServiceRegistry.register(Treemap);\n  registerValidationChecks(Treemap);\n  return { shared, Treemap };\n}\n__name(createTreemapServices, \"createTreemapServices\");\n\nexport {\n  TreemapModule,\n  createTreemapServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-JEIROHC2.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs\";\nimport {\n  TreemapModule,\n  createTreemapServices\n} from \"./chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap\n} from \"./chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-63CPKGFF.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-HUATNLJX.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-WTHONI2E.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-NJJJXTRR.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\"),\n  treemap: /* @__PURE__ */ __name(async () => {\n    const { createTreemapServices: createTreemapServices2 } = await import(\"./chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs\");\n    const parser = createTreemapServices2().Treemap.parser.LangiumParser;\n    parsers.treemap = parser;\n  }, \"treemap\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  TreemapModule,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  createTreemapServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap,\n  parse\n};\n","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map"],"names":["r","Object","Array","Error","e","t","String","Number","i","a","h","parseInt","l","C","Set","RegExp","c","parseFloat","b","Math","m","TypeError","arguments","console","Date","n","s","isNaN","NaN","Map","JSON","o","Symbol","performance","Promise","setImmediate","setTimeout","Proxy","BigInt","f","process","navigator","u","encodeURIComponent","decodeURIComponent"],"mappings":"qHAUI,EACO,CALX,GAAQ,uBAAuB,CAAG,EAAQ,iBAAiB,CAAG,KAAK,EACnE,IAAM,EAAQA,EAAQ,OAChB,EAAKA,EAAQ,OACb,EAAWA,EAAQ,MAGrB,EADO,EAgBR,GAAsB,GAAQ,iBAAiB,CAAG,EAAoB,CAAC,IAfpD,IAAI,CAAGC,OAAO,MAAM,CAAC,CACnC,wBAAyB,GACzB,wBAAyB,EAAS,KAAK,CAAC,IAAI,AAChD,GACA,EAAkB,SAAS,CAAGA,OAAO,MAAM,CAAC,CACxC,wBAAyB,GACzB,wBAAyB,EAAS,KAAK,CAAC,IAAI,AAChD,GAOA,EAAkB,EAAE,CANpB,SAAY,CAAK,EAEb,OAAO,AADW,GACG,CADH,IACiB,EAAkB,IAAI,EAClD,AAFW,IAEG,EAAkB,SAAS,EACxC,EAAG,OAAO,CAAC,AAHD,EAGW,uBAAuB,GAAK,CAAC,CAAC,AAHzC,EAGmD,uBAAuB,CAChG,EAGJ,IAAM,EAAgBA,OAAO,MAAM,CAAC,SAAU,CAAQ,CAAE,CAAO,EAC3D,IAAM,EAAS,AAAC,GAAG,EAAM,OAAO,AAAD,IAAK,KAAK,CAAC,UAAU,CAAC,EAAS,IAAI,CAAC,GAAU,GAC7E,MAAO,CAAE,UAAY,EAAO,OAAO,EAAI,CAAE,CAC7C,EACA,OAAM,EACF,aAAc,CACV,IAAI,CAAC,YAAY,CAAG,EACxB,CACA,QAAS,CACD,CAAC,IAAI,CAAC,YAAY,GAClB,IAAI,CAAC,YAAY,CAAG,GAChB,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QACnB,IAAI,CAAC,OAAO,IAGxB,CACA,IAAI,yBAA0B,CAC1B,OAAO,IAAI,CAAC,YAAY,AAC5B,CACA,IAAI,yBAA0B,QAC1B,AAAI,IAAI,CAAC,YAAY,CACV,GAEP,AAAC,IAAI,CAAC,QAAQ,EACd,KAAI,CAAC,QAAQ,CAAG,IAAI,EAAS,OAAO,AAAC,EAElC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAC9B,CACA,SAAU,CACF,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,QAAQ,CAAC,OAAO,GACrB,IAAI,CAAC,QAAQ,CAAG,OAExB,CACJ,CAgCA,EAAQ,uBAAuB,CA/B/B,MACI,IAAI,OAAQ,CAMR,OALI,AAAC,IAAI,CAAC,MAAM,EAGZ,KAAI,CAAC,MAAM,CAAG,IAAI,CAAa,EAE5B,IAAI,CAAC,MAAM,AACtB,CACA,QAAS,CACA,IAAI,CAAC,MAAM,CAOZ,IAAI,CAAC,MAAM,CAAC,MAAM,GAHlB,IAAI,CAAC,MAAM,CAAG,EAAkB,SAAS,AAKjD,CACA,SAAU,CACD,IAAI,CAAC,MAAM,CAIP,IAAI,CAAC,MAAM,YAAY,GAE5B,IAAI,CAAC,MAAM,CAAC,OAAO,GAJnB,IAAI,CAAC,MAAM,CAAG,EAAkB,IAAI,AAM5C,CACJ,C,wBCzFAA,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,GAC3D,EAAQ,OAAO,CAAG,EAAQ,KAAK,CAAG,KAAK,EACvC,IAAM,EAAQD,EAAQ,WAClB,EACO,EAGR,GAAU,GAAQ,KAAK,CAAG,EAAQ,CAAC,GAFlC,IAAM,EAAc,CAAE,UAAY,CAAE,CACpC,GAAM,IAAI,CAAG,WAAc,OAAO,CAAa,CAEnD,OAAM,EACF,IAAI,CAAQ,CAAE,EAAU,IAAI,CAAE,CAAM,CAAE,CAC7B,IAAI,CAAC,UAAU,GAChB,IAAI,CAAC,UAAU,CAAG,EAAE,CACpB,IAAI,CAAC,SAAS,CAAG,EAAE,EAEvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAChBE,MAAM,OAAO,CAAC,IACd,EAAO,IAAI,CAAC,CAAE,QAAS,IAAM,IAAI,CAAC,MAAM,CAAC,EAAU,EAAS,EAEpE,CACA,OAAO,CAAQ,CAAE,EAAU,IAAI,CAAE,CAC7B,GAAI,CAAC,IAAI,CAAC,UAAU,CAChB,OAEJ,IAAI,EAAoC,GACxC,IAAK,IAAI,EAAI,EAAG,EAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,EAAI,EAAK,IACnD,GAAI,IAAI,CAAC,UAAU,CAAC,EAAE,GAAK,EACvB,GAAI,IAAI,CAAC,SAAS,CAAC,EAAE,GAAK,EAAS,CAE/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAG,GAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAG,GACzB,MACJ,MAEI,EAAoC,GAIhD,GAAI,EACA,MAAM,AAAIC,MAAM,oFAExB,CACA,OAAO,GAAG,CAAI,CAAE,CACZ,GAAI,CAAC,IAAI,CAAC,UAAU,CAChB,MAAO,EAAE,CAEb,IAAM,EAAM,EAAE,CAAE,EAAY,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAI,EAAW,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GACtF,IAAK,IAAI,EAAI,EAAG,EAAM,EAAU,MAAM,CAAE,EAAI,EAAK,IAC7C,GAAI,CACA,EAAI,IAAI,CAAC,CAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAQ,CAAC,EAAE,CAAE,GAC7C,CACA,MAAOC,EAAG,CAEN,AAAC,GAAG,EAAM,OAAO,AAAD,IAAK,OAAO,CAAC,KAAK,CAACA,EACvC,CAEJ,OAAO,CACX,CACA,SAAU,CACN,MAAO,CAAC,IAAI,CAAC,UAAU,EAAI,AAA2B,IAA3B,IAAI,CAAC,UAAU,CAAC,MAAM,AACrD,CACA,SAAU,CACN,IAAI,CAAC,UAAU,CAAG,OAClB,IAAI,CAAC,SAAS,CAAG,MACrB,CACJ,CACA,MAAM,EACF,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,QAAQ,CAAG,CACpB,CAKA,IAAI,OAAQ,CA6BR,OA5BI,AAAC,IAAI,CAAC,MAAM,EACZ,KAAI,CAAC,MAAM,CAAG,CAAC,EAAUC,EAAU,KAC3B,AAAC,IAAI,CAAC,UAAU,EAChB,KAAI,CAAC,UAAU,CAAG,IAAI,CAAa,EAEnC,IAAI,CAAC,QAAQ,EAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAI,IAAI,CAAC,UAAU,CAAC,OAAO,IAC5E,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,EAEzC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAUA,GAC9B,IAAM,EAAS,CACX,QAAS,KACA,IAAI,CAAC,UAAU,GAIpB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAUA,GACjC,EAAO,OAAO,CAAG,EAAQ,KAAK,CAC1B,IAAI,CAAC,QAAQ,EAAI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAI,IAAI,CAAC,UAAU,CAAC,OAAO,IAC9E,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,EAE/C,CACJ,EAIA,OAHIH,MAAM,OAAO,CAAC,IACd,EAAY,IAAI,CAAC,GAEd,CACX,GAEG,IAAI,CAAC,MAAM,AACtB,CAKA,KAAKE,CAAK,CAAE,CACJ,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAEA,EAErD,CACA,SAAU,CACF,IAAI,CAAC,UAAU,GACf,IAAI,CAAC,UAAU,CAAC,OAAO,GACvB,IAAI,CAAC,UAAU,CAAG,OAE1B,CACJ,CACA,EAAQ,OAAO,CAAG,EAClB,EAAQ,KAAK,CAAG,WAAc,C,sBCpH9B,SAAS,EAAO,CAAK,EACjB,MAAO,AAAiB,UAAjB,OAAO,GAAsB,aAAiBE,MACzD,CAcA,SAAS,EAAM,CAAK,EAChB,OAAOJ,MAAM,OAAO,CAAC,EACzB,CAxBAD,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,GAC3D,EAAQ,WAAW,CAAG,EAAQ,KAAK,CAAG,EAAQ,IAAI,CAAG,EAAQ,KAAK,CAAG,EAAQ,MAAM,CAAG,EAAQ,MAAM,CAAG,EAAQ,OAAO,CAAG,KAAK,EAI9H,EAAQ,OAAO,CAHf,SAAiB,CAAK,EAClB,MAAO,AAAU,KAAV,GAAkB,AAAU,KAAV,CAC7B,EAKA,EAAQ,MAAM,CAAG,EAIjB,EAAQ,MAAM,CAHd,SAAgB,CAAK,EACjB,MAAO,AAAiB,UAAjB,OAAO,GAAsB,aAAiBM,MACzD,EAKA,EAAQ,KAAK,CAHb,SAAe,CAAK,EAChB,OAAO,aAAiBJ,KAC5B,EAKA,EAAQ,IAAI,CAHZ,SAAc,CAAK,EACf,MAAO,AAAiB,YAAjB,OAAO,CAClB,EAKA,EAAQ,KAAK,CAAG,EAIhB,EAAQ,WAAW,CAHnB,SAAqB,CAAK,EACtB,OAAO,EAAM,IAAU,EAAM,KAAK,CAACC,GAAQ,EAAOA,GACtD,C,0BC3BI,EACJ,SAAS,IACL,GAAI,AAAS,SAAT,EACA,MAAM,AAAID,MAAM,0CAEpB,OAAO,CACX,CAPAF,OAAO,cAAc,CAAC,EAAS,aAAc,CAAE,MAAO,EAAK,GAevD,AACD,IAAQ,GAAM,CAAC,EAAC,EADX,OAAO,CANX,SAAiB,CAAG,EAChB,GAAI,AAAQ,SAAR,EACA,MAAM,AAAIE,MAAM,yCAEpB,EAAO,CACX,EAGJ,SAAe,CAAG,C,wBCtBX,SAAS,EAAG,CAAI,EACnB,OAAO,EAAK,UAAU,CAAC,EAC3B,CACO,SAASK,EAAY,CAAI,CAAE,CAAG,EAC7BN,MAAM,OAAO,CAAC,GACd,EAAK,OAAO,CAAC,SAAU,CAAO,EAC1B,EAAI,IAAI,CAAC,EACb,GAGA,EAAI,IAAI,CAAC,EAEjB,CACO,SAASO,EAAQ,CAAO,CAAE,CAAO,EACpC,GAAI,AAAqB,KAArB,CAAO,CAAC,EAAQ,CAChB,KAAM,kBAAoB,CAEpB,EAAO,CAAC,EAAQ,CAC1B,CAAO,CAAC,EAAQ,CAAG,EACvB,CACO,SAAS,EAAc,CAAG,EAE7B,GAAI,AAAQ,SAAR,EACA,MAAMN,MAAM,2CAEhB,MAAO,EACX,CAEO,SAAS,IACZ,MAAMA,MAAM,0CAChB,CACO,SAAS,EAAY,CAAG,EAC3B,MAAO,AAAgB,cAAhB,EAAI,IAAO,AACtB,C,yBChCO,IAAM,EAAkB,EAAE,CACjC,IAAK,IAAI,EAAI,EAAG,KAAM,GAAK,EAAG,KAAM,IAChC,EAAgB,IAAI,CAAC,GAElB,IAAM,EAAgB,CAAC,EAAG,KAAK,CAAC,MAAM,CAAC,GAC9C,IAAK,IAAI,EAAI,EAAG,KAAM,GAAK,EAAG,KAAM,IAChC,EAAc,IAAI,CAAC,GAEvB,IAAK,IAAI,EAAI,EAAG,KAAM,GAAK,EAAG,KAAM,IAChC,EAAc,IAAI,CAAC,GAGhB,IAAM,EAAkB,CAC3B,EAAG,KACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,KACH,EAAG,MACH,EAAG,KACH,EAAG,QACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,UACH,EAAG,UACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,UACN,CCrCKO,EAAkB,cAClB,EAAiB,QACjB,EAAuB,OAGtB,OAAM,EACT,aAAc,CACV,IAAI,CAAC,GAAG,CAAG,EACX,IAAI,CAAC,KAAK,CAAG,GACb,IAAI,CAAC,QAAQ,CAAG,CACpB,CACA,WAAY,CACR,MAAO,CACH,IAAK,IAAI,CAAC,GAAG,CACb,MAAO,IAAI,CAAC,KAAK,CACjB,SAAU,IAAI,CAAC,QAAQ,AAC3B,CACJ,CACA,aAAa,CAAQ,CAAE,CACnB,IAAI,CAAC,GAAG,CAAG,EAAS,GAAG,CACvB,IAAI,CAAC,KAAK,CAAG,EAAS,KAAK,CAC3B,IAAI,CAAC,QAAQ,CAAG,EAAS,QAAQ,AACrC,CACA,QAAQ,CAAK,CAAE,CAEX,IAAI,CAAC,GAAG,CAAG,EACX,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,WAAW,CAAC,KACjB,IAAM,EAAQ,IAAI,CAAC,WAAW,GAC9B,IAAI,CAAC,WAAW,CAAC,KACjB,IAAM,EAAQ,CACV,KAAM,QACN,IAAK,CAAE,MAAO,IAAI,CAAC,GAAG,CAAE,IAAK,EAAM,MAAM,AAAC,EAC1C,OAAQ,GACR,WAAY,GACZ,UAAW,GACX,QAAS,GACT,OAAQ,EACZ,EACA,KAAO,IAAI,CAAC,YAAY,IACpB,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACDD,EAAQ,EAAO,UACf,KACJ,KAAK,IACDA,EAAQ,EAAO,cACf,KACJ,KAAK,IACDA,EAAQ,EAAO,aACf,KACJ,KAAK,IACDA,EAAQ,EAAO,WACf,KACJ,KAAK,IACDA,EAAQ,EAAO,SAEvB,CAEJ,GAAI,IAAI,CAAC,GAAG,GAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAC9B,MAAMN,MAAM,oBAAsB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAEnE,MAAO,CACH,KAAM,UACN,MAAO,EACP,MAAO,EACP,IAAK,IAAI,CAAC,GAAG,CAAC,EAClB,CACJ,CACA,aAAc,CACV,IAAM,EAAO,EAAE,CACT,EAAQ,IAAI,CAAC,GAAG,CAEtB,IADA,EAAK,IAAI,CAAC,IAAI,CAAC,WAAW,IACnB,AAAoB,MAApB,IAAI,CAAC,QAAQ,IAChB,IAAI,CAAC,WAAW,CAAC,KACjB,EAAK,IAAI,CAAC,IAAI,CAAC,WAAW,IAE9B,MAAO,CAAE,KAAM,cAAe,MAAO,EAAM,IAAK,IAAI,CAAC,GAAG,CAAC,EAAO,CACpE,CACA,aAAc,CACV,IAAM,EAAQ,EAAE,CACV,EAAQ,IAAI,CAAC,GAAG,CACtB,KAAO,IAAI,CAAC,MAAM,IACd,EAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAExB,MAAO,CAAE,KAAM,cAAe,MAAO,EAAO,IAAK,IAAI,CAAC,GAAG,CAAC,EAAO,CACrE,CACA,MAAO,QACH,AAAI,IAAI,CAAC,WAAW,GACT,IAAI,CAAC,SAAS,GAGd,IAAI,CAAC,IAAI,EAExB,CACA,WAAY,CACR,IAAM,EAAQ,IAAI,CAAC,GAAG,CACtB,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACD,MAAO,CACH,KAAM,cACN,IAAK,IAAI,CAAC,GAAG,CAAC,EAClB,CACJ,KAAK,IACD,MAAO,CAAE,KAAM,YAAa,IAAK,IAAI,CAAC,GAAG,CAAC,EAAO,CAErD,KAAK,KACD,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACD,MAAO,CACH,KAAM,eACN,IAAK,IAAI,CAAC,GAAG,CAAC,EAClB,CACJ,KAAK,IACD,MAAO,CACH,KAAM,kBACN,IAAK,IAAI,CAAC,GAAG,CAAC,EAClB,CACR,CAEA,MAAMA,MAAM,2BAEhB,KAAK,QAEGE,EACJ,OAFA,IAAI,CAAC,WAAW,CAAC,KAET,IAAI,CAAC,OAAO,IAChB,IAAK,IACDA,EAAO,YACP,KACJ,KAAK,IACDA,EAAO,mBAEf,CACA,EAAcA,GACd,IAAM,EAAc,IAAI,CAAC,WAAW,GAEpC,OADA,IAAI,CAAC,WAAW,CAAC,KACV,CACH,KAAMA,EACN,MAAO,EACP,IAAK,IAAI,CAAC,GAAG,CAAC,EAClB,CACR,CAEA,OAAO,GACX,CACA,WAAW,EAAiB,EAAK,CAAE,CAE/B,IADI,EACE,EAAQ,IAAI,CAAC,GAAG,CACtB,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACD,EAAQ,CACJ,QAAS,EACT,OAAQ,GACZ,EACA,KACJ,KAAK,IACD,EAAQ,CACJ,QAAS,EACT,OAAQ,GACZ,EACA,KACJ,KAAK,IACD,EAAQ,CACJ,QAAS,EACT,OAAQ,CACZ,EACA,KACJ,KAAK,IACD,IAAM,EAAU,IAAI,CAAC,oBAAoB,GACzC,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACD,EAAQ,CACJ,QAAS,EACT,OAAQ,CACZ,EACA,KACJ,KAAK,IAIG,EAFA,IAAI,CAAC,OAAO,GAEJ,CACJ,QAAS,EACT,OAHK,IAAI,CAAC,oBAAoB,EAIlC,EAGQ,CACJ,QAAS,EACT,OAAQ,GACZ,EAEJ,IAAI,CAAC,WAAW,CAAC,IAEzB,CAGA,GAAI,AAAmB,KAAnB,GAA2B,AAAU,SAAV,EAC3B,OAEJ,EAAc,EAEtB,CAGA,GAAI,CAAmB,KAAnB,GAA2B,AAAU,SAAV,CAAkB,GAI7C,EAAc,GAUd,MATI,AAAqB,MAArB,IAAI,CAAC,QAAQ,CAAC,IACd,IAAI,CAAC,WAAW,CAAC,KACjB,EAAM,MAAM,CAAG,IAGf,EAAM,MAAM,CAAG,GAEnB,EAAM,IAAI,CAAG,aACb,EAAM,GAAG,CAAG,IAAI,CAAC,GAAG,CAAC,GACd,CAEf,CACA,MAAO,CAEH,IADI,EACE,EAAQ,IAAI,CAAC,GAAG,CACtB,OAAQ,IAAI,CAAC,QAAQ,IACjB,IAAK,IACD,EAAO,IAAI,CAAC,MAAM,GAClB,KACJ,KAAK,KACD,EAAO,IAAI,CAAC,UAAU,GACtB,KACJ,KAAK,IACD,EAAO,IAAI,CAAC,cAAc,GAC1B,KACJ,KAAK,IACD,EAAO,IAAI,CAAC,KAAK,EAEzB,OAKA,CAJI,AAAS,SAAT,GAAsB,IAAI,CAAC,kBAAkB,IAC7C,GAAO,IAAI,CAAC,gBAAgB,EAAC,EAG7B,EAAc,KACd,EAAK,GAAG,CAAG,IAAI,CAAC,GAAG,CAAC,GAChB,IAAI,CAAC,YAAY,IACjB,GAAK,UAAU,CAAG,IAAI,CAAC,UAAU,EAAC,EAE/B,GAGJ,GACX,CACA,QAAS,CAEL,OADA,IAAI,CAAC,WAAW,CAAC,KACV,CACH,KAAM,MACN,WAAY,GACZ,MAAO,CAAC,EAAG,MAAO,EAAG,MAAO,EAAG,UAAW,EAAG,UAAU,AAC3D,CACJ,CACA,YAAa,CAET,OADA,IAAI,CAAC,WAAW,CAAC,MACT,IAAI,CAAC,QAAQ,IACjB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,IAAI,CAAC,iBAAiB,EACjC,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,IAAI,CAAC,oBAAoB,EACpC,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,IAAI,CAAC,iBAAiB,EACjC,KAAK,IACD,OAAO,IAAI,CAAC,uBAAuB,EACvC,KAAK,IACD,OAAO,IAAI,CAAC,gBAAgB,EAChC,KAAK,IACD,OAAO,IAAI,CAAC,qBAAqB,EACrC,KAAK,IACD,OAAO,IAAI,CAAC,+BAA+B,EAC/C,SACI,OAAO,IAAI,CAAC,kBAAkB,EACtC,CACJ,CACA,mBAAoB,CAEhB,MAAO,CAAE,KAAM,qBAAsB,MADvB,IAAI,CAAC,eAAe,EACgB,CACtD,CACA,sBAAuB,CAEnB,IADI,EACA,EAAa,GACjB,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACD,EAAM,EACN,KACJ,KAAK,IACD,EAAM,EACN,EAAa,GACb,KACJ,KAAK,IACD,EAAM,EACN,KACJ,KAAK,IACD,EAAM,EACN,EAAa,GACb,KACJ,KAAK,IACD,EAAM,EACN,KACJ,KAAK,IACD,EAAM,EACN,EAAa,EAErB,QAEA,AAAI,EAAc,GACP,CAAE,KAAM,MAAO,MAAO,EAAK,WAAY,CAAW,EAGtD,GACX,CACA,mBAAoB,CAChB,IAAID,EACJ,OAAQ,IAAI,CAAC,OAAO,IAChB,IAAK,IACDA,EAAa,EAAG,MAChB,KACJ,KAAK,IACDA,EAAa,EAAG,MAChB,KACJ,KAAK,IACDA,EAAa,EAAG,MAChB,KACJ,KAAK,IACDA,EAAa,EAAG,KAChB,KACJ,KAAK,IACDA,EAAa,EAAG,KAExB,QAEA,AAAI,EAAcA,GACP,CAAE,KAAM,YAAa,MAAOA,CAAW,EAG3C,GACX,CACA,yBAA0B,CACtB,IAAI,CAAC,WAAW,CAAC,KACjB,IAAM,EAAS,IAAI,CAAC,OAAO,GAC3B,GAAI,AAA4B,KAA5B,WAAW,IAAI,CAAC,GAChB,MAAMD,MAAM,YAGhB,MAAO,CAAE,KAAM,YAAa,MADT,EAAO,WAAW,GAAG,UAAU,CAAC,GAAK,EACV,CAClD,CACA,kBAAmB,CAIf,OADA,IAAI,CAAC,WAAW,CAAC,KACV,CAAE,KAAM,YAAa,MAAO,EAAG,KAAM,CAChD,CACA,uBAAwB,CAEpB,OADA,IAAI,CAAC,WAAW,CAAC,KACV,IAAI,CAAC,cAAc,CAAC,EAC/B,CACA,iCAAkC,CAE9B,OADA,IAAI,CAAC,WAAW,CAAC,KACV,IAAI,CAAC,cAAc,CAAC,EAC/B,CACA,oBAAqB,CAIjB,MAAO,CAAE,KAAM,YAAa,MAAO,EADf,IAAI,CAAC,OAAO,GACmB,CACvD,CACA,2BAA4B,CACxB,OAAQ,IAAI,CAAC,QAAQ,IAEjB,IAAK,KAEL,IAAK,KAEL,IAAK,SAEL,IAAK,SAEL,IAAK,KAEL,IAAK,IACD,MAAMA,MAAM,MAChB,SAEI,MAAO,CAAE,KAAM,YAAa,MAAO,EADlB,IAAI,CAAC,OAAO,GACmB,CACxD,CACJ,CACA,gBAAiB,CACb,IAAM,EAAM,EAAE,CACV,EAAa,GAMjB,IALA,IAAI,CAAC,WAAW,CAAC,KACQ,MAArB,IAAI,CAAC,QAAQ,CAAC,KACd,IAAI,CAAC,WAAW,CAAC,KACjB,EAAa,IAEV,IAAI,CAAC,WAAW,IAAI,CACvB,IAAM,EAAO,IAAI,CAAC,SAAS,GAE3B,GADyB,EAAK,IAAI,CAC9B,EAAY,IAAS,IAAI,CAAC,WAAW,GAAI,CACzC,IAAI,CAAC,WAAW,CAAC,KACjB,IAAM,EAAK,IAAI,CAAC,SAAS,GAGzB,GAFuB,EAAG,IAAI,CAE1B,EAAY,GAAK,CACjB,GAAI,EAAG,KAAK,CAAG,EAAK,KAAK,CACrB,MAAMA,MAAM,yCAEhB,EAAI,IAAI,CAAC,CAAE,KAAM,EAAK,KAAK,CAAE,GAAI,EAAG,KAAK,AAAC,EAC9C,MAGIK,EAAY,EAAK,KAAK,CAAE,GACxB,EAAI,IAAI,CAAC,EAAG,MACZA,EAAY,EAAG,KAAK,CAAE,EAE9B,MAEIA,EAAY,EAAK,KAAK,CAAE,EAEhC,CAEA,OADA,IAAI,CAAC,WAAW,CAAC,KACV,CAAE,KAAM,MAAO,WAAY,EAAY,MAAO,CAAI,CAC7D,CACA,WAAY,CACR,OAAQ,IAAI,CAAC,QAAQ,IAEjB,IAAK,IAEL,IAAK,KAEL,IAAK,KAEL,IAAK,SAEL,IAAK,SACD,MAAML,MAAM,MAChB,KAAK,KACD,OAAO,IAAI,CAAC,WAAW,EAC3B,SACI,OAAO,IAAI,CAAC,yBAAyB,EAC7C,CACJ,CACA,aAAc,CAEV,OADA,IAAI,CAAC,WAAW,CAAC,MACT,IAAI,CAAC,QAAQ,IAGjB,IAAK,IAED,OADA,IAAI,CAAC,WAAW,CAAC,KACV,CAAE,KAAM,YAAa,MAAO,EAAG,KAAU,CACpD,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,IAAI,CAAC,oBAAoB,EACpC,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,IAAI,CAAC,iBAAiB,EACjC,KAAK,IACD,OAAO,IAAI,CAAC,uBAAuB,EACvC,KAAK,IACD,OAAO,IAAI,CAAC,gBAAgB,EAChC,KAAK,IACD,OAAO,IAAI,CAAC,qBAAqB,EACrC,KAAK,IACD,OAAO,IAAI,CAAC,+BAA+B,EAC/C,SACI,OAAO,IAAI,CAAC,kBAAkB,EACtC,CACJ,CACA,OAAQ,CACJ,IAAI,EAAY,GAChB,IAAI,CAAC,WAAW,CAAC,KAER,MADD,IAAI,CAAC,QAAQ,CAAC,IAEd,IAAI,CAAC,WAAW,CAAC,KACjB,IAAI,CAAC,WAAW,CAAC,KACjB,EAAY,IAGZ,IAAI,CAAC,QAAQ,GAGrB,IAAM,EAAQ,IAAI,CAAC,WAAW,GAC9B,IAAI,CAAC,WAAW,CAAC,KACjB,IAAM,EAAW,CACb,KAAM,QACN,UAAW,EACX,MAAO,CACX,EAIA,OAHI,GACA,GAAS,GAAM,CAAG,IAAI,CAAC,QAAQ,AAAD,EAE3B,CACX,CACA,iBAAkB,CACd,IAAI,EAAS,IAAI,CAAC,OAAO,GAGzB,GAAI,AAAsC,KAAtC,EAAqB,IAAI,CAAC,GAC1B,MAAMA,MAAM,gCAEhB,KAAO,EAAe,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KACrC,GAAU,IAAI,CAAC,OAAO,GAE1B,OAAOQ,SAAS,EAAQ,GAC5B,CACA,sBAAuB,CACnB,IAAI,EAAS,IAAI,CAAC,OAAO,GACzB,GAAI,AAAgC,KAAhC,EAAe,IAAI,CAAC,GACpB,MAAMR,MAAM,wBAEhB,KAAO,EAAe,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KACrC,GAAU,IAAI,CAAC,OAAO,GAE1B,OAAOQ,SAAS,EAAQ,GAC5B,CACA,kBAAmB,CACf,IAAM,EAAW,IAAI,CAAC,OAAO,GAC7B,OAAQ,GAEJ,IAAK,KAEL,IAAK,KAEL,IAAK,SAEL,IAAK,SAEL,IAAK,IAEL,IAAK,IAEL,IAAK,KAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAED,MAAMR,MAAM,MAChB,SACI,MAAO,CAAE,KAAM,YAAa,MAAO,EAAG,EAAU,CACxD,CACJ,CACA,cAAe,CACX,OAAQ,IAAI,CAAC,QAAQ,CAAC,IAClB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAO,EACX,SACI,MAAO,EACf,CACJ,CACA,aAAc,CACV,MAAO,AAAoB,MAApB,IAAI,CAAC,QAAQ,IAAc,IAAI,CAAC,WAAW,CAAC,EACvD,CACA,SAAU,CACN,OAAO,EAAe,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC7C,CACA,YAAY,EAAU,CAAC,CAAE,CACrB,OAAQ,IAAI,CAAC,QAAQ,CAAC,IAClB,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,SACL,IAAK,SACD,MAAO,EACX,SACI,MAAO,EACf,CACJ,CACA,QAAS,CACL,OAAO,IAAI,CAAC,MAAM,IAAM,IAAI,CAAC,WAAW,EAC5C,CACA,QAAS,CACL,GAAI,IAAI,CAAC,kBAAkB,GACvB,MAAO,GAEX,OAAQ,IAAI,CAAC,QAAQ,CAAC,IAClB,IAAK,IACL,IAAK,KACL,IAAK,IAEL,IAAK,IACD,MAAO,EACX,SACI,MAAO,EACf,CACJ,CACA,aAAc,CACV,OAAQ,IAAI,CAAC,QAAQ,CAAC,IAClB,IAAK,IACL,IAAK,IACD,MAAO,EAEX,KAAK,KACD,OAAQ,IAAI,CAAC,QAAQ,CAAC,IAClB,IAAK,IACL,IAAK,IACD,MAAO,EACX,SACI,MAAO,EACf,CAEJ,IAAK,IACD,MAAQ,AAAqB,MAArB,IAAI,CAAC,QAAQ,CAAC,IACjB,CAAqB,MAArB,IAAI,CAAC,QAAQ,CAAC,IAAc,AAAqB,MAArB,IAAI,CAAC,QAAQ,CAAC,EAAS,CAC5D,SACI,MAAO,EACf,CACJ,CACA,cAAe,CACX,IAAM,EAAY,IAAI,CAAC,SAAS,GAChC,GAAI,CACA,OAAO,AAA0B,SAA1B,IAAI,CAAC,UAAU,CAAC,GAC3B,CACA,MAAOC,EAAG,CACN,MAAO,EACX,QACQ,CACJ,IAAI,CAAC,YAAY,CAAC,EACtB,CACJ,CACA,oBAAqB,CACjB,OAAQ,IAAI,CAAC,QAAQ,IACjB,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,SACL,IAAK,SACD,MAAO,EACX,SACI,MAAO,EACf,CACJ,CACA,eAAe,CAAO,CAAE,CACpB,IAAI,EAAY,GAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,IAAK,CAC9B,IAAM,EAAU,IAAI,CAAC,OAAO,GAC5B,GAAIM,AAAkC,KAAlCA,EAAgB,IAAI,CAAC,GACrB,MAAMP,MAAM,iCAEhB,GAAa,CACjB,CAEA,MAAO,CAAE,KAAM,YAAa,MADXQ,SAAS,EAAW,GACO,CAChD,CACA,SAAS,EAAU,CAAC,CAAE,CAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAG,EAAQ,AACzC,CACA,SAAU,CACN,IAAM,EAAW,IAAI,CAAC,QAAQ,CAAC,GAE/B,OADA,IAAI,CAAC,WAAW,CAAC,QACV,CACX,CACA,YAAY,CAAI,CAAE,CACd,GAAI,AAAS,SAAT,GAAsB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAK,EAC/C,MAAMR,MAAM,cACR,EACA,iBACA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CACpB,gBACA,IAAI,CAAC,GAAG,EAEhB,GAAI,IAAI,CAAC,GAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAC7B,MAAMA,MAAM,0BAEhB,KAAI,CAAC,GAAG,EACZ,CACA,IAAI,CAAK,CAAE,CACP,MAAO,CAAE,MAAO,EAAO,IAAK,IAAI,CAAC,GAAG,AAAC,CACzC,CACJ,CCztBO,MAAM,EACT,cAAc,CAAI,CAAE,CAChB,IAAK,IAAM,KAAO,EAAM,CACpB,IAAM,EAAQ,CAAI,CAAC,EAAI,CAEnB,EAAK,cAAc,CAAC,KAChB,AAAe,SAAf,EAAM,IAAI,CACV,IAAI,CAAC,KAAK,CAAC,GAEND,MAAM,OAAO,CAAC,IACnB,EAAM,OAAO,CAAC,AAAC,IACX,IAAI,CAAC,KAAK,CAAC,EACf,EAAG,IAAI,EAGnB,CACJ,CACA,MAAM,CAAI,CAAE,CACR,OAAQ,EAAK,IAAI,EACb,IAAK,UACD,IAAI,CAAC,YAAY,CAAC,GAClB,KACJ,KAAK,QACD,IAAI,CAAC,UAAU,CAAC,GAChB,KACJ,KAAK,cACD,IAAI,CAAC,gBAAgB,CAAC,GACtB,KACJ,KAAK,cACD,IAAI,CAAC,gBAAgB,CAAC,GACtB,KACJ,KAAK,cACD,IAAI,CAAC,gBAAgB,CAAC,GACtB,KACJ,KAAK,YACD,IAAI,CAAC,cAAc,CAAC,GACpB,KACJ,KAAK,eACD,IAAI,CAAC,iBAAiB,CAAC,GACvB,KACJ,KAAK,kBACD,IAAI,CAAC,oBAAoB,CAAC,GAC1B,KACJ,KAAK,YACD,IAAI,CAAC,cAAc,CAAC,GACpB,KACJ,KAAK,oBACD,IAAI,CAAC,sBAAsB,CAAC,GAC5B,KACJ,KAAK,YACD,IAAI,CAAC,cAAc,CAAC,GACpB,KACJ,KAAK,MACD,IAAI,CAAC,QAAQ,CAAC,GACd,KACJ,KAAK,QACD,IAAI,CAAC,UAAU,CAAC,GAChB,KACJ,KAAK,qBACD,IAAI,CAAC,uBAAuB,CAAC,GAC7B,KACJ,KAAK,aACD,IAAI,CAAC,eAAe,CAAC,EAE7B,CACA,IAAI,CAAC,aAAa,CAAC,EACvB,CACA,aAAa,CAAI,CAAE,CAAE,CACrB,WAAW,CAAI,CAAE,CAAE,CACnB,iBAAiB,CAAI,CAAE,CAAE,CACzB,iBAAiB,CAAI,CAAE,CAAE,CAEzB,iBAAiB,CAAI,CAAE,CAAE,CACzB,eAAe,CAAI,CAAE,CAAE,CACvB,kBAAkB,CAAI,CAAE,CAAE,CAC1B,qBAAqB,CAAI,CAAE,CAAE,CAC7B,eAAe,CAAI,CAAE,CAAE,CACvB,uBAAuB,CAAI,CAAE,CAAE,CAE/B,eAAe,CAAI,CAAE,CAAE,CACvB,SAAS,CAAI,CAAE,CAAE,CACjB,WAAW,CAAI,CAAE,CAAE,CACnB,wBAAwB,CAAI,CAAE,CAAE,CAChC,gBAAgB,CAAI,CAAE,CAAE,CAC5B,C,4JCsVI,EAEA,EAEA,EAEA,EAEA,EAEAU,EAEA,E,gEC5aJ,IAAM,EAAuB,CACzB,QAAS,IAAM,OACf,iBAAkB,IAAO,EACrB,gBAAiB,GACjB,eAAgB,CAAC,WAAW,CAC5B,WAAY,SAChB,EACJ,EACM,EAA6B,CAC/B,cAAe,IAAM,IAAI,IAA+B,AAC5D,EAWO,SAAS,EAAoB,CAAI,EACpC,IAAI,EACJ,IAAM,EAAW,AAZrB,WACI,IAAM,EAAS,SAAO,QAA8B,GAAe,EAAG,GAChE,EAAU,SAAO,QAAwB,CAAE,QAAO,GAAI,GAE5D,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CACX,IAQU,EAAU,EAAS,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,GAE/D,OADA,EAAS,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAS,SAAS,CAAC,CAAC,SAAS,EAAE,MAAC,GAAK,EAAQ,IAAI,AAAD,EAA+B,EAAK,UAAU,QAAQ,CAAC,GAC3J,CACX,C,0BDrCI,EAAYX,OAAO,cAAc,CACjC,EAAS,CAAC,EAAQ,IAAU,EAAU,EAAQ,OAAQ,CAAE,QAAO,aAAc,EAAK,GAIlF,EAAY,YACZ,EAAe,eAInB,EAHA,SAAwB,CAAI,EAC1B,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACuB,kBACvB,IAAI,EAAO,OACP,EAAS,SAIb,EAHA,SAAkB,CAAI,EACpB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACiB,YACjB,IAAI,EAAW,WACXY,EAAgB,gBAChB,EAAoB,oBACpB,EAAS,SAIb,EAHA,SAAkB,CAAI,EACpB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACiB,YACjB,IAAI,EAAQ,QACR,EAAO,OACP,EAAQ,QACR,EAAW,WAIf,EAHA,SAAoB,CAAI,EACtB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACmB,cACnB,IAAI,EAAQ,QACR,EAAO,OAIX,EAHA,SAAgB,CAAI,EAClB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACe,UACf,IAAI,EAAO,OACP,EAAW,WACX,EAAQ,QAIZ,EAHA,SAAiB,CAAI,EACnB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACgB,WAChB,IAAI,EAAS,SACT,EAAS,SAIb,EAHA,SAAkB,CAAI,EACpB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACiB,YACjB,IAAI,EAAc,cAIlB,EAHA,SAAuB,CAAI,EACzB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACsB,iBAKtB,EAHA,SAAe,CAAI,EACjB,OAAO,EAAW,UAAU,CAAC,EAFrB,MAGV,EACc,SACd,IAAI,EAAa,aAIjB,EAHA,SAAsB,CAAI,EACxB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACqB,gBACrB,IAAI,EAAQ,QACR,EAAU,UACV,EAAU,UAId,EAHA,SAAmB,CAAI,EACrB,OAAO,EAAW,UAAU,CAAC,EAAM,EACrC,EACkB,aAClB,IAAI,EAAa,aACb,EAAY,YACZ,EAAO,OACP,EAAU,UACV,EAAuB,cAAc,IAAqB,CAC5D,MAAO,CACL,EAAO,IAAI,CAAE,uBACf,CAAC,AACD,aAAc,CACZ,MAAO,CAAC,EAAc,EAAM,EAAQ,EAAUA,EAAe,EAAmB,EAAQ,EAAO,EAAW,EAAM,EAAO,EAAU,EAAO,EAAM,EAAM,EAAU,EAAM,EAAO,EAAQ,EAAQ,EA1BrL,MA0BuM,EAAY,EAAO,EAAS,EAAS,EAAW,EAAS,EAAW,AACnR,CACA,iBAAiB,CAAO,CAAE,CAAS,CAAE,CACnC,OAAQ,GACN,KAAK,EACL,KAAK,EACL,KAAKA,EACL,KAAK,EACL,KAAK,EACH,OAAO,IAAI,CAAC,SAAS,CAAC,EAAW,EAEnC,MAAK,EACH,OAAO,IAAI,CAAC,SAAS,CAAC,EAAU,EAElC,MAAK,EACL,KAAK,EACH,OAAO,IAAI,CAAC,SAAS,CAAC,EAAM,EAE9B,SACE,MAAO,EAEX,CACF,CACA,iBAAiB,CAAO,CAAE,CACxB,IAAM,EAAc,CAAC,EAAE,EAAQ,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,EAAQ,QAAQ,CAAC,CAAC,CACpE,GACO,eADC,EAEJ,OAAO,CAGP,OAAM,AAAIV,MAAM,CAAC,EAAE,EAAY,6BAA6B,CAAC,CAGnE,CACA,gBAAgB,CAAI,CAAE,CACpB,OAAQ,GACN,KAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,QAAS,aAAc,EAAE,AAAC,EAClC,CAAE,KAAM,SAAU,aAAc,EAAE,AAAC,EACnC,CAAE,KAAM,YAAa,aAAc,EAAE,AAAC,EACtC,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,QAAS,EAClB,AACH,CAEF,MAAKU,EACH,MAAO,CACL,KAAMA,EACN,WAAY,CACV,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,QAAS,EACjB,CAAE,KAAM,OAAQ,aAAc,EAAE,AAAC,EAClC,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,WAAY,EACrB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,SAAU,EAClB,CAAE,KAAM,OAAQ,aAAc,EAAE,AAAC,EACjC,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,aAAc,EAAE,AAAC,EACpC,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,QAAS,EACjB,CAAE,KAAM,WAAY,aAAc,EAAM,EACxC,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,UAAW,aAAc,EAAM,EACvC,CAAE,KAAM,QAAS,EACjB,CAAE,KAAM,WAAY,aAAc,EAAM,EACxC,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,UAAW,aAAc,EAAM,EACvC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,aAAc,aAAc,EAAE,AAAC,EACvC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,eAAgB,EACxB,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,IAAK,EACd,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,QAAS,EACjB,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,OAAQ,aAAc,EAAE,AAAC,EACjC,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,QAAS,aAAc,EAAM,EACtC,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,SAAU,aAAc,EAAE,AAAC,EACnC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,KAAM,EACd,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,KAnQI,MAoQF,MAAO,CACL,KArQA,MAsQA,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,WAAY,aAAc,EAAM,EACxC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,OAAQ,aAAc,EAAE,AAAC,EACjC,CAAE,KAAM,SAAU,aAAc,EAAE,AAAC,EACnC,CAAE,KAAM,UAAW,aAAc,EAAE,AAAC,EACpC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,IAAK,EACb,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,OAAQ,EAChB,CAAE,KAAM,cAAe,aAAc,EAAE,AAAC,EACzC,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,QAAS,EACjB,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,KAAM,EACd,CAAE,KAAM,aAAc,aAAc,EAAE,AAAC,EACvC,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,eAAgB,EACxB,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,OAAQ,EACjB,AACH,CAEF,MAAK,EACH,MAAO,CACL,KAAM,EACN,WAAY,CACV,CAAE,KAAM,eAAgB,EACxB,CAAE,KAAM,MAAO,EAChB,AACH,CAEF,SACE,MAAO,CACL,KAAM,EACN,WAAY,EAAE,AAChB,CAEJ,CACF,CACF,EACI,EAAa,IAAI,EAKjB,EAA8B,EAAO,IAAM,GAAsB,GAAoB,EAAoB,CAAC,yjJAAyjJ,CAAC,GAAI,eAExqJ,GAAgC,EAAO,IAAM,GAAwB,GAAsB,EAAoB,CAAC,koLAAkoL,CAAC,GAAI,iBAEvvL,GAA6B,EAAO,IAAM,GAAqB,GAAmB,EAAoB,CAAC,mtKAAmtK,CAAC,GAAI,cAE/zK,GAAsC,EAAO,IAAM,GAA8B,GAA4B,EAAoB,CAAC,s2WAAs2W,CAAC,GAAI,uBAE7+W,GAAkC,EAAO,IAAM,GAA0B,GAAwB,EAAoB,CAAC,6qVAA6qV,CAAC,GAAI,mBAExyV,GAA+B,EAAO,IAAMD,GAAuBA,CAAAA,EAAqB,EAAoB,CAAC,qrXAAqrX,CAAC,GAAI,gBAEvyX,GAAiC,EAAO,IAAM,GAAyB,GAAuB,EAAoB,CAAC,q6RAAq6R,CAAC,GAAI,kBAG7hS,GAAuB,CACzB,WAAY,OACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAAyB,CAC3B,WAAY,SACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAAsB,CACxB,WAAY,MACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAA+B,CACjC,WAAY,eACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAA2B,CAC7B,WAAY,WACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAAwB,CAC1B,WAAY,QACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAA0B,CAC5B,WAAY,UACZ,eAAgB,CAAC,OAAQ,WAAW,CACpC,gBAAiB,GACjB,KAAM,YACR,EACI,GAA+B,CACjC,cAA+B,EAAO,IAAM,IAAI,EAAwB,gBAC1E,EACI,GAAsB,CACxB,QAAyB,EAAO,IAAM,IAAe,WACrD,iBAAkC,EAAO,IAAM,GAAsB,oBACrE,OAAQ,CAAC,CACX,EACI,GAAwB,CAC1B,QAAyB,EAAO,IAAM,KAAiB,WACvD,iBAAkC,EAAO,IAAM,GAAwB,oBACvE,OAAQ,CAAC,CACX,EACI,GAAqB,CACvB,QAAyB,EAAO,IAAM,KAAc,WACpD,iBAAkC,EAAO,IAAM,GAAqB,oBACpE,OAAQ,CAAC,CACX,EACI,GAA8B,CAChC,QAAyB,EAAO,IAAM,KAAuB,WAC7D,iBAAkC,EAAO,IAAM,GAA8B,oBAC7E,OAAQ,CAAC,CACX,EACI,GAA0B,CAC5B,QAAyB,EAAO,IAAM,KAAmB,WACzD,iBAAkC,EAAO,IAAM,GAA0B,oBACzE,OAAQ,CAAC,CACX,EACI,GAAuB,CACzB,QAAyB,EAAO,IAAM,KAAgB,WACtD,iBAAkC,EAAO,IAAM,GAAuB,oBACtE,OAAQ,CAAC,CACX,EACI,GAAyB,CAC3B,QAAyB,EAAO,IAAM,KAAkB,WACxD,iBAAkC,EAAO,IAAM,GAAyB,oBACxE,OAAQ,CAAC,CACX,EAWI,GAAe,CACjB,UAN4B,6CAO5B,UAN4B,4BAO5B,MANe,uBAOjB,EACI,GAAgC,cAAc,GAAqB,CACrE,MAAO,CACL,EAAO,IAAI,CAAE,gCACf,CAAC,AACD,aAAa,CAAI,CAAE,CAAK,CAAE,CAAO,CAAE,CACjC,IAAI,EAAQ,IAAI,CAAC,kBAAkB,CAAC,EAAM,EAAO,SAIjD,CAHI,AAAU,KAAK,IAAf,GACF,GAAQ,IAAI,CAAC,kBAAkB,CAAC,EAAM,EAAO,EAAO,EAElD,AAAU,KAAK,IAAf,GACK,KAAK,CAAC,aAAa,EAAM,EAAO,GAElC,CACT,CACA,mBAAmB,CAAI,CAAE,CAAK,CAAE,CAAQ,CAAE,CACxC,IAAM,EAAQ,EAAY,CAAC,EAAK,IAAI,CAAC,CACrC,GAAI,AAAU,KAAK,IAAf,EACF,OAEF,IAAM,EAAQ,EAAM,IAAI,CAAC,GACzB,GAAI,AAAU,OAAV,GAGJ,GAAI,AAAa,KAAK,IAAlB,CAAK,CAAC,EAAE,CACV,OAAO,CAAK,CAAC,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,cAAe,KAEhD,GAAI,AAAa,KAAK,IAAlB,CAAK,CAAC,EAAE,CACV,OAAO,CAAK,CAAC,EAAE,CAAC,OAAO,CAAC,SAAU,IAAI,OAAO,CAAC,SAAU,IAAI,OAAO,CAAC,cAAe,KAAK,OAAO,CAAC,eAAgB,MAGpH,CACF,EACI,GAAuB,cAAc,GACvC,MAAO,CACL,EAAO,IAAI,CAAE,uBACf,CAAC,AACD,mBAAmB,CAAK,CAAE,CAAM,CAAE,CAAQ,CAAE,CAE5C,CACF,EAII,GAA8B,cAAc,GAAmB,CACjE,MAAO,CACL,EAAO,IAAI,CAAE,8BACf,CAAC,AACD,YAAY,CAAQ,CAAE,CACpB,KAAK,GACL,IAAI,CAAC,QAAQ,CAAG,IAAIE,IAAI,EAC1B,CACA,mBAAmB,CAAK,CAAET,CAAc,CAAE,CAAO,CAAE,CACjD,IAAM,EAAa,KAAK,CAAC,mBAAmB,EAAOA,EAAgB,GAMnE,OALA,EAAW,OAAO,CAAC,AAAC,IACd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAU,IAAI,GAAK,AAAsB,KAAK,IAA3B,EAAU,OAAO,EACxD,GAAU,OAAO,CAAG,AAAIU,OAAO,EAAU,OAAO,CAAC,QAAQ,GAAK,qBAAoB,CAEtF,GACO,CACT,CACF,EACyB,eAAc,KACrC,MAAO,CACL,EAAO,IAAI,CAAE,qBACf,CAAC,AACH,E,wFEzkBI,EAAuB,cAAc,IAA2B,CAClE,MAAO,CACL,SAAO,IAAI,CAAE,uBACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,WAAW,CACpB,CACF,EAGI,EAAiB,CACnB,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAAwB,gBACvE,eAAgC,SAAO,IAAM,IAAI,IAAoB,CAAI,iBAC3E,CACF,EACA,SAAS,EAAuB,EAAU,GAAe,EACvD,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAW,SACf,QAAwB,CAAE,QAAO,GACjC,IAAuB,CACvB,GAGF,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CAAE,SAAQ,UAAS,CAC5B,CACA,SAAO,EAAwB,yB,wFC7B3B,EAA2B,cAAc,IAA2B,CACtE,MAAO,CACL,SAAO,IAAI,CAAE,2BACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,eAAe,CACxB,CACF,EAGI,EAA6B,cAAc,IAA6B,CAC1E,MAAO,CACL,SAAO,IAAI,CAAE,6BACf,CAAC,AACD,mBAAmB,CAAI,CAAE,CAAK,CAAE,CAAQ,CAAE,OACxC,AAAI,AAAc,cAAd,EAAK,IAAI,CACJ,EAAM,OAAO,CAAC,QAAS,IAAI,IAAI,GAC7B,AAAc,mBAAd,EAAK,IAAI,CACX,EAAM,OAAO,CAAC,SAAU,IACtB,AAAc,eAAd,EAAK,IAAI,CACX,EAAM,OAAO,CAAC,SAAU,IAAI,IAAI,SAG3C,CACF,EAGI,EAAqB,CACvB,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAA4B,gBAC3E,eAAgC,SAAO,IAAM,IAAI,EAA8B,iBACjF,CACF,EACA,SAASC,EAA2B,EAAU,GAAe,EAC3D,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAe,SACnB,QAAwB,CAAE,QAAO,GACjC,IAA2B,CAC3B,GAGF,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CAAE,SAAQ,cAAa,CAChC,CACA,SAAOA,EAA4B,6B,wFC9C/B,EAAqB,cAAc,IAA2B,CAChE,MAAO,CACL,SAAO,IAAI,CAAE,qBACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,SAAS,CAClB,CACF,EAGI,EAAe,CACjB,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAAsB,gBACrE,eAAgC,SAAO,IAAM,IAAI,IAAoB,CAAI,iBAC3E,CACF,EACA,SAAS,EAAqB,EAAU,GAAe,EACrD,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAS,SACb,QAAwB,CAAE,QAAO,GACjC,IAAqB,CACrB,GAGF,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CAAE,SAAQ,QAAO,CAC1B,CACA,SAAO,EAAsB,uB,wFC7BzB,EAAmB,cAAc,IAA2B,CAC9D,MAAO,CACL,SAAO,IAAI,CAAE,mBACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,OAAQ,WAAW,CAC5B,CACF,EAGI,EAAa,CACf,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAAoB,gBACnE,eAAgC,SAAO,IAAM,IAAI,IAAoB,CAAI,iBAC3E,CACF,EACA,SAAS,EAAmB,EAAU,GAAe,EACnD,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAO,SACX,QAAwB,CAAE,QAAO,GACjC,IAAmB,CACnB,GAGF,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CAAE,SAAQ,MAAK,CACxB,CACA,SAAO,EAAoB,qB,wFC7BvB,EAAoB,cAAc,IAA2B,CAC/D,MAAO,CACL,SAAO,IAAI,CAAE,oBACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,aAAa,CACtB,CACF,EAGI,EAAc,CAChB,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAAqB,gBACpE,eAAgC,SAAO,IAAM,IAAI,IAAoB,CAAI,iBAC3E,CACF,EACA,SAAS,EAAoB,EAAU,GAAe,EACpD,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAQ,SACZ,QAAwB,CAAE,QAAO,GACjC,IAAoB,CACpB,GAGF,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CAAE,SAAQ,OAAM,CACzB,CACA,SAAO,EAAqB,sB,uFC7BxB,EAAkB,cAAc,IAA2B,CAC7D,MAAO,CACL,SAAO,IAAI,CAAE,kBACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,MAAO,WAAW,CAC3B,CACF,EAGI,EAAoB,cAAc,IAA6B,CACjE,MAAO,CACL,SAAO,IAAI,CAAE,oBACf,CAAC,AACD,mBAAmB,CAAI,CAAE,CAAK,CAAE,CAAQ,CAAE,CACxC,GAAI,AAAc,sBAAd,EAAK,IAAI,CAGb,OAAO,EAAM,OAAO,CAAC,KAAM,IAAI,IAAI,EACrC,CACF,EAGI,EAAY,CACd,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAAmB,gBAClE,eAAgC,SAAO,IAAM,IAAI,EAAqB,iBACxE,CACF,EACA,SAASA,EAAkB,EAAU,GAAe,EAClD,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAM,SACV,QAAwB,CAAE,QAAO,GACjC,IAAkB,CAClB,GAGF,OADA,EAAO,eAAe,CAAC,QAAQ,CAAC,GACzB,CAAE,SAAQ,KAAI,CACvB,CACA,SAAOA,EAAmB,oB,wFC1CtB,EAAsB,cAAc,IAA2B,CACjE,MAAO,CACL,SAAO,IAAI,CAAE,sBACf,CAAC,AACD,aAAc,CACZ,KAAK,CAAC,CAAC,UAAU,CACnB,CACF,EAGI,EAAgB,iDAChB,EAAwB,cAAc,IAA6B,CACrE,MAAO,CACL,SAAO,IAAI,CAAE,wBACf,CAAC,AACD,mBAAmB,CAAI,CAAE,CAAK,CAAE,CAAQ,CAAE,CACxC,GAAI,AAAc,YAAd,EAAK,IAAI,CACX,OAAOC,WAAW,EAAM,OAAO,CAAC,KAAM,KACjC,GAAI,AAAc,cAAd,EAAK,IAAI,CAClB,OAAO,EAAM,SAAS,CAAC,EAAG,EAAM,MAAM,CAAG,GACpC,GAAI,AAAc,YAAd,EAAK,IAAI,CAClB,OAAO,EAAM,SAAS,CAAC,EAAG,EAAM,MAAM,CAAG,GACpC,GAAI,AAAc,gBAAd,EAAK,IAAI,CAClB,OAAO,EAAM,MAAM,CACd,GAAI,AAAc,aAAd,EAAK,IAAI,CAAiB,CACnC,GAAI,AAAiB,UAAjB,OAAO,EACT,OAAO,EAET,IAAM,EAAQ,EAAc,IAAI,CAAC,GACjC,GAAI,EACF,MAAO,CACL,MAAO,oBACP,UAAW,CAAK,CAAC,EAAE,CACnB,UAAW,CAAK,CAAC,EAAE,EAAI,KAAK,CAC9B,CAEJ,CAEF,CACF,EAGA,SAAS,EAAyB,CAAQ,EACxC,IAAM,EAAY,EAAS,UAAU,CAAC,gBAAgB,CAChDjB,EAAW,EAAS,UAAU,CAAC,kBAAkB,CACvD,GAAIA,EAAU,CACZ,IAAM,EAAS,CACb,QAAS,EAAU,eAAe,CAAC,IAAI,CAAC,EAE1C,EACAA,EAAS,QAAQ,CAAC,EAAQ,EAC5B,CACF,CACA,SAAO,EAA0B,4BACjC,IAAI,EAAmB,MACrB,MAAO,CACL,SAAO,IAAI,CAAE,mBACf,CAAC,AAKD,gBAAgB,CAAG,CAAE,CAAM,CAAE,CAC3B,IAAIA,EACJ,IAAK,IAAM,KAAO,EAAI,WAAW,CAC1B,EAAI,IAAI,GAGTA,AAAwB,KAAK,IAA7BA,GACJ,AAAe,KAAK,IAApB,EAAI,MAAM,CACRA,EAAsB,EACb,AAAe,KAAK,IAApB,EAAI,MAAM,CACnB,EAAO,QAAS,oDAAqD,CACnE,KAAM,EACN,SAAU,MACZ,GACSA,AAAwB,KAAK,IAA7BA,GAAkCA,GAAuBW,SAAS,EAAI,MAAM,CAAE,KACvF,EAAO,QAAS,oDAAqD,CACnE,KAAM,EACN,SAAU,MACZ,GAGN,CACF,EAGI,EAAgB,CAClB,OAAQ,CACN,aAA8B,SAAO,IAAM,IAAI,EAAuB,gBACtE,eAAgC,SAAO,IAAM,IAAI,EAAyB,iBAC5E,EACA,WAAY,CACV,iBAAkC,SAAO,IAAM,IAAI,EAAoB,mBACzE,CACF,EACA,SAAS,EAAsB,EAAU,GAAe,EACtD,IAAM,EAAS,SACb,QAA8B,GAC9B,IAA4B,EAExB,EAAU,SACd,QAAwB,CAAE,QAAO,GACjC,IAAsB,CACtB,GAIF,OAFA,EAAO,eAAe,CAAC,QAAQ,CAAC,GAChC,EAAyB,GAClB,CAAE,SAAQ,SAAQ,CAC3B,CACA,SAAO,EAAuB,wB,sHC1D1B,EAAU,CAAC,EACX,EAAe,CACjB,KAAsB,SAAO,UAC3B,GAAM,CAAE,mBAAoB,CAAmB,CAAE,CAAG,MAAM,iCAE1D,GAAQ,IAAI,CADG,IAAsB,IAAI,CAAC,MAAM,CAAC,aAAa,AAEhE,EAAG,QACH,OAAwB,SAAO,UAC7B,GAAM,CAAE,qBAAsB,CAAqB,CAAE,CAAG,MAAM,iCAE9D,GAAQ,MAAM,CADC,IAAwB,MAAM,CAAC,MAAM,CAAC,aAAa,AAEpE,EAAG,UACH,IAAqB,SAAO,UAC1B,GAAM,CAAE,kBAAmB,CAAkB,CAAE,CAAG,MAAM,gCAExD,GAAQ,GAAG,CADI,IAAqB,GAAG,CAAC,MAAM,CAAC,aAAa,AAE9D,EAAG,OACH,aAA8B,SAAO,UACnC,GAAM,CAAE,2BAA4B,CAA2B,CAAE,CAAG,MAAM,iCAE1E,GAAQ,YAAY,CADL,IAA8B,YAAY,CAAC,MAAM,CAAC,aAAa,AAEhF,EAAG,gBACH,SAA0B,SAAO,UAC/B,GAAM,CAAE,uBAAwB,CAAuB,CAAE,CAAG,MAAM,iCAElE,GAAQ,QAAQ,CADD,IAA0B,QAAQ,CAAC,MAAM,CAAC,aAAa,AAExE,EAAG,YACH,MAAuB,SAAO,UAC5B,GAAM,CAAE,oBAAqB,CAAoB,CAAE,CAAG,MAAM,iCAE5D,GAAQ,KAAK,CADE,IAAuB,KAAK,CAAC,MAAM,CAAC,aAAa,AAElE,EAAG,SACH,QAAyB,SAAO,UAC9B,GAAM,CAAE,sBAAuB,CAAsB,CAAE,CAAG,MAAM,gCAEhE,GAAQ,OAAO,CADA,IAAyB,OAAO,CAAC,MAAM,CAAC,aAAa,AAEtE,EAAG,UACL,EACA,eAAe,EAAM,CAAW,CAAEN,CAAI,EACpC,IAAM,EAAc,CAAY,CAAC,EAAY,CAC7C,GAAI,CAAC,EACH,MAAM,AAAIF,MAAM,CAAC,sBAAsB,EAAE,EAAY,CAAC,CAEpD,AAAC,EAAO,CAAC,EAAY,EACvB,MAAM,IAGR,IAAM,EAAS,AADA,CAAO,CAAC,EAAY,CACb,KAAK,CAACE,GAC5B,GAAI,EAAO,WAAW,CAAC,MAAM,CAAG,GAAK,EAAO,YAAY,CAAC,MAAM,CAAG,EAChE,MAAM,IAAI,EAAkB,GAE9B,OAAO,EAAO,KAAK,AACrB,CACA,SAAO,EAAO,SACd,IAAI,EAAoB,cAAcF,MACpC,YAAY,CAAM,CAAE,CAGlB,KAAK,CAAC,CAAC,gBAAgB,EAFH,EAAO,WAAW,CAAC,GAAG,CAAC,AAACC,GAAQA,EAAI,OAAO,EAAE,IAAI,CAAC,MAEjC,CAAC,EADjB,EAAO,YAAY,CAAC,GAAG,CAAC,AAACA,GAAQA,EAAI,OAAO,EAAE,IAAI,CAAC,MACnB,CAAC,EACtD,IAAI,CAAC,MAAM,CAAG,CAChB,CACA,MAAO,CACL,SAAO,IAAI,CAAE,oBACf,CAAC,AACH,C,iNC9HW,ECMe,ECPf,EC8DA,ECjCA,EJ7BA,EEDA,EC8DA,ECjCA,E,kECjCJ,SAAS,EAAiB,CAAY,EACzC,SAAS,IAAoB,CAE7B,EAAgB,SAAS,CAAG,EAC5B,IAAM,EAAe,IAAI,EACzB,SAAS,IACL,OAAO,OAAO,EAAa,GAAG,AAClC,QAGA,IACA,IAIW,CAMf,CCQA,MArBA,SAAmB,CAAK,CAAE,CAAK,CAAE,CAAG,EAClC,IAAI,EAAQ,GACR,EAAS,EAAM,MAAM,AAErB,GAAQ,GACV,GAAQ,CAAC,EAAQ,EAAS,EAAK,EAAS,CAAK,EAG3C,AADJ,GAAM,EAAM,EAAS,EAAS,CAAE,EACtB,GACR,IAAO,CAAK,EAEd,EAAS,EAAQ,EAAM,EAAK,AAAC,EAAM,IAAW,EAC9C,KAAW,EAGX,IADA,IAAI,EAASF,MAAM,GACZ,EAAE,EAAQ,GACf,CAAM,CAAC,EAAM,CAAG,CAAK,CAAC,EAAQ,EAAM,CAEtC,OAAO,CACT,E,eCSA,MATA,SAAc,CAAK,CAAE,CAAC,CAAE,CAAK,EAC3B,IAAI,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,QAC7C,AAAK,EAIE,EAAU,EAAO,AADxB,GAAI,AAAC,GAAS,AAAM,SAAN,EAAmB,EAAI,QAAU,EAAC,EACpB,EAAI,EAAI,EAAG,GAH9B,EAAE,AAIb,E,iFCxBI,EAAiB,AAHHD,OAAO,SAAS,CAGD,cAAc,CAkC3C,EAAS,QAAe,SAAS,CAAM,CAAE,CAAM,EACjD,GAAI,QAAY,IAAW,QAAY,GAAS,WAC9C,QAAW,EAAQ,QAAK,GAAS,GAGnC,IAAK,IAAI,KAAO,EACV,EAAe,IAAI,CAAC,EAAQ,IAC9B,QAAY,EAAQ,EAAK,CAAM,CAAC,EAAI,CAG1C,G,4CCnBA,MAbA,SAAgB,CAAM,CAAE,CAAS,EAC/B,GAAI,AAAU,MAAV,EACF,MAAO,CAAC,EAEV,IAAI,EAAQ,QAAS,QAAa,GAAS,SAAS,CAAI,EACtD,MAAO,CAAC,EAAK,AACf,GAEA,OADA,EAAY,GAAAiB,EAAA,GAAa,GAClB,QAAW,EAAQ,EAAO,SAAS,CAAK,CAAE,CAAI,EACnD,OAAO,EAAU,EAAO,CAAI,CAAC,EAAE,CACjC,EACF,E,gDC7BI,EAAe,GAAQ,EAAI,YAAiB,CAmB5C,EAAW,EAAe,QAAU,GCXxC,SAAsB,CAAK,EACzB,MAAO,QAAa,IAAU,AAVhB,mBAUgB,QAAW,EAC3C,CCDO,OAAM,EACT,IAAI,YAAa,CACb,OAAO,IAAI,CAAC,WAAW,AAC3B,CACA,IAAI,WAAW,CAAK,CAAE,CAClB,IAAI,CAAC,WAAW,CAAG,CACvB,CACA,YAAY,CAAW,CAAE,CACrB,IAAI,CAAC,WAAW,CAAG,CACvB,CACA,OAAO,CAAO,CAAE,CACZ,EAAQ,KAAK,CAAC,IAAI,EAClB,QAAQ,IAAI,CAAC,UAAU,CAAE,AAAC,IACtB,EAAK,MAAM,CAAC,EAChB,EACJ,CACJ,CACO,MAAM,UAAoB,EAC7B,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAE,EACR,IAAI,CAAC,GAAG,CAAG,EACX,AJsBO,EItBA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACA,IAAI,WAAW,CAAU,CAAE,CAE3B,CACA,IAAI,YAAa,QACb,AAAI,AAAwB,SAAxB,IAAI,CAAC,cAAc,CACZ,IAAI,CAAC,cAAc,CAAC,UAAU,CAElC,EAAE,AACb,CACA,OAAO,CAAO,CAAE,CACZ,EAAQ,KAAK,CAAC,IAAI,CAEtB,CACJ,CACO,MAAM,UAAa,EACtB,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,OAAO,CAAG,GACf,AJEO,EIFA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAAoB,EAC7B,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,iBAAiB,CAAG,GACzB,AJLO,EIKA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAAe,EACxB,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,GAAG,CAAG,EACX,AJZO,EIYA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAA4B,EACrC,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,GAAG,CAAG,EACX,AJnBO,EImBA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAAyC,EAClD,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,GAAG,CAAG,EACX,AJ1BO,EI0BA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAAmB,EAC5B,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,GAAG,CAAG,EACX,AJjCO,EIiCA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAAgC,EACzC,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,GAAG,CAAG,EACX,AJxCO,EIwCA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,UAAoB,EAC7B,IAAI,YAAa,CACb,OAAO,IAAI,CAAC,WAAW,AAC3B,CACA,IAAI,WAAW,CAAK,CAAE,CAClB,IAAI,CAAC,WAAW,CAAG,CACvB,CACA,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,EAAQ,UAAU,EACxB,IAAI,CAAC,GAAG,CAAG,EACX,IAAI,CAAC,iBAAiB,CAAG,GACzB,IAAI,CAAC,aAAa,CAAG,GACrB,AJvDO,EIuDA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACJ,CACO,MAAM,EACT,YAAY,CAAO,CAAE,CACjB,IAAI,CAAC,GAAG,CAAG,EACX,AJ7DO,EI6DA,IAAI,CAAE,EAAO,EAAS,AAAC,GAAM,AAAM,SAAN,GACxC,CACA,OAAO,CAAO,CAAE,CACZ,EAAQ,KAAK,CAAC,IAAI,CACtB,CACJ,CC1HO,MAAM,EACT,MAAM,CAAI,CAAE,CAER,OAAQ,AADQ,EACA,WAAW,EACvB,KAAK,EACD,OAAO,IAAI,CAAC,gBAAgB,CAHpB,EAIZ,MAAK,EACD,OAAO,IAAI,CAAC,gBAAgB,CALpB,EAMZ,MAAK,EACD,OAAO,IAAI,CAAC,WAAW,CAPf,EAQZ,MAAK,EACD,OAAO,IAAI,CAAC,wBAAwB,CAT5B,EAUZ,MAAK,EACD,OAAO,IAAI,CAAC,qCAAqC,CAXzC,EAYZ,MAAK,EACD,OAAO,IAAI,CAAC,4BAA4B,CAbhC,EAcZ,MAAK,EACD,OAAO,IAAI,CAAC,eAAe,CAfnB,EAgBZ,MAAK,EACD,OAAO,IAAI,CAAC,gBAAgB,CAjBpB,EAkBZ,MAAK,EACD,OAAO,IAAI,CAAC,aAAa,CAnBjB,EAoBZ,MAAK,EACD,OAAO,IAAI,CAAC,SAAS,CArBb,EAuBZ,SACI,MAAMf,MAAM,uBACpB,CACJ,CAEA,iBAAiB,CAAI,CAAE,CAAE,CAEzB,iBAAiB,CAAI,CAAE,CAAE,CAEzB,YAAY,CAAI,CAAE,CAAE,CAEpB,gBAAgB,CAAI,CAAE,CAAE,CAExB,yBAAyB,CAAI,CAAE,CAAE,CAEjC,sCAAsC,CAAI,CAAE,CAAE,CAE9C,6BAA6B,CAAI,CAAE,CAAE,CAErC,iBAAiB,CAAI,CAAE,CAAE,CAEzB,cAAc,CAAI,CAAE,CAAE,CAEtB,UAAU,CAAI,CAAE,CAAE,CACtB,C,4BC7BA,OAVA,SAAkB,CAAU,CAAE,CAAS,EACrC,IAAIH,EAMJ,MAJA,SAAS,EAAY,SAAS,CAAK,CAAE,CAAK,CAAE,CAAU,EAEpD,MAAO,CADPA,CAAAA,EAAS,EAAU,EAAO,EAAO,EAAU,CAE7C,GACO,CAAC,CAACA,CACX,E,2BC+BA,OARA,SAAc,CAAU,CAAE,CAAS,CAAE,CAAK,EACxC,IAAI,EAAO,SAAQ,GAAc,IAAS,CAAG,GAI7C,OAHI,GAAS,SAAe,EAAY,EAAW,IACjD,GAAY,MAAQ,EAEf,EAAK,EAAY,GAAAkB,EAAA,GAAa,EAAW,GAClD,E,gBCzCI,GAAYC,KAAK,GAAG,CA6CxB,OAbA,SAAkB,CAAU,CAAE,CAAK,CAAE,CAAS,CAAE,CAAK,EACnD,EAAa,QAAY,GAAc,EAAa,QAAO,GAC3D,EAAY,AAAC,GAAa,CAAC,EAAS,QAAU,GAAa,EAE3D,IAAI,EAAS,EAAW,MAAM,CAI9B,OAHI,EAAY,GACd,GAAY,GAAU,EAAS,EAAW,EAAC,EAEtC,QAAS,GACX,GAAa,GAAU,EAAW,OAAO,CAAC,EAAO,GAAa,GAC9D,CAAC,CAAC,GAAU,SAAY,EAAY,EAAO,GAAa,EAC/D,EC5BA,GAZA,SAAoB,CAAK,CAAE,CAAS,EAIlC,IAHA,IAAI,EAAQ,GACR,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,CAEtC,EAAE,EAAQ,GACf,GAAI,CAAC,EAAU,CAAK,CAAC,EAAM,CAAE,EAAO,GAClC,MAAO,GAGX,MAAO,EACT,ECAA,GATA,SAAmB,CAAU,CAAE,CAAS,EACtC,IAAInB,EAAS,GAKb,MAJA,SAAS,EAAY,SAAS,CAAK,CAAE,CAAK,CAAE,CAAU,EAEpD,OADAA,EAAS,CAAC,CAAC,EAAU,EAAO,EAAO,EAErC,GACOA,CACT,ECqCA,GARA,SAAe,CAAU,CAAE,CAAS,CAAE,CAAK,EACzC,IAAI,EAAO,SAAQ,GAAc,GAAa,GAI9C,OAHI,GAAS,SAAe,EAAY,EAAW,IACjD,GAAY,MAAQ,EAEf,EAAK,EAAY,GAAAkB,EAAA,GAAa,EAAW,GAClD,ECzCO,SAAS,GAAe,CAAI,CAAE,EAAiB,EAAE,SAIpD,AAH2B,aAAgB,GACvC,aAAgB,GAChB,aAAgB,IAOhB,aAAgB,EAET,GAAK,EAAK,UAAU,CAAE,AAAC,GACnB,GAAe,EAAS,KAG9B,cAAgB,GAAe,GAAS,EAAgB,EAAI,GAI5D,aAAgB,IACjB,aAAgB,GAChB,EAAe,IAAI,CAAC,GAEjB,GAAM,EAAK,UAAU,CAAE,AAAC,GACpB,GAAe,EAAS,KAM3C,CAIO,SAAS,GAAqB,CAAI,EAErC,GAAI,aAAgB,EAChB,MAAO,UAEN,GAAI,aAAgB,EACrB,MAAO,SAEN,GAAI,aAAgB,EACrB,MAAO,KAEN,GAAI,aAAgB,EACrB,MAAO,eAEN,GAAI,aAAgB,EACrB,MAAO,wBAEN,GAAI,aAAgB,EACrB,MAAO,gBAEN,GAAI,aAAgB,EACrB,MAAO,YAEN,GAAI,aAAgB,EACrB,MAAO,eAIP,MAAMf,MAAM,uBAEpB,CCxEO,MAAM,GACT,KAAK,CAAI,CAAE,EAAW,EAAE,CAAE,CACtB,QAAQ,EAAK,UAAU,CAAE,CAAC,EAAS,KAC/B,IAAM,EAAW,EAAK,EAAK,UAAU,CAAE,EAAQ,GAE/C,GAAI,aAAmB,EACnB,IAAI,CAAC,WAAW,CAAC,EAAS,EAAU,QAEnC,GAAI,aAAmB,EACxB,IAAI,CAAC,YAAY,CAAC,EAAS,EAAU,QAEpC,GAAI,aAAmB,EACxB,IAAI,CAAC,QAAQ,CAAC,EAAS,EAAU,QAEhC,GAAI,aAAmB,EACxB,IAAI,CAAC,UAAU,CAAC,EAAS,EAAU,QAElC,GAAI,aAAmB,EACxB,IAAI,CAAC,cAAc,CAAC,EAAS,EAAU,QAEtC,GAAI,aAAmB,EACxB,IAAI,CAAC,iBAAiB,CAAC,EAAS,EAAU,QAEzC,GAAI,aAAmB,EACxB,IAAI,CAAC,WAAW,CAAC,EAAS,EAAU,QAEnC,GAAI,aAAmB,EACxB,IAAI,CAAC,QAAQ,CAAC,EAAS,EAAU,QAEhC,GAAI,aAAmB,EACxB,IAAI,CAAC,MAAM,CAAC,EAAS,EAAU,QAG/B,MAAMA,MAAM,uBAEpB,EACJ,CACA,aAAa,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAAE,CAC7C,YAAY,CAAO,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAAE,CAC3C,SAAS,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAEnC,IAAM,EAAa,EAAS,MAAM,CAAC,GACnC,IAAI,CAAC,IAAI,CAAC,EAAU,EACxB,CACA,WAAW,CAAU,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAEvC,IAAM,EAAa,EAAS,MAAM,CAAC,GACnC,IAAI,CAAC,IAAI,CAAC,EAAY,EAC1B,CACA,eAAe,CAAc,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAE/C,IAAM,EAAqB,CACvB,IAAI,EAAO,CAAE,WAAY,EAAe,UAAU,AAAC,GACtD,CAAC,MAAM,CAAC,EAAU,GACnB,IAAI,CAAC,IAAI,CAAC,EAAgB,EAC9B,CACA,kBAAkB,CAAiB,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAErD,IAAM,EAAwB,GAA+B,EAAmB,EAAU,GAC1F,IAAI,CAAC,IAAI,CAAC,EAAmB,EACjC,CACA,SAAS,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAEnC,IAAM,EAAe,CACjB,IAAI,EAAO,CAAE,WAAY,EAAS,UAAU,AAAC,GAChD,CAAC,MAAM,CAAC,EAAU,GACnB,IAAI,CAAC,IAAI,CAAC,EAAU,EACxB,CACA,YAAY,CAAW,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAEzC,IAAM,EAAkB,GAA+B,EAAa,EAAU,GAC9E,IAAI,CAAC,IAAI,CAAC,EAAa,EAC3B,CACA,OAAO,CAAM,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAE/B,IAAM,EAAa,EAAS,MAAM,CAAC,GAEnC,QAAQ,EAAO,UAAU,CAAE,AAAC,IAIxB,IAAM,EAAc,IAAI,EAAY,CAAE,WAAY,CAAC,EAAI,AAAC,GACxD,IAAI,CAAC,IAAI,CAAC,EAAa,EAC3B,EACJ,CACJ,CACA,SAAS,GAA+B,CAAU,CAAE,CAAQ,CAAE,CAAQ,EASlE,MADuB,AAPJ,CACf,IAAI,EAAO,CACP,WAAY,CACR,IAAI,EAAS,CAAE,aAAc,EAAW,SAAS,AAAC,GACrD,CAAC,MAAM,CAAC,EAAW,UAAU,CAClC,GACH,CACiC,MAAM,CAAC,EAAU,EAEvD,C,gBC7EA,OAJA,SAAc,CAAK,EACjB,OAAO,AAAC,GAAS,EAAM,MAAM,CAAI,SAAS,GAAS,EAAE,AACvD,E,gBCpBO,SAAS,GAAM,CAAI,EAEtB,GAAI,aAAgB,EAShB,OAAO,GAAM,EAAK,cAAc,EAE/B,GAAI,aAAgB,EACrB,MAqCG,CAAC,AArCoB,EAqCX,YAAY,CAAC,CAnCzB,GHfG,AGegB,aHfA,GACpB,AGcoB,aHdJ,GAChB,AGaoB,aHbJ,GAChB,AGYoB,aHZJ,GAChB,AGWoB,aHXJ,GAChB,AGUoB,aHVJ,GAChB,AGSoB,aHTJ,GAChB,AGQoB,aHRJ,EGShB,OAAO,AASR,SAA0B,CAAI,EACjC,IAII,EAJA,EAAW,EAAE,CACX,EAAM,EAAK,UAAU,CACvB,EAAiB,EACjB,EAAyB,EAAI,MAAM,CAAG,EAGtC,EAA0B,GAE9B,KAAO,GAA0B,GAE7B,EAA0B,GAD1B,EAAc,CAAG,CAAC,EAAe,EAEjC,EAAW,EAAS,MAAM,CAAC,GAAM,IACjC,GAAkC,EAClC,EAAyB,EAAI,MAAM,CAAG,EAE1C,OAAO,GAAK,EAChB,EA1BgC,GAEvB,GHwBE,AGxBkB,aHwBF,EGvBZ,KAwBmB,EAxBD,EAyB7B,IAAM,EAAwB,GAAAiB,EAAA,GAAI,EAAK,UAAU,CAAE,AAAC,GACzC,GAAM,IAEjB,OAAO,GAAK,SAAQ,GA5Ba,CAG7B,MAAMjB,MAAM,uBAEpB,CC1BO,IAAM,GAAK,QCMX,OAAM,WAA4B,GACrC,YAAY,CAAO,CAAE,CACjB,KAAK,GACL,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,OAAO,CAAG,CAAC,CACpB,CACA,cAAe,CAEX,OADA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EACf,IAAI,CAAC,OAAO,AACvB,CACA,aAAa,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAE3C,CACA,YAAY,CAAO,CAAE,CAAQ,CAAE,CAAQ,CAAE,KAiBC,EAAO,EAhB7C,IAAM,EAAa,CAgBmB,EAhBW,EAAQ,cAAc,CAgB1B,EAhB4B,EAAQ,GAAG,CAiBjF,EAAM,IAAI,CAAG,EAAoB,GAhBhC,IAAI,CAAC,OAAO,CAAC,IAAI,AAAD,EAGd,EAAuB,GADZ,IAAI,EAAY,CAAE,WADlB,EAAS,MAAM,CAAC,EACuB,GAExD,KAAI,CAAC,OAAO,CAAC,EAAW,CAAG,CAC/B,CACJ,C,8DCWA,OAhBA,SAAgB,CAAS,EACvB,GAAI,AAAoB,YAApB,OAAO,EACT,MAAM,AAAIkB,UAxBQ,uBA0BpB,OAAO,WACL,IAAI,EAAOC,UACX,OAAQ,EAAK,MAAM,EACjB,KAAK,EAAG,MAAO,CAAC,EAAU,IAAI,CAAC,IAAI,CACnC,MAAK,EAAG,MAAO,CAAC,EAAU,IAAI,CAAC,IAAI,CAAE,CAAI,CAAC,EAAE,CAC5C,MAAK,EAAG,MAAO,CAAC,EAAU,IAAI,CAAC,IAAI,CAAE,CAAI,CAAC,EAAE,CAAE,CAAI,CAAC,EAAE,CACrD,MAAK,EAAG,MAAO,CAAC,EAAU,IAAI,CAAC,IAAI,CAAE,CAAI,CAAC,EAAE,CAAE,CAAI,CAAC,EAAE,CAAE,CAAI,CAAC,EAAE,CAChE,CACA,MAAO,CAAC,EAAU,KAAK,CAAC,IAAI,CAAE,EAChC,CACF,ECQA,GALA,SAAgB,CAAU,CAAE,CAAS,EAEnC,MAAO,AADI,UAAQ,GAAc,IAAW,CAAG,IAAU,AAAV,EACnC,EAAY,GAAO,GAAAJ,EAAA,GAAa,EAAW,IACzD,E,gBCvCI,GAAYC,KAAK,GAAG,CAqCxB,OAZA,SAAiB,CAAK,CAAE,CAAK,CAAE,CAAS,EACtC,IAAI,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,CAC7C,GAAI,CAAC,EACH,OAAO,GAET,IAAIX,EAAQ,AAAa,MAAb,EAAoB,EAAI,QAAU,GAI9C,OAHIA,EAAQ,GACVA,CAAAA,EAAQ,GAAU,EAASA,EAAO,EAAC,EAE9B,SAAY,EAAO,EAAOA,EACnC,E,4EC2BA,OA7CA,SAAwB,CAAK,CAAE,CAAM,CAAE,CAAQ,CAAE,CAAU,EACzD,IAAIA,EAAQ,GACR,EAAW,IAAa,CACxB,EAAW,GACX,EAAS,EAAM,MAAM,CACrB,EAAS,EAAE,CACX,EAAe,EAAO,MAAM,CAEhC,GAAI,CAAC,EACH,OAAO,CAEL,IACF,GAAS,QAAS,EAAQ,QAAU,GAAS,EAE3C,GACF,EAAW,IAAiB,CAC5B,EAAW,IAEJ,EAAO,MAAM,EA/BD,MAgCnB,EAAW,IAAQ,CACnB,EAAW,GACX,EAAS,IAAI,IAAQ,CAAC,IAExB,EACA,KAAO,EAAEA,EAAQ,GAAQ,CACvB,IAAI,EAAQ,CAAK,CAACA,EAAM,CACpB,EAAW,AAAY,MAAZ,EAAmB,EAAQ,EAAS,GAGnD,GADA,EAAQ,AAAC,GAAc,AAAU,IAAV,EAAe,EAAQ,EAC1C,GAAY,GAAa,EAAU,CAErC,IADA,IAAI,EAAc,EACX,KACL,GAAI,CAAM,CAAC,EAAY,GAAK,EAC1B,SAAS,EAGb,EAAO,IAAI,CAAC,EACd,MACS,AAAC,EAAS,EAAQ,EAAU,IACnC,EAAO,IAAI,CAAC,EAEhB,CACA,OAAO,CACT,E,wCCtCI,GAAa,SAAS,SAAS,CAAK,CAAE,CAAM,EAC9C,MAAO,SAAkB,GACrB,GAAe,EAAO,SAAY,EAAQ,EAAG,IAAiB,CAAE,KAChE,EAAE,AACR,GCAA,OAfA,SAAiB,CAAK,EAMpB,IALA,IAAI,EAAQ,GACR,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,CACzC,EAAW,EACX,EAAS,EAAE,CAER,EAAE,EAAQ,GAAQ,CACvB,IAAI,EAAQ,CAAK,CAAC,EAAM,AACpB,IACF,EAAM,CAAC,IAAW,CAAG,CAAI,CAE7B,CACA,OAAO,CACT,ECNA,GAJA,SAAc,CAAK,EACjB,OAAO,AAAC,GAAS,EAAM,MAAM,CAAI,CAAK,CAAC,EAAE,CAAG,MAC9C,E,gBCpBO,SAAS,GAAY,CAAG,EAEvBe,SAAWA,QAAQ,KAAK,EACxBA,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,EAAI,CAAC,CAErC,CCJA,IAAI,GAAiB,CAAC,EAChB,GAAe,IAAI,IAAY,CAC9B,SAAS,GAAa,CAAM,EAC/B,IAAM,EAAY,EAAO,QAAQ,GACjC,GAAI,GAAe,cAAc,CAAC,GAC9B,OAAO,EAAc,CAAC,EAAU,AAE/B,EACD,IAAM,EAAY,GAAa,OAAO,CAAC,GAEvC,OADA,EAAc,CAAC,EAAU,CAAG,EACrB,CACX,CACJ,CCRA,IAAM,GAAyB,gEAClB,GAA8B,oDAoI3C,SAAS,GAAwB,CAAI,CAAE,CAAM,CAAE,CAAU,EACrD,IAAM,EAAmB,GAAyB,EAClD,EAAM,CAAC,EAAiB,CAAG,EACvB,AAAe,KAAf,GACA,AAGR,SAA0B,CAAI,CAAE,CAAM,EAClC,IAAM,EAAOjB,OAAO,YAAY,CAAC,GAC3B,EAAY,EAAK,WAAW,GAElC,GAAI,IAAc,EAAM,CACpB,IAAM,EAAmB,GAAyB,EAAU,UAAU,CAAC,GACvE,EAAM,CAAC,EAAiB,CAAG,CAC/B,KACK,CACD,IAAM,EAAY,EAAK,WAAW,GAClC,GAAI,IAAc,EAAM,CACpB,IAAM,EAAmB,GAAyB,EAAU,UAAU,CAAC,GACvE,EAAM,CAAC,EAAiB,CAAG,CAC/B,CACJ,CACJ,EAlByB,EAAM,EAE/B,CAiBA,SAAS,GAAS,CAAO,CAAED,CAAe,EACtC,MAAO,SAAK,EAAQ,KAAK,CAAE,AAAC,GACxB,AAAI,AAAuB,UAAvB,OAAO,EACA,GAASA,EAAiB,GAKzB,AAA8F,SAA9F,SAAKA,EAAiB,AAACA,GAAe,AADhC,EACsC,IAAI,EAAIA,GAAcA,GAAc,AAD1E,EACgF,EAAE,EAG5G,CAaA,MAAM,WAAuB,IAAiB,CAC1C,YAAY,CAAe,CAAE,CACzB,KAAK,GACL,IAAI,CAAC,eAAe,CAAG,EACvB,IAAI,CAAC,KAAK,CAAG,EACjB,CACA,cAAc,CAAI,CAAE,CAEhB,GAAI,AAAe,KAAf,IAAI,CAAC,KAAK,EAKd,OAAQ,EAAK,IAAI,EACb,IAAK,YACD,IAAI,CAAC,cAAc,CAAC,GACpB,MACJ,KAAK,oBACD,IAAI,CAAC,sBAAsB,CAAC,GAC5B,MACR,CACA,KAAK,CAAC,cAAc,GACxB,CACA,eAAe,CAAI,CAAE,CACb,GAAS,IAAI,CAAC,eAAe,CAAE,EAAK,KAAK,GACzC,KAAI,CAAC,KAAK,CAAG,EAAG,CAExB,CACA,SAAS,CAAI,CAAE,CACP,EAAK,UAAU,CACX,AAAyC,SAAzC,GAAS,EAAM,IAAI,CAAC,eAAe,GACnC,KAAI,CAAC,KAAK,CAAG,EAAG,EAIhB,AAAyC,SAAzC,GAAS,EAAM,IAAI,CAAC,eAAe,GACnC,KAAI,CAAC,KAAK,CAAG,EAAG,CAG5B,CACJ,CACO,SAAS,GAAiB,CAAS,CAAE,CAAO,EAC/C,IAAI,cAAmBU,MAAK,EAOxB,OAAQ,AAED,SAFC,SAAK,EAAS,AAAC,GACZ,GAAS,EAAW,EAAK,UAAU,CAAC,IARpB,EAC3B,IAAM,EAAM,GAAa,GACnB,EAAiB,IAAI,GAAe,GAE1C,OADA,EAAe,KAAK,CAAC,GACd,EAAe,KAAK,AAC/B,CAMJ,CCxOA,IAAM,GAAU,UACH,GAAe,cACf,GAAQ,QACV,GAAiB,AAAqC,WAArC,OAAO,AAAIA,OAAO,QAAQ,MAAM,CA6TtD,GAAe,WAuDf,GAAiB,iBAsMhB,SAAS,GAAgB,CAAO,EACnC,IAAM,EAAQ,EAAQ,UAAU,CAAG,IAAM,GAGzC,OAAO,AAAIA,OAAO,CAAC,IAAI,EAAE,EAAQ,MAAM,CAAC,CAAC,CAAC,CAAE,EAChD,CACO,SAAS,GAAc,CAAO,EACjC,IAAM,EAAQ,EAAQ,UAAU,CAAG,KAAO,IAG1C,OAAO,AAAIA,OAAO,CAAC,EAAE,EAAQ,MAAM,CAAC,CAAC,CAAE,EAC3C,CAuHO,SAAS,GAAgB,CAAS,EACrC,IAAM,EAAU,EAAU,OAAO,CAEjC,GAAI,A1B9qBO,E0B8qBE,GACT,MAAO,GAEN,GAAI,SAAW,GAEhB,MAAO,GAEN,GAAI,QAAI,EAAS,QAElB,MAAO,GAEN,GAAI,QAAS,GACd,MAAO,EAGP,OAAMZ,MAAM,uBAEpB,CACO,SAAS,GAAe,CAAO,QAClC,EAAI,QAAS,IAAY,AAAmB,IAAnB,EAAQ,MAAM,EAC5B,EAAQ,UAAU,CAAC,EAKlC,CAIO,IAAM,GAAgC,CAEzC,KAAM,SAAU,CAAI,EAChB,IAAM,EAAM,EAAK,MAAM,CACvB,IAAK,IAAI,EAAI,IAAI,CAAC,SAAS,CAAE,EAAI,EAAK,IAAK,CACvC,IAAM,EAAI,EAAK,UAAU,CAAC,GAC1B,GAAI,AAAM,KAAN,EAEA,OADA,IAAI,CAAC,SAAS,CAAG,EAAI,EACd,GAEN,GAAI,AAAM,KAAN,EAOL,OANI,AAA2B,KAA3B,EAAK,UAAU,CAAC,EAAI,GACpB,IAAI,CAAC,SAAS,CAAG,EAAI,EAGrB,IAAI,CAAC,SAAS,CAAG,EAAI,EAElB,EAEf,CACA,MAAO,EACX,EACA,UAAW,CACf,EACA,SAAS,GAAsB,CAAO,CAAE,CAAuB,EAC3D,GAAI,QAAI,EAAS,eAGb,MAAO,GAIP,GAAI,A1B3uBG,E0B2uBM,EAAQ,OAAO,EAAG,CAC3B,GAAI,CAEA,GAAiB,EAAyB,EAAQ,OAAO,CAC7D,CACA,MAAOC,EAAG,CAEN,MAAO,CACH,MAAO,qBAA4C,CACnD,OAAQA,EAAE,OAAO,AACrB,CACJ,CACA,MAAO,EACX,CACK,GAAI,QAAS,EAAQ,OAAO,EAE7B,MAAO,GAEN,GAAI,GAAgB,GAErB,MAAO,CAAE,MAAO,mBAA0C,AAAC,CAG3D,OAAMD,MAAM,uBAGxB,CAkBA,SAAS,GAAa,CAAY,EAS9B,MARkB,GAAAiB,EAAA,GAAI,EAAc,AAAC,GACjC,AAAI,QAAS,GACF,EAAY,UAAU,CAAC,GAGvB,EAInB,CACA,SAAS,GAAiB,CAAG,CAAE,CAAG,CAAE,CAAK,EACjC,AAAa,SAAb,CAAG,CAAC,EAAI,CACR,CAAG,CAAC,EAAI,CAAG,CAAC,EAAM,CAGlB,CAAG,CAAC,EAAI,CAAC,IAAI,CAAC,EAEtB,CAiBA,IAAI,GAA4B,EAAE,CAC3B,SAAS,GAAyB,CAAQ,EAC7C,OAAO,EAlBuB,IAmBxB,EACA,EAAyB,CAAC,EAAS,AAC7C,C,uCCz1BO,SAAS,GAAM,CAAI,EACtB,IAAM,EAAQ,IAAII,OAAO,OAAO,GAC1B,EAAM,IAGZ,MAAO,CAAE,KADK,AADF,IAAIA,OAAO,OAAO,GACV,EACE,MAAO,CAAI,CACrC,CCLO,SAAS,GAAuB,CAAW,CAAEnB,CAAc,EAC9D,IAAM,EAAe,EAAY,YAAY,QAC7C,AAAI,IAAiBA,EAAe,YAAY,EAIpCA,AAA4B,KAA5BA,EAAe,QAAQ,EAC3BA,AAAoD,KAApDA,EAAe,kBAAkB,CAAC,EAAa,AAE3D,CAGO,SAAS,GAAmC,CAAK,CAAEA,CAAO,EAC7D,OAAO,EAAM,YAAY,GAAKA,EAAQ,YAAY,AACtD,CACO,IAAI,GAAoB,EAClB,GAAkB,CAAC,EACzB,SAAS,GAAkB,CAAU,MA6BJA,EAkCA,EATG,EApDvC,IAAM,EAAuB,AAU1B,SAA0B,CAAU,EACvC,IAAI,EAAS,QAAM,GACf,EAAa,EACb,EAAY,GAChB,KAAO,GAAW,CAEd,IAAM,EAAgB,ARJf,GQGP,EAAa,GAAQ,SAAQ,GAAAe,EAAA,GAAI,EAAY,AAAC,GAAgB,EAAY,UAAU,IACvC,GAC7C,EAAS,EAAO,MAAM,CAAC,GACnB,QAAQ,GACR,EAAY,GAGZ,EAAa,CAErB,CACA,OAAO,CACX,EA1BkD,GA2BVf,EAzBZ,EA0BxB,QAAQA,EAAY,AAAC,QAwDuBA,EAGG,EA1DtC,GAAoB,KACrB,EAAe,CAAC,GAAkB,CAAG,EACrC,EAAY,YAAY,CAAG,MAG3B,GAAsB,IACtB,CAAC,SAAQ,EAAY,UAAU,GAI/B,GAAY,UAAU,CAAG,CAAC,EAAY,UAAU,CAAC,AAAD,EAEhD,AAAC,GAAsB,IACvB,GAAY,UAAU,CAAG,EAAE,AAAD,EA0CUA,EAxCH,EAyClC,QAAIA,EAAS,oBAxCZ,GAAY,eAAe,CAAG,EAAE,AAAD,EA0CQ,EAxCH,EAyCrC,QAAI,EAAS,uBAxCZ,GAAY,kBAAkB,CAAG,CAAC,EAE1C,GAWoC,EAzDZ,EA0DxB,QAAQ,EAAY,AAAC,KACjB,AAGD,SAAS,EAA8B,CAAI,CAAE,CAAQ,EACxD,QAAQ,EAAM,AAAC,IACX,EAAS,kBAAkB,CAAC,EAAS,YAAY,CAAC,CAAG,EACzD,GACA,QAAQ,EAAS,UAAU,CAAE,AAACoB,IAC1B,IAAM,EAAU,EAAK,MAAM,CAAC,EAExB,CAAC,GAAS,EAASA,IACnB,EAA8B,EAASA,EAE/C,EACJ,EAdsC,EAAE,CAAE,EACtC,GAZuC,EA/CZ,EAgD3B,QAAQ,EAAY,AAAC,IAEjB,EAAY,eAAe,CAAG,EAAE,CAChC,QAAQ,EAAY,kBAAkB,CAAE,CAAC,EAAK,KAC1C,EAAY,eAAe,CAAC,IAAI,CAAC,EAAe,CAAC,EAAI,CAAC,YAAY,CACtE,EACJ,GArDA,QAAQ,EAAsB,AAAC,IAC3B,EAAQ,QAAQ,CAAG,EAAQ,eAAe,CAAC,MAAM,CAAG,CACxD,EACJ,CAqEO,SAAS,GAAoB,CAAO,EACvC,MAAO,QAAI,EAAS,eACxB,CACO,SAAS,GAAsB,CAAO,EACzC,MAAO,QAAI,EAAS,aACxB,CAOO,SAAS,GAAY,CAAO,EAC/B,MAAO,QAAI,EAAS,eACxB,CChHO,IAAM,GAA4B,CACrC,iCAAiC,GACtB,CAAC,oDAAoD,EAAE,EAAM,KAAK,CAAC,0BAA0B,CAAC,CAEzG,kCAAiC,EAAU,EAAa,EAAQ,EAAM,IAC1D,CAAC,wBAAwB,EAAE,EAAS,MAAM,CAAC,GAAa,cAAc,EAAE,EAAkB,UAAS,EAAE,EAAO,YAAY,CAAlC,AAEtG,CvCCI,EADO,EAmBR,GAA6B,GAA2B,CAAC,GAlBhC,CAAC,EAAyB,eAAkB,CAAG,EAAE,CAAG,kBAC5E,CAAwB,CAAC,EAAyB,eAAkB,CAAG,EAAE,CAAG,kBAC5E,CAAwB,CAAC,EAAyB,gBAAmB,CAAG,EAAE,CAAG,mBAC7E,CAAwB,CAAC,EAAyB,uBAA0B,CAAG,EAAE,CAAG,0BACpF,CAAwB,CAAC,EAAyB,wBAA2B,CAAG,EAAE,CAAG,2BACrF,CAAwB,CAAC,EAAyB,wBAA2B,CAAG,EAAE,CAAG,2BACrF,CAAwB,CAAC,EAAyB,wBAA2B,CAAG,EAAE,CAAG,2BACrF,CAAwB,CAAC,EAAyB,qCAAwC,CAAG,EAAE,CAAG,wCAClG,CAAwB,CAAC,EAAyB,uCAA0C,CAAG,EAAE,CAAG,0CACpG,CAAwB,CAAC,EAAyB,kDAAqD,CAAG,EAAE,CAAG,qDAC/G,CAAwB,CAAC,EAAyB,yCAA4C,CAAG,GAAG,CAAG,4CACvG,CAAwB,CAAC,EAAyB,gBAAmB,CAAG,GAAG,CAAG,mBAC9E,CAAwB,CAAC,EAAyB,mBAAsB,CAAG,GAAG,CAAG,sBACjF,CAAwB,CAAC,EAAyB,oBAAuB,CAAG,GAAG,CAAG,uBAClF,CAAwB,CAAC,EAAyB,mBAAsB,CAAG,GAAG,CAAG,sBACjF,CAAwB,CAAC,EAAyB,mBAAsB,CAAG,GAAG,CAAG,sBACjF,CAAwB,CAAC,EAAyB,iBAAoB,CAAG,GAAG,CAAG,oBAC/E,CAAwB,CAAC,EAAyB,+CAAkD,CAAG,GAAG,CAAG,kDAEjH,IAAM,GAAuB,CACzB,8BAA+B,GAC/B,iBAAkB,OAClB,uBAAwB,YACxB,yBAA0B,CAAC,KAAM,KAAK,CACtC,oBAAqB,GACrB,SAAU,GACV,qBAAsB,GACtB,cAAe,GACf,gBAAiB,GACjB,gBAAiB,EACrB,EACAxB,OAAO,MAAM,CAAC,GACP,OAAM,GACT,YAAY,CAAe,CAAE,EAAS,EAAoB,CAAE,CAoCxD,GAnCA,IAAI,CAAC,eAAe,CAAG,EACvB,IAAI,CAAC,qBAAqB,CAAG,EAAE,CAC/B,IAAI,CAAC,sBAAsB,CAAG,EAAE,CAChC,IAAI,CAAC,kBAAkB,CAAG,CAAC,EAC3B,IAAI,CAAC,4BAA4B,CAAG,CAAC,EACrC,IAAI,CAAC,KAAK,CAAG,EAAE,CACf,IAAI,CAAC,WAAW,CAAG,CAAC,EACpB,IAAI,CAAC,eAAe,CAAG,GACvB,IAAI,CAAC,aAAa,CAAG,GACrB,IAAI,CAAC,SAAS,CAAG,GACjB,IAAI,CAAC,kBAAkB,CAAG,CAAC,EAG3B,IAAI,CAAC,UAAU,CAAG,CAAC,EAAW,KAG1B,GAAI,AAAuB,KAAvB,IAAI,CAAC,aAAa,CAgBlB,OAAO,GAhBsB,EAC7B,IAAI,CAAC,eAAe,GACpB,IAAM,EAAS,AAAIC,MAAM,IAAI,CAAC,eAAe,CAAG,GAAG,IAAI,CAAC,IACpD,KAAI,CAAC,eAAe,CAAG,IAAI,CAAC,iBAAiB,CAGjD,GAAM,CAAE,MAAI,CAAE,OAAK,CAAE,CAAG,GAAM,GAExB,EAAc,EAAO,GAAKqB,QAAQ,IAAI,CAAGA,QAAQ,GAAG,CAK1D,OAJI,IAAI,CAAC,eAAe,CAAG,IAAI,CAAC,iBAAiB,EAC7C,EAAY,CAAC,EAAE,EAAO,KAAK,EAAE,EAAU,QAAQ,EAAE,EAAK,EAAE,CAAC,EAE7D,IAAI,CAAC,eAAe,GACb,CACX,CAIJ,EACI,AAAkB,WAAlB,OAAO,EACP,MAAMpB,MAAM,6HAIhB,KAAI,CAAC,MAAM,CAAG,AQzBP,ERyBc,CAAC,EAAG,GAAsB,GAC/C,IAAM,EAAe,IAAI,CAAC,MAAM,CAAC,aAAa,AAC1C,AAAiB,MAAjB,GACA,IAAI,CAAC,iBAAiB,CAAG,IACzB,IAAI,CAAC,aAAa,CAAG,IAEQ,UAAxB,OAAO,IACZ,IAAI,CAAC,iBAAiB,CAAG,EACzB,IAAI,CAAC,aAAa,CAAG,IAEzB,IAAI,CAAC,eAAe,CAAG,GACvB,IAAI,CAAC,UAAU,CAAC,oBAAqB,KAEjC,IADI,EACA,EAAoB,GACxB,IAAI,CAAC,UAAU,CAAC,wBAAyB,KACrC,GAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAClC,GAAqB,sBAAsB,CAE3C,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAG,QAGrC,GAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,GACpC,GAAqB,wBAAwB,CAC7C,MAAMA,MAAM,mLAIpB,GAAI,EAAO,QAAQ,EAAI,EAAO,mBAAmB,CAC7C,MAAMA,MAAM,qEAEhB,KAAI,CAAC,eAAe,CAAG,kBAAkB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAC1E,IAAI,CAAC,aAAa,CAAG,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAE1D,SAAQ,GACR,EAAmB,CACf,MAAO,CAAE,YAAa,QAAM,EAAiB,EAC7C,YAAa,EACjB,GAIA,EAAoB,GACpB,EAAmB,QAAM,GAEjC,GACoC,KAAhC,IAAI,CAAC,MAAM,CAAC,eAAe,GAC3B,IAAI,CAAC,UAAU,CAAC,uBAAwB,KACpC,IAAI,CAAC,qBAAqB,CAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,AoC8c5E,SAA8B,CAAe,CAAEE,CAAU,CAAE,CAAwB,EACtF,IAAM,EAAS,EAAE,CAsDjB,MApDI,AAAC,QAAI,EAAiB,KACtB,EAAO,IAAI,CAAC,CACR,QAAS,sDACL,GACA,iCACJ,KAAM,uCAA8D,AACxE,GAEA,AAAC,QAAI,EAAiB,KACtB,EAAO,IAAI,CAAC,CACR,QAAS,sDACL,GACA,iCACJ,KAAM,yCAAgE,AAC1E,GAEA,QAAI,EAAiB,KACrB,QAAI,EAAiB,KACrB,CAAC,QAAI,EAAgB,KAAK,CAAE,EAAgB,WAAW,GACvD,EAAO,IAAI,CAAC,CACR,QAAS,CAAC,+CAA+C,EAAE,GAAa,GAAG,EAAE,EAAgB,WAAW,CACnG;AAAuB,AAAD,CADgF,CAE3G,KAAM,oDAA2E,AACrF,GAEA,QAAI,EAAiB,KACrB,QAAQ,EAAgB,KAAK,CAAE,CAAC,EAAe,KAC3C,QAAQ,EAAe,CAAC,EAAa,KACjC,GAAI,SAAY,GACZ,EAAO,IAAI,CAAC,CACR,QACI,CAAC,mEAAC,EAAE,EAAa,aAAa,EAAE,EAAQ;AAAG,CAAC,CAChD,KAAM,2CAAkE,AAC5E,QAEC,GAAI,QAAI,EAAa,cAAe,CACrC,IAAM,EAAY,SAAQ,EAAY,UAAU,EAC1C,EAAY,UAAU,CACtB,CAAC,EAAY,UAAU,CAAC,CAC9B,QAAQ,EAAW,AAAC,IACZ,AAAC,SAAY,IACZ,GAAS,EAAe,IACzB,EAAO,IAAI,CAAC,CACR,QAAS,CAAC,2DAA2D,EAAE,EAAc,IAAI,CAAC,YAAY,EAAE,EAAY,IAAI,CAAC,mBAAmB,EAAE,EAAa;AAAG,CAAC,CAC/J,KAAM,iDAAwE,AAClF,EAER,EACJ,CACJ,EACJ,GAEG,CACX,EpCtgBwG,EAAkB,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,CAAC,wBAAwB,EACpK,GACA,IAAI,CAAC,UAAU,CAAC,8BAA+B,KAC3C,IAAI,CAAC,sBAAsB,CAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,AoCogB9E,SAAqC,CAAe,CAAEA,CAAU,CAAE,CAAwB,EAC7F,IAAM,EAAW,EAAE,CACf,EAAkB,GAEhB,EAAqB,GADL,GAAQ,SAAQ,QAAO,EAAgB,KAAK,IACjB,AAAC,GAAa,CAAQ,CAAC,GAAQ,GAAK,GAAM,EAAE,EACvF,EAAsB,GAAa,GAsCzC,OArCIA,GACA,QAAQ,EAAoB,AAAC,IACzB,IAAM,EAAY,GAAsB,EAAS,GACjD,GAAI,AAAc,KAAd,EAAqB,CAErB,IAAM,EAAoB,CACtB,QAFY,AA8IzB,SAAoC,CAAO,CAAE,CAAO,EAEvD,GAAI,EAAQ,KAAK,GAAK,qBAA4C,CAC9D,MACI,CAAC;AACR,wBADiC,EAAE,EAAQ,IAAI,CACvC;AAAc,cAAC,EAAE,EAAQ,MAAM,CAAC;AAAG,mGADoB,CAI3D,GAAI,EAAQ,KAAK,GAAK,mBAA0C,CACjE,MACI,CAAC;AACG,wBADsB,EAAE,EAAQ,IAAI,CAAC;AAAc,iGAAC,AAI5D,OAAMF,MAAM,uBAEpB,EA9J2D,EAAS,GAGhD,KAAM,EAAU,KAAK,CACrB,UAAW,CACf,EACA,EAAS,IAAI,CAAC,EAClB,KAGQ,QAAI,EAAS,eACT,AAAwB,KAAxB,EAAQ,WAAW,EACnB,GAAkB,EAAG,EAIrB,GAAiB,EAAqB,EAAQ,OAAO,GACrD,GAAkB,EAAG,CAIrC,GAEAE,GAAc,CAAC,GACf,EAAS,IAAI,CAAC,CACV,QAAS,mRAKT,KAAM,sBAA6C,AACvD,GAEG,CACX,EpChjBiH,EAAkB,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,CAAC,wBAAwB,EAC7K,IAGJ,EAAiB,KAAK,CAAG,EAAiB,KAAK,CACzC,EAAiB,KAAK,CACtB,CAAC,EAGP,QAAQ,EAAiB,KAAK,CAAE,CAAC,EAAe,KAC5C,EAAiB,KAAK,CAAC,EAAa,CAAG,GAAO,EAAe,AAAC,GAAgB,SAAY,GAC9F,GACA,IAAM,EAAe,QAAK,EAAiB,KAAK,EAoChD,GAnCA,QAAQ,EAAiB,KAAK,CAAE,CAAC,EAAY,KACzC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,EAAY,YAAY,CAAC,CAAE,KAUjD,GATA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GACZ,AAAgC,KAAhC,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,IAAI,CAAC,UAAU,CAAC,mBAAoB,KAChC,IAAI,CAAC,qBAAqB,CAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,AoCoHpF,SAA0B,CAAU,CAAE,CAAe,EACxD,IAAI,EAAS,EAAE,CACT,EAAgB,AAqBnB,SAA6B,CAAU,EAC1C,IAAMA,EAA+B,SAAO,EAAY,AAAC,GAC9C,CAAC,QAAI,EAAU,KAY1B,MAAO,CAAE,OAVM,GAAAe,EAAA,GAAIf,EAA8B,AAAC,GACvC,EACH,QAAS,iBACL,EAAS,IAAI,CACb,uCACJ,KAAM,iBAAwC,CAC9C,WAAY,CAAC,EAAS,AAC1B,IAGa,MADH,AN9QH,GM8Qc,EAAYA,EACd,CAC3B,EApC8C,GAC1C,EAAS,EAAO,MAAM,CAAC,EAAc,MAAM,EAC3C,IAAMG,EAAgB,AAmCnB,SAA6B,CAAU,EAC1C,IAAMH,EAA+B,SAAO,EAAY,AAAC,IACrD,IAAM,EAAU,CAAQ,CAAC,GAAQ,CACjC,MAAQ,CAAC,A1B1RF,E0B0RW,IACd,CAAC,SAAW,IACZ,CAAC,QAAI,EAAS,SACd,CAAC,QAAS,EAClB,GAYA,MAAO,CAAE,OAXM,GAAAe,EAAA,GAAIf,EAA8B,AAAC,GACvC,EACH,QAAS,iBACL,EAAS,IAAI,CADR,0JAIT,KAAM,iBAAwC,CAC9C,WAAY,CAAC,EAAS,AAC1B,IAGa,MADH,ANnSH,GMmSc,EAAYA,EACd,CAC3B,EAvD8C,EAAc,KAAK,EACvD,EAAkBG,EAAc,KAAK,CAM3C,MADS,AADT,GAAS,AADT,GAAS,AADT,GAAS,AADT,GAAS,EAAO,MAAM,CAACA,EAAc,MAAM,GAC3B,MAAM,CAAC,AAM3B,SAA+B,CAAU,EACrC,IAAI,EAAS,EAAE,CACT,EAAqB,SAAO,EAAY,AAAC,GAAgB,A1B/PpD,E0B+P6D,CAAW,CAAC,GAAQ,GAM5F,MADS,AADT,GAAS,AADT,GAAS,AADT,GAAS,AADT,GAAS,EAAO,MAAM,CAAC,AA6CpB,SAA8B,CAAU,EAC3C,MAAM,UAAwB,IAAiB,CAC3C,aAAc,CACV,KAAK,IAAIc,WACT,IAAI,CAAC,KAAK,CAAG,EACjB,CACA,eAAe,CAAI,CAAE,CACjB,IAAI,CAAC,KAAK,CAAG,EACjB,CACJ,CACA,IAAM,EAAe,SAAO,EAAY,AAAC,IACrC,IAAM,EAAU,EAAS,OAAO,CAChC,GAAI,CACA,IAAM,EAAY,GAAa,GACzB,EAAmB,IAAI,EAE7B,OADA,EAAiB,KAAK,CAAC,GAChB,EAAiB,KAAK,AACjC,CACA,MAAOlB,EAAG,CAGN,OAAO,GAAa,IAAI,CAAC,EAAQ,MAAM,CAC3C,CACJ,GAaA,MAZe,GAAAgB,EAAA,GAAI,EAAc,AAAC,GACvB,EACH,QAAS,mDAEL,EAAS,IAAI,CAFR,6IAMT,KAAM,kBAAyC,CAC/C,WAAY,CAAC,EAAS,AAC1B,GAGR,EAlFgD,GAAmB,EAC/C,MAAM,CAAC,AAmGpB,SAAgC,CAAU,EAC7C,MAAM,UAA0B,IAAiB,CAC7C,aAAc,CACV,KAAK,IAAIE,WACT,IAAI,CAAC,KAAK,CAAG,EACjB,CACA,iBAAiB,CAAI,CAAE,CACnB,IAAI,CAAC,KAAK,CAAG,EACjB,CACJ,CACA,IAAM,EAAe,SAAO,EAAY,AAAC,IACrC,IAAM,EAAU,EAAS,OAAO,CAChC,GAAI,CACA,IAAM,EAAY,GAAa,GACzB,EAAqB,IAAI,EAE/B,OADA,EAAmB,KAAK,CAAC,GAClB,EAAmB,KAAK,AACnC,CACA,MAAOlB,EAAG,CAGN,OAAO,GAAe,IAAI,CAAC,EAAQ,MAAM,CAC7C,CACJ,GAaA,MAZe,GAAAgB,EAAA,GAAI,EAAc,AAAC,GACvB,EACH,QAAS,mDAEL,EAAS,IAAI,CAFR,uJAMT,KAAM,kBAAyC,CAC/C,WAAY,CAAC,EAAS,AAC1B,GAGR,EAxIkD,GAAmB,EACjD,MAAM,CAAC,AAwIpB,SAA8B,CAAU,EAC3C,IAAM,EAAe,SAAO,EAAY,AAAC,IACrC,IAAM,EAAU,CAAQ,CAAC,GAAQ,CACjC,OAAO,aAAmBL,QAAW,GAAQ,SAAS,EAAI,EAAQ,MAAM,AAAD,CAC3E,GAUA,MATe,GAAAK,EAAA,GAAI,EAAc,AAAC,GACvB,EACH,QAAS,iBACL,EAAS,IAAI,CACb,oEACJ,KAAM,yBAAgD,CACtD,WAAY,CAAC,EAAS,AAC1B,GAGR,EAvJgD,GAAmB,EAC/C,MAAM,CAAC,AAwJpB,SAA+B,CAAU,EAC5C,IAAM,EAAQ,EAAE,CACZ,EAAoB,GAAAA,EAAA,GAAI,EAAY,AAAC,GAC9B,SAAO,EAAY,CAAC,EAAQ,KAC3B,EAAU,OAAO,CAAC,MAAM,GAAK,EAAU,OAAO,CAAC,MAAM,EACpD,GAAS,EAAO,IACjB,EAAU,OAAO,GAAK,GAAM,EAAE,GAG9B,EAAM,IAAI,CAAC,GACX,EAAO,IAAI,CAAC,IAGT,GACR,EAAE,GAET,EAAoB,GAAQ,GAC5B,IAAM,EAAoB,SAAO,EAAmB,AAAC,GAC1C,EAAiB,MAAM,CAAG,GAcrC,MAZe,GAAAA,EAAA,GAAI,EAAmB,AAAC,IACnC,IAAMf,EAAiB,GAAAe,EAAA,GAAI,EAAgB,AAAC,GACjC,EAAS,IAAI,EAElB,EAAgB,GAAM,GAAgB,OAAO,CACnD,MAAO,CACH,QAAS,CAAC,0BAA0B,EAAE,EACjC,qDAAmD,EAAEf,EAAe,IAAI,CAAC,MAAM,GAAG,CADhC,CAEvD,KAAM,0BAAiD,CACvD,WAAY,CAChB,CACJ,EAEJ,EAzLiD,GAAmB,EAChD,MAAM,CAAC,AA+EpB,SAA+B,CAAU,EAC5C,IAAM,EAAqB,SAAO,EAAY,AAAC,GAEpC,AADS,EAAS,OAAO,CACjB,IAAI,CAAC,KAWxB,MATe,GAAAe,EAAA,GAAI,EAAoB,AAAC,GAC7B,EACH,QAAS,iBACL,EAAS,IAAI,CACb,qDACJ,KAAM,qBAA4C,CAClD,WAAY,CAAC,EAAS,AAC1B,GAGR,EA9FiD,GAEjD,EAfiD,GAAgB,EAC7C,MAAM,CAAC,AAqMpB,SAA8B,CAAU,EAC3C,IAAM,EAAe,SAAO,EAAY,AAAC,IACrC,GAAI,CAAC,QAAI,EAAO,SACZ,MAAO,GAEX,IAAM,EAAQ,EAAM,KAAK,CACzB,OAAO,IAAU,GAAM,OAAO,EAAI,IAAU,GAAM,EAAE,EAAI,CAAC,QAAS,EACtE,GAUA,MATe,GAAAA,EAAA,GAAI,EAAc,AAAC,GACvB,EACH,QAAS,iBACL,EAAS,IAAI,CACb,gEACJ,KAAM,0BAAiD,CACvD,WAAY,CAAC,EAAS,AAC1B,GAGR,EAvNgD,GAAgB,EAC5C,MAAM,CAAC,AAuNpB,SAAiC,CAAU,CAAE,CAAU,EAC1D,IAAM,EAAe,SAAO,EAAY,AAAC,GAC7B,AAAoB,SAApB,EAAM,SAAS,EAAkB,CAAC,GAAS,EAAY,EAAM,SAAS,GAWlF,MATe,GAAAA,EAAA,GAAI,EAAc,AAAC,GAGvB,EACH,QAHQ,CAAC,cAAc,EAAE,EAAQ,IAAI,CAAC,2DAA2D,EAAE,EAAQ,SAAS,CAAC,sBAAE,CAAC,CAIxH,KAAM,0BAAiD,CACvD,WAAY,CAAC,EAAQ,AACzB,GAGR,EArOmD,EAAiB,GAAgB,EAChE,MAAM,CAAC,AAqOpB,SAAiC,CAAU,EAC9C,IAAM,EAAS,EAAE,CACX,EAAc,SAAO,EAAY,CAAC,EAAQf,EAAS,SAqDzC,EApDZ,IAAM,EAAUA,EAAQ,OAAO,QAC3B,IAAY,GAAM,EAAE,GAKpB,QAAS,GACT,EAAO,IAAI,CAAC,CAAE,IAAK,EAAS,MAAK,UAAWA,CAAQ,GAE/C,A1B3eF,E0B2eW,KA2CN,EA3C6B,EA4DrC,AAAkE,SAAlE,SAfU,CACd,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACH,CACuB,AAAC,GAAS,AAAgC,KAAhC,EAAO,MAAM,CAAC,OAAO,CAAC,MA3DhD,EAAO,IAAI,CAAC,CAAE,IAAK,EAAQ,MAAM,CAAE,MAAK,UAAWA,CAAQ,IARpD,CAWf,EAAG,EAAE,EAgBL,MAfA,QAAQ,EAAY,CAAC,EAAS,KAC1B,QAAQ,EAAa,CAAC,CAAE,KAAG,CAAEG,IAAAA,CAAG,CAAE,WAAS,CAAE,IACzC,GAAI,EAAUA,GAAO,AAejC,SAAuB,CAAG,CAAE,CAAO,EAE/B,GAAI,A1BngBO,E0BmgBE,GAAU,CACnB,IAAMR,EAAc,EAAQ,IAAI,CAAC,GACjC,OAAOA,AAAgB,OAAhBA,GAAwBA,AAAsB,IAAtBA,EAAY,KAAK,AACpD,CACK,GAAI,SAAW,GAEhB,OAAO,EAAQ,EAAK,EAAG,EAAE,CAAE,CAAC,GAE3B,GAAI,QAAI,EAAS,QAElB,OAAO,EAAQ,IAAI,CAAC,EAAK,EAAG,EAAE,CAAE,CAAC,GAEhC,GAAI,AAAmB,UAAnB,OAAO,EACZ,OAAO,IAAY,CAGnB,OAAMG,MAAM,uBAEpB,EAnC+C,EAAK,EAAQ,OAAO,EAAG,CACtD,IAAM,EAAM,CAAC,SAAS,EAAE,EAAU,IAAI,CACjC;AAA0B,0CAAgB,EAAE,EAAQ,IAAI,CACxD;AAA8B,4EAAF,CAFiC,CAIlE,EAAO,IAAI,CAAC,CACR,QAAS,EACT,KAAM,qBAA4C,CAClD,WAAY,CAAC,EAAS,EAAU,AACpC,EACJ,CACJ,EACJ,GACO,CACX,EAtQmD,GAEnD,EpChI4G,EAAY,GAChG,GAKA,QAAQ,IAAI,CAAC,qBAAqB,EAAG,KAEjC,EADJ,GAAkB,GAElB,IAAI,CAAC,UAAU,CAAC,oBAAqB,KACjC,EAAoB,AoChJzC,SAA2B,CAAU,CAAE,CAAO,EASjD,IAII,EAOA,EA2EA,EACA,EACA,EACA,EACA,EA+BA,EAgBA,EACA,EACA,EACA,EA5IE,EAAS,AARf,GAAU,SAAS,EAAS,CACxB,UAAW,GACX,MAAO,GACP,SAAU,GACV,iBAAkB,OAClB,yBAA0B,CAAC,KAAM,KAAK,CACtC,OAAQ,CAAC,EAAK,IAAW,GAC7B,EAAC,EACsB,MAAM,CAC7B,EAAO,kCAAmC,KAy0B1C,GAAI,QAAQ,IAA4B,CACpC,GAA4B,AAAID,MAAM,OACtC,IAAK,IAAI,EAAI,EAAG,EAAI,MAAO,IACvB,EAAyB,CAAC,EAAE,CAAG,EAAI,IAAM,IAAM,CAAC,CAAE,GAAI,GAAE,EAAK,CAErE,CA50BA,GAEA,EAAO,kBAAmB,KACtB,EAAoB,GAAO,EAAY,AAAC,GAC7B,CAAQ,CAAC,GAAQ,GAAK,GAAM,EAAE,CAE7C,GACA,IAAI,EAAY,GAEhB,EAAO,qBAAsB,KACzB,EAAY,GACZ,EAAyB,GAAAkB,EAAA,GAAI,EAAmB,AAAC,IAC7C,IAAM,EAAc,CAAQ,CAAC,GAAQ,CAErC,GAAI,A1BhBD,E0BgBU,GAAc,CACvB,IAAM,EAAe,EAAY,MAAM,QACvC,AAAI,AAAwB,IAAxB,EAAa,MAAM,EAEnB,AAAiB,MAAjB,GACA,AAAiB,MAAjB,GACA,AAAiB,MAAjB,GACC,EAAY,UAAU,CAGlB,AAAwB,IAAxB,EAAa,MAAM,EACxB,AAAoB,OAApB,CAAY,CAAC,EAAE,EAEd,GAAS,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACH,CAAE,CAAY,CAAC,EAAE,EAOX,EAAQ,SAAS,CAClB,GAAc,GACd,GAAgB,GALf,CAAY,CAAC,EAAE,CA1Bf,CAiCf,CACK,GAAI,SAAW,GAGhB,OAFA,EAAY,GAEL,CAAE,KAAM,CAAY,EAE1B,GAAI,AAAuB,UAAvB,OAAO,EAGZ,OAFA,EAAY,GAEL,EAEN,GAAI,AAAuB,UAAvB,OAAO,EACZ,GAAI,AAAuB,IAAvB,EAAY,MAAM,CAClB,OAAO,MAEN,CAED,IAAM,EAAgB,IAAIL,OADE,EAAY,OAAO,CAAC,sBAAuB,SAEvE,OAAO,EAAQ,SAAS,CAClB,GAAc,GACd,GAAgB,EAC1B,CAGA,MAAMZ,MAAM,uBAEpB,EACJ,GAMA,EAAO,eAAgB,KACnB,EAAmB,GAAAiB,EAAA,GAAI,EAAmB,AAAC,GAAa,EAAS,YAAY,EAC7E,EAAoB,GAAAA,EAAA,GAAI,EAAmB,AAAC,IACxC,IAAM,EAAY,EAAM,KAAK,CAE7B,GAAI,IAAc,GAAM,OAAO,EAG1B,GAAI,QAAS,GACd,OAAO,EAEN,GAAI,SAAY,GACjB,MAAO,EAGP,OAAMjB,MAAM,wBAEpB,GACA,EAA8B,GAAAiB,EAAA,GAAI,EAAmB,AAAC,IAClD,IAAM,EAAgB,EAAM,UAAU,CACtC,GAAI,EAIA,MAHwB,SAAQ,GAC1B,GAAAA,EAAA,GAAI,EAAe,AAAC,GAAS,GAAQ,EAAmB,IACxD,CAAC,GAAQ,EAAmB,GAAe,AAGzD,GACA,EAAuB,GAAAA,EAAA,GAAI,EAAmB,AAAC,GAAU,EAAM,SAAS,EACxE,EAAsB,GAAAA,EAAA,GAAI,EAAmB,AAAC,GAAU,QAAI,EAAO,YACvE,GAEA,EAAO,2BAA4B,KAC/B,IAAM,EAA0B,GAAa,EAAQ,wBAAwB,EAC7E,EAAgC,GAAAA,EAAA,GAAI,EAAmB,AAAC,GAAY,IAChE,AAA6B,eAA7B,EAAQ,gBAAgB,EACxB,GAAgC,GAAAA,EAAA,GAAI,EAAmB,AAACf,GACpD,AAAI,QAAIA,EAAS,eACN,CAAC,CAACA,EAAQ,WAAW,CAGpB,AAA4D,KAA5D,GAAsBA,EAAS,IACnC,GAAiB,EAAyBA,EAAQ,OAAO,EAEpE,CAET,GAKA,EAAO,kBAAmB,KACtB,EAAuB,GAAAe,EAAA,GAAI,EAAmB,IAC9C,EAAoB,GAAAA,EAAA,GAAI,EAAwB,IAChD,EAAc,SAAO,EAAmB,CAAC,EAAK,KAC1C,IAAM,EAAY,EAAM,KAAK,CAI7B,MAHI,QAAS,IAAgB,IAAc,GAAM,OAAO,EACpD,EAAG,CAAC,EAAU,CAAG,EAAE,AAAD,EAEf,CACX,EAAG,CAAC,GACJ,EAAqB,GAAAA,EAAA,GAAI,EAAwB,CAAC,EAAG,IAC1C,EACH,QAAS,CAAsB,CAAC,EAAI,CACpC,UAAW,CAA2B,CAAC,EAAI,CAC3C,kBAAmB,CAA6B,CAAC,EAAI,CACrD,SAAU,CAAoB,CAAC,EAAI,CACnC,MAAO,CAAiB,CAAC,EAAI,CAC7B,MAAO,CAAiB,CAAC,EAAI,CAC7B,KAAM,CAAoB,CAAC,EAAI,CAC/B,IAAK,CAAmB,CAAC,EAAI,CAC7B,aAAc,CAAgB,CAAC,EAAI,CACnC,UAAW,CAAiB,CAAC,EAAI,AACrC,GAER,GACA,IAAI,EAAiB,GACjB,EAA+B,EAAE,CAkErC,OAjEI,AAAC,EAAQ,QAAQ,EACjB,EAAO,0BAA2B,KAC9B,EAA+B,SAAO,EAAmB,CAAC,EAAQ,EAAa,KAC3E,GAAI,AAA+B,UAA/B,OAAO,EAAY,OAAO,CAG1B,GAAiB,EADI,GADJ,EAAY,OAAO,CAAC,UAAU,CAAC,IAET,CAAkB,CAAC,EAAI,OAE7D,GAAI,SAAQ,EAAY,gBAAgB,EAAG,CAC5C,IAAI,EACJ,QAAQ,EAAY,gBAAgB,CAAE,AAAC,IAInC,IAAM,EAAmB,GAHR,AAAqB,UAArB,OAAO,EAClB,EAAU,UAAU,CAAC,GACrB,GAMF,IAAqB,IACrB,EAAmB,EACnB,GAAiB,EAAQ,EAAkB,CAAkB,CAAC,EAAI,EAE1E,EACJ,MACK,GAAI,A1BhMV,E0BgMmB,EAAY,OAAO,EACjC,GAAI,EAAY,OAAO,CAAC,OAAO,CAC3B,EAAiB,GACb,EAAQ,mBAAmB,EAC3B,GAAY,CAAC,EAAE,GACV,qBAAsB,EAAE,EAAY,OAAO,CAAC,QAAQ,GAAG;AAAa;AACrB;AAC9D,+FAFmF,CAD7B,MAO/C,CACD,IAAM,EAAiB,AD/NxC,SAAuC,CAAM,CAAE,EAAsB,EAAK,EAC7E,GAAI,CACA,IAAM,EAAM,GAAa,GAEzB,OADmB,AAgCpB,SAAS,EAA0B,CAAG,CAAEpB,CAAM,CAAE,CAAU,EAC7D,OAAQ,EAAI,IAAI,EACZ,IAAK,cACD,IAAK,IAAIQ,EAAI,EAAGA,EAAI,EAAI,KAAK,CAAC,MAAM,CAAEA,IAClC,EAA0B,EAAI,KAAK,CAACA,EAAE,CAAER,EAAQ,GAEpD,KACJ,KAAK,cACD,IAAM,EAAQ,EAAI,KAAK,CACvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAM,EAAO,CAAK,CAAC,EAAE,CAErB,OAAQ,EAAK,IAAI,EACb,IAAK,YAIL,IAAK,qBAEL,IAAK,YACL,IAAK,oBACL,IAAK,cACL,IAAK,eACL,IAAK,kBACD,QACR,CAEA,OAAQ,AADK,EACA,IAAI,EACb,IAAK,YACD,GAAwB,AAHnB,EAGwB,KAAK,CAAEA,EAAQ,GAC5C,KACJ,KAAK,MACD,GAAI,AAAoB,KAApB,AANC,EAMI,UAAU,CACf,MAAMG,MAAM,IAEhB,QAAQ,AATH,EASQ,KAAK,CAAE,AAAC,IACjB,GAAI,AAAgB,UAAhB,OAAO,EACP,GAAwB,EAAMH,EAAQ,QAMtC,GAAI,AAAe,KAAf,EACA,IAAK,IAAI,EAAY,AAHX,EAGiB,IAAI,CAAE,GAAa,AAHpC,EAG0C,EAAE,CAAE,IACpD,GAAwB,EAAWA,EAAQ,OAI9C,CAED,IAAK,IAAI,EAAY,AAVX,EAUiB,IAAI,CAAE,GAAa,AAVpC,EAU0C,EAAE,EAAI,ECuuB5D,IDvuB4F,IACtF,GAAwB,EAAWA,EAAQ,GAG/C,GAAI,AAdM,EAcA,EAAE,ECmuBd,IDnuBsC,CAChC,IAAM,EAAc,AAfd,EAeoB,IAAI,ECkuBpC,IDjuBY,AAhBA,EAgBM,IAAI,CCiuBtB,ID/tBY,EAAc,AAlBd,EAkBoB,EAAE,CACtB,EAAY,GAAyB,GACrC,EAAY,GAAyB,GAC3C,IAAK,IAAI,EAAa,EAAW,GAAc,EAAW,IACtDA,CAAM,CAAC,EAAW,CAAG,CAE7B,CACJ,CAER,GACA,KACJ,KAAK,QACD,EAA0B,AA7CrB,EA6C0B,KAAK,CAAEA,EAAQ,GAC9C,KAEJ,SACI,MAAMG,MAAM,uBACpB,CAEA,IAAM,EAAuB,AAAoB,SAApB,AApDhB,EAoDqB,UAAU,EAAkB,AAA4B,IAA5B,AApDjD,EAoDsD,UAAU,CAAC,OAAO,CACrF,GAGA,AAAe,UAAd,AAxDY,EAwDP,IAAI,EAAgB,AAA0B,KAA1B,AAiD1C,SAAS,EAAgB,CAAG,EACxB,IAAM,EAAa,EAAI,UAAU,OACjC,EAAI,GAAc,AAAuB,IAAvB,EAAW,OAAO,GAGhC,CAAC,EAAI,KAAK,EAGP,UAAQ,EAAI,KAAK,EAClB,GAAM,EAAI,KAAK,CAAE,GACjB,EAAgB,EAAI,KAAK,EACnC,EApH6B,IA0DR,AAAc,UAAd,AA1DQ,EA0DH,IAAI,EAAgB,AAAyB,KAAzB,EAC1B,KAER,CACA,KAEJ,SACI,MAAMA,MAAM,wBACpB,CAEA,MAAO,QAAOH,EAClB,EA/HqD,EAAI,KAAK,CAAE,CAAC,EAAG,EAAI,KAAK,CAAC,UAAU,CAEpF,CACA,MAAO,EAAG,CAIN,GAAI,EAAE,OAAO,GAAK,GACd,KFZkB,CEYd,KFZc,EEaA,CAAC,EAAE,GACZ,uBAAwB,EAAE,EAAO,QAAQ,GAAG;AAAI;AACnB;AACpB,0FAFuC,CADP,CAKlD,KAEC,CACD,IAAI,EAAY,EACZ,IACA,GACI,4JACoG,EAE5G,GAAY,CAAC,EAAE;AACR,mBAAkB,EAAE,EAAO,QAAQ,GACrC;AAAI;AACrB,yEADgE,CAFN,CAI1C,EACR,CACJ,CACA,MAAO,EAAE,AACb,EC6L6E,EAAY,OAAO,CAAE,EAAQ,mBAAmB,CAIjG,SAAQ,IAIR,GAAiB,EAAI,EAEzB,QAAQ,EAAgB,AAAC,IACrB,GAAiB,EAAQ,EAAM,CAAkB,CAAC,EAAI,CAC1D,EACJ,MAGI,EAAQ,mBAAmB,EAC3B,GAAY,CAAC,EAAE,GACV,aAAc,EAAE,EAAY,IAAI,CAAC;AAAmF;AAC1F,8FAD0F,CAD7E,EAKhD,EAAiB,GAErB,OAAO,CACX,EAAG,EAAE,CACT,GAEG,CACH,YAAa,EACb,mBAAoB,EACpB,6BAA8B,EAC9B,UAAW,EACX,eAAgB,CACpB,CACJ,EpCzGkE,EAAY,CAC9C,yBAA0B,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAC9D,iBAAkB,EAAO,gBAAgB,CACzC,oBAAqB,EAAO,mBAAmB,CAC/C,SAAU,EAAO,QAAQ,CACzB,OAAQ,IAAI,CAAC,UAAU,AAC3B,EACJ,GACA,IAAI,CAAC,kBAAkB,CAAC,EAAY,CAChC,EAAkB,kBAAkB,CACxC,IAAI,CAAC,4BAA4B,CAAC,EAAY,CAC1C,EAAkB,4BAA4B,CAClD,IAAI,CAAC,WAAW,CAAG,AQnH5B,ERmHmC,CAAC,EAAG,IAAI,CAAC,WAAW,CAAE,EAAkB,WAAW,EAC7E,IAAI,CAAC,SAAS,CAAG,EAAkB,SAAS,EAAI,IAAI,CAAC,SAAS,CAC9D,IAAI,CAAC,kBAAkB,CAAC,EAAY,CAChC,EAAkB,cAAc,AACxC,CACJ,EACJ,GACA,IAAI,CAAC,WAAW,CAAG,EAAiB,WAAW,CAC3C,CAAC,QAAQ,IAAI,CAAC,qBAAqB,GACnC,CAAC,IAAI,CAAC,MAAM,CAAC,6BAA6B,CAK1C,MAAM,AAAIG,MAAM,4CADa,AAHN,GAAAiB,EAAA,GAAI,IAAI,CAAC,qBAAqB,CAAE,AAAChB,GAC7CA,EAAM,OAAO,EAEoB,IAAI,CAAC,8BAIrD,QAAQ,IAAI,CAAC,sBAAsB,CAAE,AAAC,QiCvLpB,IjCwLA,EAAkB,OAAO,AAC3C,GACA,IAAI,CAAC,UAAU,CAAC,uCAAwC,KAqBpD,GAjBI,IACA,IAAI,CAAC,SAAS,CAAG,IAAQ,CACzB,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,aAAa,GAG/B,IAAI,CAAC,eAAe,CAAG,IAAI,CAC3B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,aAAa,EAE/B,GACA,KAAI,CAAC,WAAW,CAAG,IAAI,AAAJ,EAEnB,AAAyB,KAAzB,IAAI,CAAC,eAAe,EACpB,KAAI,CAAC,gBAAgB,CAAG,IAAQ,AAAR,EAExB,AAAuB,KAAvB,IAAI,CAAC,aAAa,EAClB,KAAI,CAAC,gCAAgC,CAAG,IAAI,AAAJ,EAExC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EACzC,IAAI,CAAC,mBAAmB,CAAG,IAAI,CAAC,eAAe,MAE9C,GAAI,aAAa,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EACnD,IAAI,CAAC,mBAAmB,CAAG,IAAI,CAAC,oBAAoB,MAEnD,GAAI,cAAc,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EACpD,IAAI,CAAC,mBAAmB,CAAG,IAAI,CAAC,qBAAqB,MAGrD,MAAMD,MAAM,CAAC,2CAA2C,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAEzF,KAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,iBAAiB,CACtC,IAAI,CAAC,aAAa,CAAG,IAAI,CAAC,uBAAuB,GAGjD,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,yBAAyB,CAC9C,IAAI,CAAC,aAAa,CAAG,IAAI,CAAC,qBAAqB,CAEvD,GACA,IAAI,CAAC,UAAU,CAAC,+BAAgC,KAC5C,IAAM,EAAmB,SAAO,IAAI,CAAC,kBAAkB,CAAE,CAAC,EAAmB,EAAgB,KACrF,AAAmB,KAAnB,GACA,EAAkB,IAAI,CAAC,GAEpB,GACR,EAAE,EACL,GAAI,EAAO,mBAAmB,EAAI,CAAC,QAAQ,GACvC,MAAMA,MAAM,CAAC,eAAe,EAAE,EAAiB,IAAI,CAAC,MAAM;AAAyB;AACgB,wEADhB,CAAC,CAI5F,GACA,IAAI,CAAC,UAAU,CAAC,yBAA0B,KkCxOlD,GAAiB,CAAC,ClC0OV,GACA,IAAI,CAAC,UAAU,CAAC,mBAAoB,KAChC,EAAiB,IAAI,CACzB,EACJ,EACJ,CACA,SAAS,CAAI,CAAE,EAAc,IAAI,CAAC,WAAW,CAAE,CAC3C,GAAI,CAAC,QAAQ,IAAI,CAAC,qBAAqB,EAKnC,MAAM,AAAIA,MAAM,uEADa,AAHN,GAAAiB,EAAA,GAAI,IAAI,CAAC,qBAAqB,CAAE,AAAChB,GAC7CA,EAAM,OAAO,EAEoB,IAAI,CAAC,8BAIrD,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAM,EACvC,CAKA,iBAAiB,CAAI,CAAE,CAAW,CAAE,CAEhC,IADI,EAAG,EAAG,EAAG,EAAe,EAAW,EAAc,EAAS,EAAY,EAAa,EAAO,EAAS,EAAU,EAAwB,EAAK,EAyB1I,EAiEA,EAzFE,EAAU,EACV,EAAY,EAAQ,MAAM,CAC5B,EAAS,EACT,EAAqB,EAQnB,EAAgB,AAAIF,MAHI,IAAI,CAAC,SAAS,CACtC,EACAiB,KAAK,KAAK,CAAC,EAAK,MAAM,CAAG,KAEzB,EAAS,EAAE,CACb,EAAO,IAAI,CAAC,eAAe,CAAG,EAAI,OAClC,EAAS,IAAI,CAAC,eAAe,CAAG,EAAI,OAClC,EAAS,AoCsZhB,SAA0Bf,CAAW,EACxC,IAAM,EAAe,CAAC,EAChB,EAAY,QAAKA,GAWvB,MAVA,QAAQ,EAAW,AAAC,IAChB,IAAM,EAAiBA,CAAW,CAAC,EAAQ,CAE3C,GAAI,SAAQ,GACR,CAAY,CAAC,EAAQ,CAAG,EAAE,MAG1B,MAAMD,MAAM,uBAEpB,GACO,CACX,EpCpawC,IAAI,CAAC,WAAW,EAC1C,EAAa,IAAI,CAAC,eAAe,CACjC,EAAwB,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAC5D,EAAyB,EACzB,EAAqB,EAAE,CACvB,EAAmC,EAAE,CACnC,EAAY,EAAE,CACd,EAAa,EAAE,CAGrB,SAAS,IACL,OAAO,CACX,CACA,SAAS,EAA6B,CAAQ,EAE1C,IAAM,EAAmB,CAAgC,CADhC,GAAyB,GACyB,QAC3E,AAAI,AAAqB,SAArB,EACO,EAGA,CAEf,CAdAF,OAAO,MAAM,CAAC,GAed,IAAM,EAAW,AAAC,IAEd,GAAI,AAAqB,IAArB,EAAU,MAAM,EAGhB,AAAiC,SAAjC,EAAS,SAAS,CAAC,SAAS,CAAgB,CAG5C,IAAM,EAAM,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,gCAAgC,CAAC,GAC9E,EAAO,IAAI,CAAC,CACR,OAAQ,EAAS,WAAW,CAC5B,KAAM,EAAS,SAAS,CACxB,OAAQ,EAAS,WAAW,CAC5B,OAAQ,EAAS,KAAK,CAAC,MAAM,CAC7B,QAAS,CACb,EACJ,KACK,CACD,EAAU,GAAG,GACb,IAAM,EAAU,SAAK,GACrB,EAAqB,IAAI,CAAC,kBAAkB,CAAC,EAAQ,CACrD,EACI,IAAI,CAAC,4BAA4B,CAAC,EAAQ,CAC9C,EAAyB,EAAmB,MAAM,CAClD,IAAM,EAAqB,IAAI,CAAC,kBAAkB,CAAC,EAAQ,EAAI,AAAyB,KAAzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAE/E,EADA,GAAoC,EACd,EAGA,CAE9B,CACJ,EACA,SAAS,EAAU,CAAO,EACtB,EAAU,IAAI,CAAC,GACf,EACI,IAAI,CAAC,4BAA4B,CAAC,EAAQ,CAE9C,EAAyB,AADzB,GAAqB,IAAI,CAAC,kBAAkB,CAAC,EAAQ,AAAD,EACR,MAAM,CAClD,EAAyB,EAAmB,MAAM,CAClD,IAAM,EAAqB,IAAI,CAAC,kBAAkB,CAAC,EAAQ,EAAI,AAAyB,KAAzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAE/E,EADA,GAAoC,EACd,EAGA,CAE9B,CAGA,EAAU,IAAI,CAAC,IAAI,CAAE,GAErB,IAAM,EAAkB,IAAI,CAAC,MAAM,CAAC,eAAe,CACnD,KAAO,EAAS,GAAW,CACvB,EAAe,KACf,IAAM,EAAe,EAAQ,UAAU,CAAC,GAClC,EAA2B,EAAoB,GAC/C,EAAuB,EAAyB,MAAM,CAC5D,IAAK,EAAI,EAAG,EAAI,EAAsB,IAAK,CAEvC,IAAM,EAAc,AADpB,GAAa,CAAwB,CAAC,EAAE,AAAD,EACR,OAAO,CACtC,EAAU,KAEV,IAAM,EAAiB,EAAW,KAAK,CAuBvC,GAtBI,AAAmB,KAAnB,EACI,IAAiB,GAEjB,GAAe,CAAU,EAGxB,AAAwB,KAAxB,EAAW,QAAQ,CAEpB,AAAU,OADd,GAAQ,EAAY,IAAI,CAAC,EAAS,EAAQ,EAAe,EAAM,GAE3D,EAAe,CAAK,CAAC,EAAE,CACnB,AAAkB,SAAlB,EAAM,OAAO,EACb,GAAU,EAAM,OAAO,AAAD,GAI1B,EAAe,MAInB,IAAI,CAAC,eAAe,CAAC,EAAa,GAClC,EAAe,IAAI,CAAC,KAAK,CAAC,EAAa,EAAM,IAE7C,AAAiB,OAAjB,EAAuB,CAIvB,GAAI,AAAc,SADlB,GAAY,EAAW,SAAS,AAAD,EACF,CAGzB,IAAM,EAAkB,EAAU,MAAM,CACxC,IAAK,EAAI,EAAG,EAAI,EAAiB,IAAK,CAClC,IAAM,EAAkB,CAAkB,CAAC,CAAS,CAAC,EAAE,CAAC,CAClD,EAAmB,EAAgB,OAAO,CAoBhD,GAnBA,EAAa,KAGT,AAA6B,KAA7B,EAAgB,QAAQ,CAEpB,AAAU,OADd,GAAQ,EAAiB,IAAI,CAAC,EAAS,EAAQ,EAAe,EAAM,GAEhE,EAAgB,CAAK,CAAC,EAAE,CACpB,AAAkB,SAAlB,EAAM,OAAO,EACb,GAAa,EAAM,OAAO,AAAD,GAI7B,EAAgB,MAIpB,IAAI,CAAC,eAAe,CAAC,EAAkB,GACvC,EAAgB,IAAI,CAAC,KAAK,CAAC,EAAkB,EAAM,IAEnD,GAAiB,EAAc,MAAM,CAAG,EAAa,MAAM,CAAE,CAC7D,EAAe,EACf,EAAU,EACV,EAAa,EAGb,KACJ,CACJ,CACJ,CACA,KACJ,CACJ,CAEA,GAAI,AAAiB,OAAjB,EAAuB,CAqBvB,GApBA,EAAc,EAAa,MAAM,CAEnB,SADd,GAAQ,EAAW,KAAK,AAAD,IAEnB,EAAU,EAAW,YAAY,CAGjC,EAAW,IAAI,CAAC,mBAAmB,CAAC,EAAc,EAAQ,EAAS,EAAW,SAAS,CAAE,EAAM,EAAQ,GACvG,IAAI,CAAC,aAAa,CAAC,EAAU,GAEzB,AAAU,KAAV,EACA,EAAqB,IAAI,CAAC,QAAQ,CAAC,EAAe,EAAoB,GAGtE,CAAM,CAAC,EAAM,CAAC,IAAI,CAAC,IAG3B,EAAO,IAAI,CAAC,SAAS,CAAC,EAAM,GAC5B,GAAkB,EAElB,EAAS,IAAI,CAAC,gBAAgB,CAAC,EAAQ,GACnC,AAAe,KAAf,GAAuB,AAAiC,KAAjC,EAAW,iBAAiB,CAAW,CAC9D,IACI,EACA,EAFA,EAAkB,CAGtB,GAAsB,SAAS,CAAG,EAClC,EAE4B,KADxB,GAAkB,EAAsB,IAAI,CAAC,EAAY,IAErD,EAAkB,EAAsB,SAAS,CAAG,EACpD,WAEC,AAAoB,KAApB,EAA0B,AACX,KAApB,IACA,GAAc,EACd,EAAS,EAAc,EACvB,IAAI,CAAC,gCAAgC,CAAC,EAAU,EAAO,EAAiB,EAAiB,EAAM,EAAQ,GAE/G,CAEA,IAAI,CAAC,WAAW,CAAC,EAAY,EAAU,EAAW,EACtD,KACK,CAED,IAAM,EAAmB,EACnB,EAAY,EACZ,EAAc,EAChB,EAAmB,AAAoB,KAApB,EACvB,KAAO,AAAqB,KAArB,GAA8B,EAAS,GAI1C,IAFA,EAAO,IAAI,CAAC,SAAS,CAAC,EAAM,GAC5B,IACK,EAAI,EAAG,EAAI,EAAwB,IAAK,CACzC,IAAM,EAAa,CAAkB,CAAC,EAAE,CAClC,EAAc,EAAW,OAAO,CAEhC,EAAiB,EAAW,KAAK,CAevC,GAdI,AAAmB,KAAnB,EACI,EAAQ,UAAU,CAAC,KAAY,GAE/B,GAAmB,EAAG,EAGrB,AAAwB,KAAxB,EAAW,QAAQ,CACxB,EACI,AAA6D,OAA7D,EAAY,IAAI,CAAC,EAAS,EAAQ,EAAe,IAGrD,IAAI,CAAC,eAAe,CAAC,EAAa,GAClC,EAAmB,AAA2B,OAA3B,EAAY,IAAI,CAAC,IAEpC,AAAqB,KAArB,EACA,KAER,CAaJ,GAXA,EAAY,EAAS,EACrB,EAAS,IAAI,CAAC,gBAAgB,CAAC,EAAQ,GAEvC,EAAM,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,gCAAgC,CAAC,EAAS,EAAkB,EAAW,EAAW,GACzH,EAAO,IAAI,CAAC,CACR,OAAQ,EACR,KAAM,EACN,OAAQ,EACR,OAAQ,EACR,QAAS,CACb,GACI,AAAoB,KAApB,EACA,KAER,CACJ,CAOA,OAJI,AAAC,IAAI,CAAC,SAAS,EAEf,GAAc,MAAM,CAAG,CAAiB,EAErC,CACH,OAAQ,EACR,OAAQ,EACR,OAAQ,CACZ,CACJ,CACA,YAAY,CAAM,CAAE,CAAQ,CAAE,CAAS,CAAEwB,CAAQ,CAAE,CAC/C,GAAI,AAAe,KAAf,EAAO,GAAG,CAAW,CAGrB,IAAM,EAAW,EAAO,IAAI,CAC5B,EAASA,GACL,AAAa,SAAb,GACA,EAAU,IAAI,CAAC,IAAI,CAAE,EAE7B,MACS,AAAgB,SAAhB,EAAO,IAAI,EAChB,EAAU,IAAI,CAAC,IAAI,CAAE,EAAO,IAAI,CAExC,CACA,UAAU,CAAI,CAAE,CAAM,CAAE,CACpB,OAAO,EAAK,SAAS,CAAC,EAC1B,CACA,gBAAgB,CAAM,CAAE,CAAY,CAAE,CAClC,EAAO,SAAS,CAAG,CACvB,CAEA,iCAAiC,CAAQ,CAAE,CAAK,CAAE,CAAS,CAAEA,CAAe,CAAE,CAAI,CAAE,CAAM,CAAE,CAAW,CAAE,CACrG,IAAI,EAAc,CACJ,UAAV,IAGA,EAAmB,AADnB,GAAe,IAAc,EAAc,GACT,GAAK,EACjCA,CAAAA,AAAoB,IAApBA,GAAyB,AAAiB,KAAjB,CAAoB,IAE/C,EAAS,OAAO,CAAG,EAAO,EAG1B,EAAS,SAAS,CAAG,EAAS,EAAI,CAAC,GAI/C,CACA,iBAAiB,CAAS,CAAE,CAAW,CAAE,CACrC,OAAO,EAAY,CACvB,CACA,sBAAsB,CAAK,CAAE,CAAW,CAAE,CAAY,CAAE,CAAS,CAAE,CAC/D,MAAO,CACH,QACA,cACA,eACA,WACJ,CACJ,CACA,qBAAqB,CAAK,CAAE,CAAW,CAAE,CAAY,CAAE,CAAS,CAAE,CAAS,CAAE,CAAW,CAAE,CACtF,MAAO,CACH,QACA,cACA,YACA,cACA,eACA,WACJ,CACJ,CACA,gBAAgB,CAAK,CAAE,CAAW,CAAE,CAAY,CAAE,CAAS,CAAE,CAAS,CAAE,CAAW,CAAE,CAAW,CAAE,CAC9F,MAAO,CACH,QACA,cACA,UAAW,EAAc,EAAc,EACvC,YACA,QAAS,EACT,cACA,UAAW,EAAc,EAAc,EACvC,eACA,WACJ,CACJ,CACA,kBAAkB,CAAW,CAAE,CAAK,CAAE,CAAU,CAAE,CAE9C,OADA,EAAY,IAAI,CAAC,GACV,CACX,CACA,0BAA0B,CAAW,CAAE,CAAK,CAAE,CAAU,CAAE,CAGtD,OAFA,CAAW,CAAC,EAAM,CAAG,IAEd,CACX,CACA,sBAAsB,CAAK,CAAE,CAAO,CAAE,CAAE,CACxC,wBAAwB,CAAK,CAAE,CAAO,CAAE,CAChC,AAAY,OAAZ,GACA,GAAM,OAAO,CAAG,CAAM,CAE9B,CACA,cAAc,CAAO,CAAEpB,CAAI,CAAE,CAAM,CAAE,OAEjC,AAAI,AAAU,KADA,EAAQ,IAAI,CAACA,GAEhBA,EAAK,SAAS,CAAC,EAAQ,EAAQ,SAAS,EAE5C,IACX,CACA,cAAc,CAAO,CAAEA,CAAI,CAAE,CACzB,IAAML,EAAc,EAAQ,IAAI,CAACK,GACjC,OAAOL,AAAgB,OAAhBA,EAAuBA,CAAW,CAAC,EAAE,CAAG,IACnD,CACJ,CwC9nBO,SAAS,GAAW,CAAO,SAC9B,AAAI,GAAc,GACP,EAAQ,KAAK,CAGb,EAAQ,IAAI,AAE3B,CAIO,SAAS,GAAc,CAAG,EAC7B,MAAO,QAAS,EAAI,KAAK,GAAK,AAAc,KAAd,EAAI,KAAK,AAC3C,CxCknBA,GAAM,OAAO,CAAG,6LAEhB,GAAM,EAAE,CAAG,iBwClnBX,IAAM,GAAa,aACb,GAAQ,QACR,GAAQ,QACR,GAAY,YACZ,GAAW,WACX,GAAa,aACb,GAAc,cACd,GAAmB,mBAIzB,SAAS,GAAoB,CAAM,EAC/B,IAAM,EAAU,EAAO,OAAO,CACxB,EAAY,CAAC,EAKnB,GAJA,EAAU,IAAI,CAAG,EAAO,IAAI,CACxB,AAAC,SAAY,IACb,GAAU,OAAO,CAAG,CAAM,EAE1B,QAAI,EAnBG,UAoBP,KAAO,4IA6BX,MA1BI,QAAI,EAAQ,KAEZ,GAAU,UAAU,CAAG,CAAM,CAAC,GAAW,AAAD,EAE5C,GAAkB,CAAC,EAAU,EACzB,QAAI,EAAQ,KACZ,GAAU,KAAK,CAAG,CAAM,CAAC,GAAM,AAAD,EAE9B,QAAI,EAAQ,KACZ,GAAU,KAAK,CAAG,CAAM,CAAC,GAAM,AAAD,EAE9B,QAAI,EAAQ,KACZ,GAAU,QAAQ,CAAG,CAAM,CAAC,GAAS,AAAD,EAEpC,QAAI,EAAQ,KACZ,GAAU,SAAS,CAAG,CAAM,CAAC,GAAU,AAAD,EAEtC,QAAI,EAAQ,KACZ,GAAU,UAAU,CAAG,CAAM,CAAC,GAAW,AAAD,EAExC,QAAI,EAAQ,KACZ,GAAU,WAAW,CAAG,CAAM,CAAC,GAAY,AAAD,EAE1C,QAAI,EAAQ,KACZ,GAAU,gBAAgB,CAAG,CAAM,CAAC,GAAiB,AAAD,EAEjD,CACX,CACO,IAAM,GAzCF,GAyCoB,CAAE,KAAM,MAAO,QAAS,GAAM,EAAE,AAAC,GAEzD,SAAS,GAAoB,CAAO,CAAE,CAAK,CAAE,CAAW,CAAE,CAAS,CAAE,CAAS,CAAE,CAAO,CAAE0B,CAAW,CAAE,CAAS,EAClH,MAAO,CACH,QACA,cACA,YACA,YACA,UACAA,YAAAA,EACA,YACA,aAAc,EAAQ,YAAY,CAClC,UAAW,CACf,CACJ,CACO,SAAS,GAAa,CAAK,CAAErB,CAAO,EACvC,OAAO,GAAuB,EAAOA,EACzC,CAhBA,GAAkB,CAAC,GAAI,EClEhB,IAAM,GAA6B,CACtC,0BAA0B,CAAED,SAAAA,CAAQ,CAAE,QAAM,CAAE,UAAQ,CAAE,UAAQ,CAAE,EAE9D,IAAM,EAAc,AADH,GAAcA,GAEzB,CAAC,IAAI,EAAE,GAAWA,GAAU,IAAI,CAAC,CACjC,CAAC,kBAAkB,EAAEA,EAAS,IAAI,CAAC,IAAI,CAAC,CAE9C,MADY,CAAC,UAAU,EAAE,EAAY,gBAAgB,EAAE,EAAO,KAAK,CAAC,KAAK,CAAC,AAE9E,EACA,+BAA8B,CAAE,gBAAc,CAAE,UAAQ,CAAE,GAC/C,6CAA+C,EAAe,KAAK,CAE9E,wBAAwB,CAAEA,oBAAAA,CAAmB,CAAE,QAAM,CAAE,UAAQ,CAAE,uBAAqB,CAAE,UAAQ,CAAG,EAC/F,IAAM,EAAY,cAGZ,EAAY,iBADC,GAAM,GAAQ,KAAK,CACY,IAClD,GAAI,EACA,OAAO,EAAY,EAAwB,CAE1C,EACD,IAAM,EAAoB,SAAOA,EAAqB,CAAC,EAAQ,IAAiB,EAAO,MAAM,CAAC,GAAe,EAAE,EACzG,EAA0B,GAAAgB,EAAA,GAAI,EAAmB,AAAC,GAAa,CAAC,CAAC,EAAE,GAAAA,EAAA,GAAI,EAAU,AAAC,GAAkB,GAAW,IAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,EAC5IK,EAAyB,GAAAL,EAAA,GAAI,EAAyB,CAAC,EAAS,IAAQ,CAAC,EAAE,EAAE,EAAM,EAAE,EAAE,EAAE,EAAQ,CAAC,EAExG,OAAO,EADuB,CAAC;AAAwC,EAAEK,EAAuB,IAAI,CAAC,MAAM,CAAC,CACjE,CAC/C,CACJ,EACA,sBAAsB,CAAErB,uBAAAA,CAAsB,CAAE,QAAM,CAAE,uBAAqB,CAAE,UAAQ,CAAG,EACtF,IAAM,EAAY,cAGZ,EAAY,iBADC,GAAM,GAAQ,KAAK,CACY,IAClD,GAAI,EACA,OAAO,EAAY,EAAwB,CAE1C,EACD,IAAM,EAA0B,GAAAgB,EAAA,GAAIhB,EAAwB,AAAC,GAAa,CAAC,CAAC,EAAE,GAAAgB,EAAA,GAAI,EAAU,AAAC,GAAkB,GAAW,IAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,EAGtJ,OAAO,EAFuB,CACzB;AACiC,GADhC,EAAE,EAAwB,IAAI,CAAC,MAAM,CAAC,CADkF,CAEnF,CAC/C,CACJ,CACJ,EACAnB,OAAO,MAAM,CAAC,IACP,IAAM,GAAsC,CAC/C,wBAAuB,EAAc,IACrB,gEACR,EAAc,eAAe,CADrB,gCAIR,EAAa,IAAI,CACjB,IAGZ,EACa,GAAuC,CAChD,yBAAyB,CAAY,CAAE,CAAc,EAYjD,IAAM,EAAe,EAAa,IAAI,CAChC,EAAgB,GAAM,GACtBO,EAAQ,EAAc,GAAG,CACzB,EAAU,GAAqB,GAC/B,EAdF,AAAI,AAcyC,aAdzB,EACT,AAakC,EAb7B,YAAY,CAAC,IAAI,CAExB,AAWoC,aAXpB,EACd,AAUkC,EAV7B,eAAe,CAGpB,GASX,EAAM,CAAC,EAAE,EAAE,EAAQ,EAAE,AADAA,EAAQ,EACWA,EAAQ,GAAG,GAAG,EAAE,EAAgB,CAAC,iBAAiB,EAAE,EAAc,EAAE,CAAC,CAAG;AAC5H,0CAA0C,EAAE,EAAe,MAAM,CAAC,iCAAiC,EAAE,EAAa;AAClH;AACA,kBAAkB,CAAC,CAIX,MADM,AADN,GAAM,EAAI,OAAO,CAAC,UAAW,IAAG,EACtB,OAAO,CAAC,SAAU,KAEhC,EACA,4BAA4B,GACT,CACV;AAAsC,wEAAkC,EAAE,EAAK,IAAI,CAEnF;AAAI;AAA2E;AAEvF,sDAF+G,CAHrD,CAO3D,qCAAqC,CAAO,EACxC,IAAM,EAAU,GAAAY,EAAA,GAAI,EAAQ,UAAU,CAAE,AAAC,GAAY,GAAW,IAAU,IAAI,CAAC,MACzE,EAAa,AAA4B,IAA5B,EAAQ,WAAW,CAAC,GAAG,CAAS,GAAK,EAAQ,WAAW,CAAC,GAAG,CAM/E,MALe,CAAC,yBAAyB,EAAE,EAAQ,gBAAgB,CAAC,IAAI,CAAC,MACpE;AAAkC,MAA5B,EAAE,EAAW,UAAU,EAAE,EAAQ,YAAY,CAAC,IAAI,CACxD;AAAS,CAAR,EAAE,EACH;AAA2D;AAErD,oBAF6E,CAH0B,AAMtH,EACA,+BAA+B,CAAO,EAClC,IAAM,EAAU,GAAAA,EAAA,GAAI,EAAQ,UAAU,CAAE,AAAC,GAAY,GAAW,IAAU,IAAI,CAAC,MACzE,EAAa,AAA4B,IAA5B,EAAQ,WAAW,CAAC,GAAG,CAAS,GAAK,EAAQ,WAAW,CAAC,GAAG,CAC3E,EAAc,CAAC,kCAAkC,EAAE,EAAQ,gBAAgB,CAAC,IAAI,CAAC,MAAM,QAAQ,EAAE,EAChG,UAAS,EAAE,EAAQ,YAAY,CAAC,IAAI,CACpC;AAAS,CAAR,EAAE,EAAQ;AAA2D,CAFuC,CAOlH,OAHI,EACI,CAAC;AAA4F,CAAC,CAC9F,sBAEZ,EACA,0BAA0B,CAAO,EAC7B,IAAI,EAAU,GAAqB,EAAQ,UAAU,EAMrD,OALI,AAA2B,IAA3B,EAAQ,UAAU,CAAC,GAAG,EACtB,IAAW,EAAQ,UAAU,CAAC,GAAG,AAAD,EAErB,CAAC,gBAAgB,EAAE,EAAQ,eAAe,EAAE,EAAQ,YAAY,CAAC,IAAI,CAAC;AAAiC,qCAAC,AAG3H,EAGA,oBAAoB,GAET,aAEX,2BAA2B,GACR,CAAC,8BAA8B,EAAE,EAAQ,cAAc,CAAG,EACpE,QAAO,EAAE,EAAQ,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,EAAQ,YAAY,CAAC,IAAI,CAAC;AAAS,uDADR,CAKjF,8BAA8B,GACX,CACV;AAAwD,GAArD,EAAE,EAAQ,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,EAAQ,YAAY,CAAC,IAAI,CAAC;AAAS,KAAK,EAAE,EAAQ,WAAW,CAAC,UAAU,CAAC,MAAM,CAAG,EAAE,cAAc,CADvE,CAI7E,wBAAwB,CAAO,EAC3B,IAAM,EAAW,EAAQ,YAAY,CAAC,IAAI,CACpC,EAAY,GAAAA,EAAA,GAAI,EAAQ,iBAAiB,CAAE,AAAC,GAAa,EAAS,IAAI,EACtE,EAAoB,CAAC,EAAE,EAAS,KAAK,EAAE,EACxC,MAAM,CAAC,CAAC,EAAS,EACjB,IAAI,CAAC,YAAS,CAAC,CAMpB,MALe,CACV;AAAkC,OAA3B,EAAE,EACT;AAAuD;AACxC,CADwD,EAAE;AACvE;AAAkE,4DAAF,CAHpB,AAMvD,EAGA,0BAA0B,GAEf,aAEX,4BAA4B,CAAO,EAC/B,IAAI,EAQJ,OANI,EADA,EAAQ,YAAY,YAAY,EACrB,EAAQ,YAAY,CAAC,IAAI,CAGzB,EAAQ,YAAY,CAEpB,CAAC,8BAA8B,EAAE,EAAS,wCAAwC,EAAE,EAAQ,WAAW,CAAC,EAAE,CAAC,AAE9H,CACJ,CCrKO,OAAM,WAA+B,EACxC,YAAY,CAAa,CAAE,CAAc,CAAE,CACvC,KAAK,GACL,IAAI,CAAC,aAAa,CAAG,EACrB,IAAI,CAAC,cAAc,CAAG,EACtB,IAAI,CAAC,MAAM,CAAG,EAAE,AACpB,CACA,aAAc,CACV,QAAQ,QAAO,IAAI,CAAC,aAAa,EAAG,AAAC,IACjC,IAAI,CAAC,YAAY,CAAG,EACpB,EAAK,MAAM,CAAC,IAAI,CACpB,EACJ,CACA,iBAAiB,CAAI,CAAE,CACnB,IAAM,EAAM,IAAI,CAAC,aAAa,CAAC,EAAK,eAAe,CAAC,CACpD,GAAK,EAUD,EAAK,cAAc,CAAG,MAVhB,CACN,IAAM,EAAM,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAE,GAC1E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CACb,QAAS,EACT,KAAM,wBAAgD,CACtD,SAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAChC,kBAAmB,EAAK,eAAe,AAC3C,EACJ,CAIJ,CACJ,C,4BCfA,OAXA,SAAyB,CAAK,CAAE,CAAM,CAAE,CAAQ,CAAE,CAAW,EAI3D,IAHA,IAAIZ,EAAQ,GACR,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,CAEtC,EAAEA,EAAQ,GAAQ,CACvB,IAAI,EAAQ,CAAK,CAACA,EAAM,CACxB,EAAO,EAAa,EAAO,EAAS,GAAQ,EAC9C,CACA,OAAO,CACT,ECCA,GAPA,SAAwB,CAAU,CAAE,CAAM,CAAE,CAAQ,CAAE,CAAW,EAI/D,MAHA,SAAS,EAAY,SAAS,CAAK,CAAE,CAAG,CAAE,CAAU,EAClD,EAAO,EAAa,EAAO,EAAS,GAAQ,EAC9C,GACO,CACT,ECXA,IAAI,GAAiB,AAHHP,OAAO,SAAS,CAGD,cAAc,CAyB3C,I5CnBsB,E4CmBK,SAAS,CAAM,CAAE,CAAK,CAAE,CAAG,EACpD,GAAe,IAAI,CAAC,EAAQ,GAC9B,CAAM,CAAC,EAAI,CAAC,IAAI,CAAC,GAEjB,SAAgB,EAAQ,EAAK,CAAC,EAAM,CAExC,E5CxBS,SAAS,CAAU,CAAE,CAAQ,EAIlC,MAAO,AAHI,UAAQ,GAAc,GAAkB,IAGvC,EAAY,EAAQ,GAAAiB,EAAA,GAAa,EAAU,GAFP,CAAC,EAGnD,G6CmBF,OAVA,SAAmB,CAAK,CAAE,CAAC,CAAE,CAAK,EAChC,IAAI,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,QAC7C,AAAK,EAKE,EAAU,EAAO,EAAG,AAD3B,GAAI,EADJ,GAAI,AAAC,GAAS,AAAM,SAAN,EAAmB,EAAI,QAAU,EAAC,CACnC,EACkB,EAAI,EAAI,GAJ9B,EAAE,AAKb,CChCO,OAAM,WAAyC,GAClD,YAAY,CAAO,CAAE,CAAI,CAAE,CACvB,KAAK,GACL,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAAC,kBAAkB,CAAG,GAC1B,IAAI,CAAC,wBAAwB,CAAG,EAChC,IAAI,CAAC,KAAK,CAAG,GACb,IAAI,CAAC,aAAa,CAAG,EACzB,CACA,cAAe,CAEX,GADA,IAAI,CAAC,KAAK,CAAG,GACT,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAC5C,MAAMf,MAAM,uDAUhB,OAPA,IAAI,CAAC,SAAS,CAAG,QAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,GACnD,IAAI,CAAC,eAAe,CAAG,QAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,GAE/D,IAAI,CAAC,SAAS,CAAC,GAAG,GAClB,IAAI,CAAC,eAAe,CAAC,GAAG,GACxB,IAAI,CAAC,kBAAkB,GACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EACf,IAAI,CAAC,gBAAgB,AAChC,CACA,KAAK,CAAI,CAAE,EAAW,EAAE,CAAE,CAElB,AAAC,IAAI,CAAC,KAAK,EACX,KAAK,CAAC,KAAK,EAAM,EAEzB,CACA,YAAY,CAAO,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAErC,GAAI,EAAQ,cAAc,CAAC,IAAI,GAAK,IAAI,CAAC,kBAAkB,EACvD,EAAQ,GAAG,GAAK,IAAI,CAAC,wBAAwB,CAAE,CAC/C,IAAM,EAAW,EAAS,MAAM,CAAC,GACjC,IAAI,CAAC,kBAAkB,GACvB,IAAI,CAAC,IAAI,CAAC,EAAQ,cAAc,CAAE,EACtC,CACJ,CACA,oBAAqB,CAEb,QAAQ,IAAI,CAAC,SAAS,GAGtB,IAAI,CAAC,kBAAkB,CAAG,GAC1B,IAAI,CAAC,wBAAwB,CAAG,EAChC,IAAI,CAAC,aAAa,CAAG,KAGrB,IAAI,CAAC,kBAAkB,CAAG,IAAI,CAAC,SAAS,CAAC,GAAG,GAC5C,IAAI,CAAC,wBAAwB,CAAG,IAAI,CAAC,eAAe,CAAC,GAAG,GAEhE,CACJ,CACO,MAAM,WAA6B,GACtC,YAAY,CAAO,CAAE,CAAI,CAAE,CACvB,KAAK,CAAC,EAAS,GACf,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,gBAAgB,CAAG,GACxB,IAAI,CAAC,sBAAsB,CAAG,EAC9B,IAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAC9C,IAAI,CAAC,sBAAsB,CAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,AAC7D,CACA,aAAa,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACvC,GAAI,IAAI,CAAC,aAAa,EAClB,EAAS,YAAY,CAAC,IAAI,GAAK,IAAI,CAAC,gBAAgB,EACpD,EAAS,GAAG,GAAK,IAAI,CAAC,sBAAsB,EAC5C,CAAC,IAAI,CAAC,KAAK,CAAE,CAEb,IAAM,EAAW,IAAI,EAAY,CAAE,WADlB,EAAS,MAAM,CAAC,EACuB,EACxD,KAAI,CAAC,gBAAgB,CAAG,GAAM,GAC9B,IAAI,CAAC,KAAK,CAAG,EACjB,CACJ,CACJ,CAKO,MAAM,WAAkD,GAC3D,YAAY,CAAO,CAAE,CAAU,CAAE,CAC7B,KAAK,GACL,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,MAAM,CAAG,CACV,MAAO,OACP,WAAY,OACZ,YAAa,MACjB,CACJ,CACA,cAAe,CAEX,OADA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EACf,IAAI,CAAC,MAAM,AACtB,CACJ,CACO,MAAM,WAAoC,GAC7C,SAAS,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACnC,GAAI,EAAS,GAAG,GAAK,IAAI,CAAC,UAAU,CAAE,CAClC,IAAM,EAAiB,GAAO,EAAS,MAAM,CAAC,GAC9C,KAAI,CAAC,MAAM,CAAC,WAAW,CAAG,AAAmB,SAAnB,EACtB,aAA0B,IAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAG,EAAe,YAAY,CAC/C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAG,EAAe,GAAG,CAEnD,MAEI,KAAK,CAAC,SAAS,EAAU,EAAU,EAE3C,CACJ,CACO,MAAM,WAAuC,GAChD,YAAY,CAAW,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACzC,GAAI,EAAY,GAAG,GAAK,IAAI,CAAC,UAAU,CAAE,CACrC,IAAM,EAAoB,GAAO,EAAS,MAAM,CAAC,GACjD,KAAI,CAAC,MAAM,CAAC,WAAW,CAAG,AAAsB,SAAtB,EACtB,aAA6B,IAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAG,EAAkB,YAAY,CAClD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAG,EAAkB,GAAG,CAEtD,MAEI,KAAK,CAAC,YAAY,EAAa,EAAU,EAEjD,CACJ,CACO,MAAM,WAA0C,GACnD,eAAe,CAAc,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAC/C,GAAI,EAAe,GAAG,GAAK,IAAI,CAAC,UAAU,CAAE,CACxC,IAAM,EAAuB,GAAO,EAAS,MAAM,CAAC,GACpD,KAAI,CAAC,MAAM,CAAC,WAAW,CAAG,AAAyB,SAAzB,EACtB,aAAgC,IAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAG,EAAqB,YAAY,CACrD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAG,EAAqB,GAAG,CAEzD,MAEI,KAAK,CAAC,eAAe,EAAgB,EAAU,EAEvD,CACJ,CAEO,MAAM,WAA6C,GACtD,kBAAkB,CAAiB,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACrD,GAAI,EAAkB,GAAG,GAAK,IAAI,CAAC,UAAU,CAAE,CAC3C,IAAM,EAAoC,GAAO,EAAS,MAAM,CAAC,GACjE,KAAI,CAAC,MAAM,CAAC,WAAW,CAAG,AAAsC,SAAtC,EACtB,aAA6C,IAC7C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAG,EAAkC,YAAY,CAClE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAG,EAAkC,GAAG,CAEtE,MAEI,KAAK,CAAC,kBAAkB,EAAmB,EAAU,EAE7D,CACJ,CACO,SAAS,GAAkB,CAAS,CAAE,CAAS,CAAE,EAAW,EAAE,EAEjE,EAAW,QAAM,GACjB,IAAI,EAAS,EAAE,CACXK,EAAI,EAMR,SAAS,EAAuB,CAAU,EACtC,IAAM,EAAe,GAJd,AAIkD,EAJ1C,MAAM,CAAC,EAAK,EAAWA,EAAI,IAI4B,EAAW,GACjF,OAAO,EAAO,MAAM,CAAC,EACzB,CAQA,KAAO,EAAS,MAAM,CAAG,GAAaA,EAAI,EAAU,MAAM,EAAE,CACxD,IAAM,EAAO,CAAS,CAACA,EAAE,CAEzB,GAAI,aAAgB,EAChB,OAAO,EAAuB,EAAK,UAAU,EAE5C,GAAI,aAAgB,EACrB,OAAO,EAAuB,EAAK,UAAU,EAE5C,GAAI,aAAgB,EACrB,EAAS,EAAuB,EAAK,UAAU,OAE9C,GAAI,aAAgB,EAMrB,OAAO,EALQ,EAAK,UAAU,CAAC,MAAM,CAAC,CAClC,IAAI,EAAW,CACX,WAAY,EAAK,UAAU,AAC/B,GACH,QAGA,GAAI,aAAgB,EAOrB,OAAO,EANQ,CACX,IAAI,EAAY,CAAE,WAAY,EAAK,UAAU,AAAC,GAC9C,IAAI,EAAW,CACX,WAAY,CAAC,IAAI,EAAS,CAAE,aAAc,EAAK,SAAS,AAAC,GAAG,CAAC,MAAM,CAAC,EAAK,UAAU,CACvF,GACH,OAGA,GAAI,aAAgB,EAMrB,EAAS,EALM,EAAK,UAAU,CAAC,MAAM,CAAC,CAClC,IAAI,EAAW,CACX,WAAY,CAAC,IAAI,EAAS,CAAE,aAAc,EAAK,SAAS,AAAC,GAAG,CAAC,MAAM,CAAC,EAAK,UAAU,CACvF,GACH,QAGA,GAAI,aAAgB,EAMrB,EAAS,EALM,EAAK,UAAU,CAAC,MAAM,CAAC,CAClC,IAAI,EAAW,CACX,WAAY,EAAK,UAAU,AAC/B,GACH,QAGA,GAAI,aAAgB,EASrB,MARA,QAAQ,EAAK,UAAU,CAAE,AAAC,IAIlB,AAAgC,KAAhC,QAAQ,EAAQ,UAAU,GAC1B,GAAS,EAAuB,EAAQ,UAAU,EAE1D,GACO,OAEN,GAAI,aAAgB,EACrB,EAAS,IAAI,CAAC,EAAK,YAAY,OAG/B,MAAML,MAAM,uBAEhBK,CAAAA,GACJ,CAKA,OAJA,EAAO,IAAI,CAAC,CACR,YAAa,EACb,UAAW,EAAK,EAAWA,EAC/B,GACO,CACX,CACO,SAAS,GAAwB,CAAU,CAAEH,CAAW,CAAE,CAAU,CAAE,CAAY,EACrF,IAAM,EAAoB,qBAEpB,EAAwB,CAAC,EAAkB,CAC3C,EAAmB,mBACrB,EAAoB,GAClB,EAAoBA,EAAY,MAAM,CACtC,EAA2B,EAAoB,EAAe,EAC9D,EAAS,EAAE,CACX,EAAgB,EAAE,CAOxB,IANA,EAAc,IAAI,CAAC,CACf,IAAK,GACL,IAAK,EACL,UAAW,EAAE,CACb,gBAAiB,EAAE,AACvB,GACO,CAAC,QAAQ,IAAgB,CAC5B,IAAM,EAAW,EAAc,GAAG,GAElC,GAAI,IAAa,EAAkB,CAC3B,GACA,SAAK,GAAe,GAAG,EAAI,GAE3B,EAAc,GAAG,GAErB,QACJ,CACA,IAAM,EAAU,EAAS,GAAG,CACtB,EAAU,EAAS,GAAG,CACtB,EAAgB,EAAS,SAAS,CAClC,EAAsB,EAAS,eAAe,CAEpD,GAAI,QAAQ,GACR,SAEJ,IAAM,EAAO,CAAO,CAAC,EAAE,CAEvB,GAAI,IAAS,EAAmB,CAC5B,IAAM,EAAW,CACb,IAAK,EACL,IAAK,EAAK,GACV,UAAW,GAAU,GACrB,gBAAiB,GAAU,EAC/B,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAErB,GAAI,EAAU,EAAoB,EAAG,CACjC,IAAM,EAAU,EAAU,EAE1B,GAAI,EADgBA,CAAW,CAAC,EAAQ,CACZ,EAAK,YAAY,EAAG,CAC5C,IAAM,EAAW,CACb,IAAK,EACL,IAAK,EAAK,GACV,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,CAEJ,MACK,GAAI,IAAY,EAAoB,EAErC,EAAO,IAAI,CAAC,CACR,cAAe,EAAK,YAAY,CAChC,oBAAqB,EAAK,GAAG,CAC7B,UAAW,EACX,gBAAiB,CACrB,GACA,EAAoB,QAGpB,MAAMF,MAAM,6BAGf,GAAI,aAAgB,EAAa,CAClC,IAAM,EAAe,QAAM,GAC3B,EAAa,IAAI,CAAC,EAAK,eAAe,EACtC,IAAM,EAAqB,QAAM,GACjC,EAAmB,IAAI,CAAC,EAAK,GAAG,EAChC,IAAM,EAAW,CACb,IAAK,EACL,IAAK,EAAK,UAAU,CAAC,MAAM,CAAC,EAAuB,EAAK,IACxD,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAAQ,CAE7B,IAAM,EAAkB,CACpB,IAAK,EACL,IAAK,EAAK,GACV,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,GAEnB,EAAc,IAAI,CAAC,GACnB,IAAM,EAAe,CACjB,IAAK,EACL,IAAK,EAAK,UAAU,CAAC,MAAM,CAAC,EAAK,IACjC,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAAqB,CAE1C,IAAM,EAAkB,IAAI,EAAW,CACnC,WAAY,EAAK,UAAU,CAC3B,IAAK,EAAK,GAAG,AACjB,GAEM,EAAW,CACb,IAAK,EACL,IAHY,EAAK,UAAU,CAAC,MAAM,CAAC,CAAC,EAAgB,CAAE,EAAK,IAI3D,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAAkC,CAKvD,IAAM,EAAkB,IAAI,EAAW,CACnC,WAAY,CAJM,IAAI,EAAS,CAC/B,aAAc,EAAK,SAAS,AAChC,GAE+B,CAAC,MAAM,CAAC,EAAK,UAAU,EAClD,IAAK,EAAK,GAAG,AACjB,GAEM,EAAW,CACb,IAAK,EACL,IAHY,EAAK,UAAU,CAAC,MAAM,CAAC,CAAC,EAAgB,CAAE,EAAK,IAI3D,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAAyB,CAE9C,IAAM,EAAkB,CACpB,IAAK,EACL,IAAK,EAAK,GACV,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,GAEnB,EAAc,IAAI,CAAC,GAInB,IAAM,EAAgB,IAAI,EAAW,CACjC,WAAY,CAJM,IAAI,EAAS,CAC/B,aAAc,EAAK,SAAS,AAChC,GAE+B,CAAC,MAAM,CAAC,EAAK,UAAU,EAClD,IAAK,EAAK,GAAG,AACjB,GAEM,EAAe,CACjB,IAAK,EACL,IAHY,EAAK,UAAU,CAAC,MAAM,CAAC,CAAC,EAAc,CAAE,EAAK,IAIzD,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAAY,CAEjC,IAAM,EAAkB,CACpB,IAAK,EACL,IAAK,EAAK,GACV,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,GAEnB,EAAc,IAAI,CAAC,GAEnB,IAAM,EAAgB,IAAI,EAAW,CACjC,WAAY,EAAK,UAAU,CAC3B,IAAK,EAAK,GAAG,AACjB,GAEM,EAAe,CACjB,IAAK,EACL,IAHY,EAAK,UAAU,CAAC,MAAM,CAAC,CAAC,EAAc,CAAE,EAAK,IAIzD,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,EACvB,MACK,GAAI,aAAgB,EAErB,IAAK,IAAI,EAAI,EAAK,UAAU,CAAC,MAAM,CAAG,EAAG,GAAK,EAAG,IAAK,CAElD,IAAM,EAAc,CAChB,IAAK,EACL,IAAK,AAHO,EAAK,UAAU,CAAC,EAAE,CAGjB,UAAU,CAAC,MAAM,CAAC,EAAK,IACpC,UAAW,EACX,gBAAiB,CACrB,EACA,EAAc,IAAI,CAAC,GACnB,EAAc,IAAI,CAAC,EACvB,MAEC,GAAI,aAAgB,EACrB,EAAc,IAAI,CAAC,CACf,IAAK,EACL,IAAK,EAAK,UAAU,CAAC,MAAM,CAAC,EAAK,IACjC,UAAW,EACX,gBAAiB,CACrB,QAEC,GAAI,aAAgB,EAErB,EAAc,IAAI,CAAC,AAQ/B,SAA4B,CAAO,CAAE,CAAO,CAAE,CAAa,CAAE,CAAmB,EAC5E,IAAM,EAAe,QAAM,GAC3B,EAAa,IAAI,CAAC,EAAQ,IAAI,EAC9B,IAAM,EAAyB,QAAM,GAGrC,OADA,EAAuB,IAAI,CAAC,GACrB,CACH,IAAK,EACL,IAAK,EAAQ,UAAU,CACvB,UAAW,EACX,gBAAiB,CACrB,CACJ,EApBkD,EAAM,EAAS,EAAe,SAGpE,MAAMA,MAAM,uBAEpB,CACA,OAAO,CACX,C7C/cO,SAAS,GAAY,CAAI,EAE5B,GAAI,aAAgB,GAAU,AAAS,WAAT,EAC1B,OAAO,EAAU,MAAM,CAEtB,GAAI,aAAgB,GAAc,AAAS,eAAT,EACnC,OAAO,EAAU,UAAU,CAE1B,GAAI,aAAgB,GACrB,AAAS,wBAAT,EACA,OAAO,EAAU,oBAAoB,CAEpC,GAAI,aAAgB,GACrB,AAAS,qCAAT,EACA,OAAO,EAAU,mCAAmC,CAEnD,GAAI,aAAgB,GACrB,AAAS,4BAAT,EACA,OAAO,EAAU,yBAAyB,MAEzC,GAAI,aAAgB,GAAe,AAAS,gBAAT,EACpC,OAAO,EAAU,WAAW,MAG5B,MAAMA,MAAM,uBAEpB,CACO,SAAS,GAAkB,CAAO,EACrC,GAAM,CAAE,YAAU,CAAEH,KAAAA,CAAI,CAAE,UAAQ,CAAE,cAAY,CAAE,CAAG,EAC/C,EAAO,GAAY,UACzB,AAAI,IAAS,EAAU,WAAW,CACvB,GAAuB,EAAYA,EAAM,GAGzC,GAAiC,EAAYA,EAAM,EAAM,EAExE,CA2BO,SAAS,GAA+B,CAAI,CAAE,CAAa,CAAE,CAAY,CAAE,CAAoB,EAClG,IAAM,EAAY,EAAK,MAAM,CACvBS,EAA0B,GAAM,EAAM,AAAC,GAClC,GAAM,EAAS,AAAC,GACZ,AAAoB,IAApB,EAAS,MAAM,GAI9B,GAAI,EAIA,OAAO,SAAU,CAAM,EAInB,IAAM,EAAa,GAAAW,EAAA,GAAI,EAAQ,AAAC,GAAY,EAAQ,IAAI,EACxD,IAAK,IAAIf,EAAI,EAAGA,EAAI,EAAWA,IAAK,CAChC,IAAM,EAAU,CAAI,CAACA,EAAE,CACjB,EAAiB,EAAQ,MAAM,CAC/B,EAAgB,CAAU,CAACA,EAAE,CACnC,GAAI,AAAkB,SAAlB,GAA+B,AAA6B,KAA7B,EAAc,IAAI,CAAC,IAAI,EAI1D,EAAU,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,IAAK,CAC/C,IAAM,EAAW,CAAO,CAAC,EAAE,CACrB,EAAiB,EAAS,MAAM,CACtC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,IAEhC,GAAI,AAAyC,KAAzC,EADc,IAAI,CAAC,EAAE,CAAC,EAAI,GACF,CAAQ,CAAC,EAAE,EAGnC,SAAS,EAKjB,OAAOA,CACX,CAGJ,CAGJ,EAEC,GAAII,CAAAA,GAA4B,EAiCjC,OAAO,WACH,IAAK,IAAIJ,EAAI,EAAGA,EAAI,EAAWA,IAAK,CAChC,IAAM,EAAU,CAAI,CAACA,EAAE,CACjB,EAAiB,EAAQ,MAAM,CACrC,EAAU,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,IAAK,CAC/C,IAAM,EAAW,CAAO,CAAC,EAAE,CACrB,EAAiB,EAAS,MAAM,CACtC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,IAEhC,GAAI,AAAyC,KAAzC,EADc,IAAI,CAAC,EAAE,CAAC,EAAI,GACF,CAAQ,CAAC,EAAE,EAGnC,SAAS,EAKjB,OAAOA,CACX,CAGJ,CAGJ,CAzDuD,EAGvD,IAAM,EAAkB,GAAAe,EAAA,GAAI,EAAM,AAAC,GACxB,SAAQ,IAEb,EAAc,SAAO,EAAiB,CAAC,EAAQ,EAAS,KAC1D,QAAQ,EAAS,AAAC,IACV,AAAC,QAAI,EAAQ,EAAY,YAAY,GACrC,EAAM,CAAC,EAAY,YAAY,CAAC,CAAG,CAAE,EAEzC,QAAQ,EAAY,eAAe,CAAE,AAAC,IAC9B,AAAC,QAAI,EAAQ,IACb,EAAM,CAAC,EAAkB,CAAG,CAAE,CAEtC,EACJ,GACO,GACR,CAAC,GAIJ,OAAO,WAEH,OAAO,CAAW,CAAC,AADD,IAAI,CAAC,EAAE,CAAC,GACG,YAAY,CAAC,AAC9C,CACJ,CAiCJ,CACO,SAAS,GAAwC,CAAG,CAAEf,CAAY,CAAE,CAAoB,EAC3F,IAAM,EAA0B,GAAM,EAAK,AAAC,GACjC,AAAoB,IAApB,EAAS,MAAM,EAEpB,EAAa,EAAI,MAAM,CAG7B,GAAI,IAA4B,EAyB5B,OAAO,WACH,EAAU,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,IAAK,CAC3C,IAAM,EAAW,CAAG,CAAC,EAAE,CACjB,EAAiB,EAAS,MAAM,CACtC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,IAEhC,GAAIA,AAAyC,KAAzCA,EADc,IAAI,CAAC,EAAE,CAAC,EAAI,GACF,CAAQ,CAAC,EAAE,EAGnC,SAAS,EAIjB,MAAO,EACX,CAEA,MAAO,EACX,CA1CkD,EAClD,IAAM,EAAoB,SAAQ,GAClC,GAAI,AAA6B,IAA7B,EAAkB,MAAM,EACxB,QAAQ,CAAiB,CAAC,EAAE,CAAC,eAAe,EAAG,CAE/C,IAAMD,EAAyB,AADL,CAAiB,CAAC,EAAE,CACG,YAAY,CAC7D,OAAO,WACH,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,YAAY,GAAKA,CACvC,CACJ,CACK,CACD,IAAM,EAAc,SAAO,EAAmB,CAAC,EAAQ,EAAa,KAChE,CAAM,CAAC,EAAY,YAAY,CAAC,CAAG,GACnC,QAAQ,EAAY,eAAe,CAAE,AAAC,IAClC,CAAM,CAAC,EAAkB,CAAG,EAChC,GACO,GACR,EAAE,EACL,OAAO,WAEH,MAAO,AAAwC,KAAxC,CAAW,CAAC,AADD,IAAI,CAAC,EAAE,CAAC,GACG,YAAY,CAAC,AAC9C,CACJ,CACJ,CAqBJ,CApOI,CADO,EAOR,GAAc,GAAY,CAAC,GANjB,CAAC,EAAU,MAAS,CAAG,EAAE,CAAG,SACrC,CAAS,CAAC,EAAU,UAAa,CAAG,EAAE,CAAG,aACzC,CAAS,CAAC,EAAU,oBAAuB,CAAG,EAAE,CAAG,uBACnD,CAAS,CAAC,EAAU,mCAAsC,CAAG,EAAE,CAAG,sCAClE,CAAS,CAAC,EAAU,yBAA4B,CAAG,EAAE,CAAG,4BACxD,CAAS,CAAC,EAAU,WAAc,CAAG,EAAE,CAAG,aAgO9C,OAAM,WAAmC,GACrC,YAAY,CAAO,CAAEC,CAAgB,CAAE,CAAc,CAAE,CACnD,KAAK,GACL,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,gBAAgB,CAAGA,EACxB,IAAI,CAAC,cAAc,CAAG,CAC1B,CACA,cAAe,CAEX,OADA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EACf,IAAI,CAAC,OAAO,AACvB,CACA,cAAc,CAAI,CAAE,CAAgB,CAAE,CAAQ,CAAE,CAAQ,CAAE,QACtD,AAAI,EAAK,GAAG,GAAK,IAAI,CAAC,gBAAgB,EAClC,IAAI,CAAC,cAAc,GAAK,IACxB,IAAI,CAAC,OAAO,CAAG,EAAS,MAAM,CAAC,GACxB,GAIf,CACA,WAAW,CAAU,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACnC,AAAC,IAAI,CAAC,aAAa,CAAC,EAAY,EAAU,MAAM,CAAE,EAAU,IAC5D,KAAK,CAAC,WAAW,EAAY,EAAU,EAE/C,CACA,eAAe,CAAc,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAC3C,AAAC,IAAI,CAAC,aAAa,CAAC,EAAgB,EAAU,oBAAoB,CAAE,EAAU,IAC9E,KAAK,CAAC,WAAW,EAAgB,EAAU,EAEnD,CACA,kBAAkB,CAAiB,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACjD,AAAC,IAAI,CAAC,aAAa,CAAC,EAAmB,EAAU,mCAAmC,CAAE,EAAU,IAChG,KAAK,CAAC,WAAW,EAAmB,EAAU,EAEtD,CACA,SAAS,CAAQ,CAAE,CAAQ,CAAE,CAAQ,CAAE,CAC/B,AAAC,IAAI,CAAC,aAAa,CAAC,EAAU,EAAU,UAAU,CAAE,EAAU,IAC9D,KAAK,CAAC,WAAW,EAAU,EAAU,EAE7C,CACA,YAAY,CAAW,CAAE,CAAQ,CAAE,CAAQ,CAAE,CACrC,AAAC,IAAI,CAAC,aAAa,CAAC,EAAa,EAAU,yBAAyB,CAAE,EAAU,IAChF,KAAK,CAAC,WAAW,EAAa,EAAU,EAEhD,CACJ,CAIA,MAAM,WAAsC,EACxC,YAAY,CAAgB,CAAEA,CAAc,CAAE,CAAS,CAAE,CACrD,KAAK,GACL,IAAI,CAAC,gBAAgB,CAAG,EACxB,IAAI,CAAC,cAAc,CAAGA,EACtB,IAAI,CAAC,SAAS,CAAG,EACjB,IAAI,CAAC,MAAM,CAAG,EAAE,AACpB,CACA,cAAc,CAAI,CAAE,CAAgB,CAAE,CAC9B,EAAK,GAAG,GAAK,IAAI,CAAC,gBAAgB,EAClC,IAAI,CAAC,cAAc,GAAK,GACvB,CAAmB,SAAnB,IAAI,CAAC,SAAS,EAAkB,IAAS,IAAI,CAAC,SAAS,AAAD,GACvD,KAAI,CAAC,MAAM,CAAG,EAAK,UAAU,AAAD,CAEpC,CACA,YAAY,CAAI,CAAE,CACd,IAAI,CAAC,aAAa,CAAC,EAAM,EAAU,MAAM,CAC7C,CACA,gBAAgB,CAAI,CAAE,CAClB,IAAI,CAAC,aAAa,CAAC,EAAM,EAAU,UAAU,CACjD,CACA,yBAAyB,CAAI,CAAE,CAC3B,IAAI,CAAC,aAAa,CAAC,EAAM,EAAU,oBAAoB,CAC3D,CACA,sCAAsC,CAAI,CAAE,CACxC,IAAI,CAAC,aAAa,CAAC,EAAM,EAAU,mCAAmC,CAC1E,CACA,6BAA6B,CAAI,CAAE,CAC/B,IAAI,CAAC,aAAa,CAAC,EAAM,EAAU,yBAAyB,CAChE,CACA,iBAAiB,CAAI,CAAE,CACnB,IAAI,CAAC,aAAa,CAAC,EAAM,EAAU,WAAW,CAClD,CACJ,CACA,SAAS,GAAwB,CAAI,EACjC,IAAM,EAAS,AAAIH,MAAM,GACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,IACtB,CAAM,CAAC,EAAE,CAAG,EAAE,CAElB,OAAO,CACX,CAMA,SAAS,GAAe,CAAI,EACxB,IAAI,EAAO,CAAC,GAAG,CACf,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CAClC,IAAM,EAAU,CAAI,CAAC,EAAE,CACjB,EAAa,EAAE,CACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CAClC,IAAM,EAAiB,CAAI,CAAC,EAAE,CAC9B,EAAW,IAAI,CAAC,EAAiB,IAAM,EAAQ,YAAY,EAC3D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,eAAe,CAAC,MAAM,CAAE,IAAK,CACrD,IAAM,EAAsB,IAAM,EAAQ,eAAe,CAAC,EAAE,CAC5D,EAAW,IAAI,CAAC,EAAiB,EACrC,CACJ,CACA,EAAO,CACX,CACA,OAAO,CACX,CAqBO,SAAS,GAAkC,CAAQ,CAAE,CAAC,EACzD,IAAM,EAAc,GAAAkB,EAAA,GAAI,EAAU,AAAC,GAAY,GAAkB,CAAC,EAAQ,CAAE,IACtE,EAAc,GAAwB,EAAY,MAAM,EACxD,EAAa,GAAAA,EAAA,GAAI,EAAa,AAAC,IACjC,IAAM,EAAO,CAAC,EAOd,MANA,QAAQ,EAAc,AAAC,IACnB,IAAM,EAAO,GAAe,EAAK,WAAW,EAC5C,QAAQ,EAAM,AAAC,IACX,CAAI,CAAC,EAAQ,CAAG,EACpB,EACJ,GACO,CACX,GACI,EAAU,EAEd,IAAK,IAAI,EAAa,EAAG,GAAc,EAAG,IAAc,CACpD,IAAM,EAAc,EACpB,EAAU,GAAwB,EAAY,MAAM,EAEpD,IAAK,IAAI,EAAS,EAAG,EAAS,EAAY,MAAM,CAAE,IAAU,CACxD,IAAM,EAA0B,CAAW,CAAC,EAAO,CAEnD,IAAK,IAAI,EAAc,EAAG,EAAc,EAAwB,MAAM,CAAE,IAAe,CACnF,IAAM,EAAiB,CAAuB,CAAC,EAAY,CAAC,WAAW,CACjE,EAAY,CAAuB,CAAC,EAAY,CAAC,SAAS,CAC1D,EAAa,GAAe,GAGlC,GAAI,AAFa,AA3CjC,SAA4B,CAAiB,CAAE,CAAc,CAAE,CAAG,EAC9D,IAAK,IAAI,EAAa,EAAG,EAAa,EAAkB,MAAM,CAAE,IAAc,CAE1E,GAAI,IAAe,EACf,SAEJ,IAAM,EAAyB,CAAiB,CAAC,EAAW,CAC5D,IAAK,IAAI,EAAY,EAAG,EAAY,EAAe,MAAM,CAAE,IAEvD,GAAI,AAAsC,KAAtC,CAAsB,CADR,CAAc,CAAC,EAAU,CACN,CACjC,MAAO,EAGnB,CAEA,MAAO,EACX,EA2BoD,EAAY,EAAY,IAE5C,QAAQ,IAAc,EAAe,MAAM,GAAK,EAAG,CAC/D,IAAM,EAAgB,CAAW,CAAC,EAAO,CAEzC,GAAI,AAAgD,KAAhD,GAAa,EAAe,GAA2B,CACvD,EAAc,IAAI,CAAC,GAEnB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IAAK,CACxC,IAAM,EAAU,CAAU,CAAC,EAAE,AAC7B,EAAU,CAAC,EAAO,CAAC,EAAQ,CAAG,EAClC,CACJ,CACJ,KAEK,CACD,IAAM,EAA6B,GAAkB,EAAW,EAAa,EAAG,EAChF,EAAO,CAAC,EAAO,CAAG,CAAO,CAAC,EAAO,CAAC,MAAM,CAAC,GAEzC,QAAQ,EAA4B,AAAC,IACjC,IAAM,EAAa,GAAe,EAAK,WAAW,EAClD,QAAQ,EAAY,AAAC,IACjB,CAAU,CAAC,EAAO,CAAC,EAAI,CAAG,EAC9B,EACJ,EACJ,CACJ,CACJ,CACJ,CACA,OAAO,CACX,CACO,SAAS,GAAuB,CAAU,CAAE,CAAW,CAAE,CAAC,CAAE,CAAM,EACrE,IAAM,EAAU,IAAI,GAA8B,EAAY,EAAU,WAAW,CAAE,GAErF,OADA,EAAY,MAAM,CAAC,GACZ,GAAkC,EAAQ,MAAM,CAAE,EAC7D,CACO,SAAS,GAAiC,CAAU,CAAE,CAAW,CAAE,CAAQ,CAAE,CAAC,EACjF,IAAMZ,EAAmB,IAAI,GAA8B,EAAY,GACvE,EAAY,MAAM,CAACA,GACnB,IAAM,EAAYA,EAAiB,MAAM,CAEnC,EAAW,AADM,IAAI,GAA2B,EAAa,EAAY,GAC/C,YAAY,GAG5C,OAAO,GAAkC,CAFtB,IAAI,EAAgB,CAAE,WAAY,CAAU,GAC7C,IAAI,EAAgB,CAAE,WAAY,CAAS,GACG,CAAE,EACtE,CACO,SAAS,GAAa,CAAW,CAAE,CAAU,EAChD,EAAkB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,MAAM,CAAE,IAAK,CAC3D,IAAM,EAAY,CAAW,CAAC,EAAE,CAChC,GAAI,EAAU,MAAM,GAAK,EAAW,MAAM,EAG1C,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IAAK,CACvC,IAAM,EAAY,CAAU,CAAC,EAAE,CACzB,EAAW,CAAS,CAAC,EAAE,CAG7B,GAAI,AAAmB,IAFA,KAAc,GACjC,AAAwD,SAAxD,EAAS,kBAAkB,CAAC,EAAU,YAAY,CAAC,AAAa,EAEhE,SAAS,CAEjB,CACA,MAAO,GACX,CACA,MAAO,EACX,CASO,SAAS,GAA0B,CAAc,EACpD,OAAO,GAAM,EAAgB,AAAC,GAAmB,GAAM,EAAgB,AAAC,GAAe,GAAM,EAAY,AAAC,GAAU,QAAQ,EAAM,eAAe,IACrJ,C8CraO,SAAS,GAAgC,CAAI,EAChD,MAAO,CAAC,EAAE,GAAqB,GAAM,GAAG,EAAE,EAAK,GAAG,CAAC,GAAG,EAAE,GAA2B,GAAM,CAAC,AAC9F,CACA,SAAS,GAA2B,CAAI,SACpC,AAAI,aAAgB,EACT,EAAK,YAAY,CAAC,IAAI,CAExB,aAAgB,EACd,EAAK,eAAe,CAGpB,EAEf,CACO,MAAM,WAAsC,EAC/C,aAAc,CACV,KAAK,IAAIc,WACT,IAAI,CAAC,cAAc,CAAG,EAAE,AAC5B,CACA,iBAAiB,CAAO,CAAE,CACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,YAAY,CAAM,CAAE,CAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,6BAA6B,CAAO,CAAE,CAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,yBAAyB,CAAU,CAAE,CACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,sCAAsC,CAAa,CAAE,CACjD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,gBAAgB,CAAI,CAAE,CAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,iBAAiB,CAAE,CAAE,CACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,cAAc,CAAQ,CAAE,CACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACJ,CA4GA,MAAM,WAAoB,EACtB,aAAc,CACV,KAAK,IAAIA,WACT,IAAI,CAAC,YAAY,CAAG,EAAE,AAC1B,CACA,iBAAiB,CAAI,CAAE,CACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAC3B,CACJ,CAgDO,MAAM,WAA4B,EACrC,aAAc,CACV,KAAK,IAAIA,WACT,IAAI,CAAC,cAAc,CAAG,EAAE,AAC5B,CACA,6BAA6B,CAAO,CAAE,CAClC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,yBAAyB,CAAU,CAAE,CACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,sCAAsC,CAAa,CAAE,CACjD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACA,gBAAgB,CAAI,CAAE,CAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAC7B,CACJ,CC/QA,IAAM,GAA6B,2BAC7B,GAA0B,uBAC1B,GAAuB,qBACvB,GAAiC,6BACjC,GAA8B,CAChC,GACA,GACA,GACA,GACH,CAGM,SAAS,GAAuBlB,CAAK,EAExC,OAAO,GAAS,GAA6BA,EAAM,IAAI,CAC3D,CALAH,OAAO,MAAM,CAAC,GAMd,OAAM,WAA6BE,MAC/B,YAAY,CAAO,CAAEE,CAAK,CAAE,CACxB,KAAK,CAAC,GACN,IAAI,CAAC,KAAK,CAAGA,EACb,IAAI,CAAC,cAAc,CAAG,EAAE,CAExBJ,OAAO,cAAc,CAAC,IAAI,CAAE,WAAW,SAAS,EAE5CE,MAAM,iBAAiB,EACvBA,MAAM,iBAAiB,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAEtD,CACJ,CACO,MAAM,WAAiC,GAC1C,YAAY,CAAO,CAAEE,CAAK,CAAE,CAAa,CAAE,CACvC,KAAK,CAAC,EAASA,GACf,IAAI,CAAC,aAAa,CAAG,EACrB,IAAI,CAAC,IAAI,CAAG,EAChB,CACJ,CACO,MAAM,WAA6B,GACtC,YAAY,CAAO,CAAEA,CAAK,CAAE,CAAa,CAAE,CACvC,KAAK,CAAC,EAASA,GACf,IAAI,CAAC,aAAa,CAAG,EACrB,IAAI,CAAC,IAAI,CAAG,EAChB,CACJ,CACO,MAAM,WAAmC,GAC5C,YAAY,CAAO,CAAEA,CAAK,CAAE,CACxB,KAAK,CAAC,EAASA,GACf,IAAI,CAAC,IAAI,CAAG,EAChB,CACJ,CACO,MAAM,WAA2B,GACpC,YAAY,CAAO,CAAEA,CAAK,CAAE,CAAa,CAAE,CACvC,KAAK,CAAC,EAASA,GACf,IAAI,CAAC,aAAa,CAAG,EACrB,IAAI,CAAC,IAAI,CAAG,EAChB,CACJ,CCnDO,IAAM,GAAiB,CAAC,EAClB,GAA6B,yBACnC,OAAM,WAAgCF,MACzC,YAAY,CAAO,CAAE,CACjB,KAAK,CAAC,GACN,IAAI,CAAC,IAAI,CAAG,EAChB,CACJ,CAoPO,SAAS,GAA4B,CAAQ,CAAE,CAAI,CAAE,CAAa,CAAE,CAAY,CAAE,CAAc,CAAE,CAAc,CAAE,CAAQ,EAC7H,IAAM,EAAM,IAAI,CAAC,2BAA2B,CAAC,EAAc,GACvD,EAAoB,IAAI,CAAC,gBAAgB,CAAC,EAAI,CAClD,GAAI,AAAsB,SAAtB,EAAiC,CACjC,IAAM,EAAe,IAAI,CAAC,mBAAmB,GAG7C,EAAoB,AADL,IAAI,EADC,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAa,CACZ,GACpB,YAAY,GACvC,IAAI,CAAC,gBAAgB,CAAC,EAAI,CAAG,CACjC,CACA,IAAI,EAA0B,EAAkB,KAAK,CACjD,EAAa,EAAkB,UAAU,CACvC,EAAc,EAAkB,WAAW,AAGlB,KAA3B,IAAI,CAAC,UAAU,CAAC,MAAM,EACtB,GACA,AAA4B,SAA5B,IACA,EAA0B,GAC1B,EAAa,GAIe,SAA5B,GAAyC,AAAe,SAAf,GAGzC,IAAI,CAAC,iCAAiC,CAAC,EAAyB,EAAY,IAI5E,IAAI,CAAC,uBAAuB,CAAC,EAAU,EAAM,EAAe,EAEpE,CC3RO,MAAM,GACT,YAAY,CAAO,CAAE,CACjB,IAAI,CACJ,KAAI,CAAC,YAAY,CACb,MAAC,GAAK,QAAyC,KAAK,EAAI,EAAQ,YAAY,AAAD,EAA+B,EAAK,GAAsB,YAAY,AACzJ,CACA,SAAS,CAAO,CAAE,CACd,IAAM,EAAsB,IAAI,CAAC,uBAAuB,CAAC,EAAQ,KAAK,EACtE,GAAI,QAAQ,GAAsB,CAC9B,IAAM,EAAiB,IAAI,CAAC,2BAA2B,CAAC,EAAQ,KAAK,EASrE,MANkB,IACX,KACA,KAJqB,IAAI,CAAC,wCAAwC,CAAC,EAAQ,KAAK,CAAE,IAAI,CAAC,YAAY,KAC5E,IAAI,CAAC,iCAAiC,CAAC,EAAQ,KAAK,CAAE,IAAI,CAAC,YAAY,EAMpG,AAEL,CACA,OAAO,CACX,CACA,wBAAwB,CAAK,CAAE,CAC3B,MAAO,SAAQ,EAAO,AAAC,GAAgB,AHuGxC,UAAS,EAAwBE,CAAO,CAAE,CAAQ,CAAE,CAAc,CAAE,EAAO,EAAE,EAChF,IAAM,EAAS,EAAE,CACX,EAAmB,AA4BtB,SAAS,EAAqB,CAAU,EAC3C,IAAIL,EAAS,EAAE,CACf,GAAI,QAAQ,GACR,OAAOA,EAEX,IAAM,EAAY,GAAM,GAExB,GAAI,aAAqB,EACrBA,EAAO,IAAI,CAAC,EAAU,cAAc,OAEnC,GAAI,aAAqB,GAC1B,aAAqB,GACrB,aAAqB,GACrB,aAAqB,GACrB,aAAqB,GACrB,aAAqB,EACrBA,EAASA,EAAO,MAAM,CAAC,EAAqB,EAAU,UAAU,QAE/D,GAAI,aAAqB,EAE1BA,EAAS,SAAQ,GAAAoB,EAAA,GAAI,EAAU,UAAU,CAAE,AAAC,GAAe,EAAqB,EAAW,UAAU,SAEpG,GAAI,aAAqB,QAI1B,MAAMjB,MAAM,wBAEhB,IAAMK,EAAkB,GAAe,GACjC,EAAU,EAAW,MAAM,CAAG,EACpC,GAAIA,CAAAA,IAAmB,EAKnB,OAAOR,CALqB,EAC5B,IAAM,EAAO,EAAK,GAClB,OAAOA,EAAO,MAAM,CAAC,EAAqB,GAC9C,CAIJ,EAjEkD,EAAS,UAAU,EACjE,GAAI,QAAQ,GACR,MAAO,EAAE,AAER,EACD,IAAMA,EAAWK,EAAQ,IAAI,AAEzB,CADuB,GAAS,EAAkBA,IAElD,EAAO,IAAI,CAAC,CACR,QAAS,EAAe,uBAAuB,CAAC,CAC5C,aAAcA,EACd,kBAAmB,CACvB,GACA,KAAM,gBAAwC,CAC9C,SAAUL,CACd,GAIJ,IAAM,EAAiB,AlBxHhB,GkBwH2B,EAAkB,EAAK,MAAM,CAAC,CAACK,EAAQ,GACnE,EAAsB,SAAQ,EAAgB,AAAC,IACjD,IAAM,EAAU,QAAM,GAEtB,OADA,EAAQ,IAAI,CAAC,GACN,EAAwBA,EAAS,EAAa,EAAgB,EACzE,GACA,OAAO,EAAO,MAAM,CAAC,EACzB,CACJ,GGpIuE,EAAa,EAAa,IAC7F,CACA,4BAA4B,CAAK,CAAE,CAC/B,MAAO,SAAQ,EAAO,AAAC,GAAgB,AHiLxC,UAAoC,CAAY,CAAE,CAAc,EACnE,IAAM,EAAc,IAAI,GACxB,EAAa,MAAM,CAAC,GACpB,IAAM,EAAM,EAAY,YAAY,CAyBpC,MAxBe,SAAQ,EAAK,AAAC,IACzB,IAAM,EAAa,GAAU,EAAO,UAAU,EAC9C,MAAO,SAAQ,EAAY,CAAC,EAAiB,KACzC,IAAM,EAAqB,GAAwB,CAAC,EAAgB,CAAE,EAAE,CAAE,GAAwB,SAClG,AAAI,QAAQ,GACD,CACH,CACI,QAAS,EAAe,0BAA0B,CAAC,CAC/C,aAAc,EACd,YAAa,EACb,eAAgB,CACpB,GACA,KAAM,qBAA6C,CACnD,SAAU,EAAa,IAAI,CAC3B,WAAY,EAAO,GAAG,CACtB,YAAa,EAAa,CAC9B,EACH,CAGM,EAAE,AAEjB,EACJ,EAEJ,GG9M0E,EAAa,IACnF,CACA,yCAAyC,CAAK,CAAE,CAAY,CAAE,CAC1D,MAAO,SAAQ,EAAO,AAAC,GAAgB,AH4MxC,UAAkD,CAAY,CAAE,CAAkB,CAAE,CAAc,EACrG,IAAM,EAAc,IAAI,GACxB,EAAa,MAAM,CAAC,GACpB,IAAI,EAAM,EAAY,YAAY,CAYlC,OATA,EAAM,GAAO,EAAK,AAAC,GAAW,AAA6B,KAA7B,EAAO,iBAAiB,EACvC,SAAQ,EAAK,AAAC,IACzB,IAEM,EAAe,GAFE,EAAO,GAAG,CAE2B,EADjC,EAAO,YAAY,EAAI,EAC4C,GACxFI,EAAsB,AA2EpC,SAAsC,CAAY,CAAE,CAAW,CAAET,CAAI,CAAE,CAAc,EACjF,IAAM,EAAsB,EAAE,CACxB,EAAuB,SAAO,EAAc,CAACA,EAAQ,EAAS,KAEH,KAAzD,EAAY,UAAU,CAAC,EAAW,CAAC,iBAAiB,EAGxD,QAAQ,EAAS,AAAC,IACd,IAAM,EAAwB,CAAC,EAAW,CAC1C,QAAQ,EAAc,CAAC,EAAc,KAC7B,IAAe,GACf,GAAa,EAAc,IAE3B,AAA8D,KAA9D,EAAY,UAAU,CAAC,EAAgB,CAAC,iBAAiB,EACzD,EAAsB,IAAI,CAAC,EAEnC,GACI,EAAsB,MAAM,CAAG,GAC/B,CAAC,GAAa,EAAqB,KACnC,EAAoB,IAAI,CAAC,GACzBA,EAAO,IAAI,CAAC,CACR,KAAM,EACN,KAAM,CACV,GAER,GApBWA,GAsBZ,EAAE,EAiBL,MAhBmB,GAAAoB,EAAA,GAAI,EAAsB,AAAC,IAC1C,IAAM,EAAc,GAAAA,EAAA,GAAI,EAAkB,IAAI,CAAE,AAAC,GAAe,EAAa,GAO7E,MAAO,CACH,QAPgB,EAAe,8BAA8B,CAAC,CAC9D,aAAcpB,EACd,YAAa,EACb,iBAAkB,EAClB,WAAY,EAAkB,IAAI,AACtC,GAGI,KAAM,gBAAwC,CAC9C,SAAUA,EAAK,IAAI,CACnB,WAAY,EAAY,GAAG,CAC3B,aAAc,EAAkB,IAAI,AACxC,CACJ,EAEJ,EAxHiE,EAAc,EAAQ,EAAc,GACvF,EAA4B,AAwHnC,SAA4C,CAAY,CAAE,CAAW,CAAEA,CAAI,CAAE,CAAc,EAE9F,IAAM,EAAkB,SAAO,EAAc,CAAC,EAAQ,EAAS,KAC3D,IAAM,EAAkB,GAAAoB,EAAA,GAAI,EAAS,AAAC,GAC3B,EAAE,IAAK,EAAK,KAAM,CAAS,IAEtC,OAAO,EAAO,MAAM,CAAC,EACzB,EAAG,EAAE,EAuCL,OAtCe,GAAQ,SAAQ,EAAiB,AAAC,IAG7C,GAAI,AAAsC,KAAtC,AAFoB,EAAY,UAAU,CAAC,EAAe,GAAG,CAAC,CAE9C,iBAAiB,CACjC,MAAO,EAAE,CAEb,IAAM,EAAY,EAAe,GAAG,CAC9B,EAAa,EAAe,IAAI,CAChC,EAAmC,SAAO,EAAiB,AAAC,Q9CyErC,Q8CrEzB,AACI,KADJ,EAAY,UAAU,CAAC,EAAiB,GAAG,CAAC,CAAC,iBAAiB,EAE1D,EAAiB,GAAG,CAAG,I9CmEF,E8ChEA,EAAiB,IAAI,C9CiE9C,EAAO,MAAM,CAAG,A8CjEgC,E9CiE1B,MAAM,EAChC,GAAM,EAAQ,CAAC,EAAS,KACpB,IAAM,EAAe,A8CnE2B,C9CmEtB,CAAC,EAAI,CAC/B,OAAQ,IAAY,GAChB,EAAa,kBAAkB,CAAC,EAAQ,YAAY,CAAC,AAC7D,M8CnDA,MAjB6B,GAAAA,EAAA,GAAI,EAAkC,AAAC,IAChE,IAAM,EAAc,CAAC,EAAkB,GAAG,CAAG,EAAG,EAAY,EAAE,CACxD,EAAa,AAAoB,IAApB,EAAY,GAAG,CAAS,GAAK,EAAY,GAAG,CAO/D,MAAO,CACH,QAPY,EAAe,oCAAoC,CAAC,CAChE,aAAcpB,EACd,YAAa,EACb,iBAAkB,EAClB,WAAY,EAAkB,IAAI,AACtC,GAGI,KAAM,uBAA+C,CACrD,SAAUA,EAAK,IAAI,CACnB,WAAY,EACZ,aAAc,CAClB,CACJ,EAEJ,GAEJ,EAvK6E,EAAc,EAAQ,EAAc,GACzG,OAAOS,EAAoB,MAAM,CAAC,EACtC,EAEJ,GG5NwF,EAAa,EAAc,IAC/G,CACA,kCAAkC,CAAK,CAAE,CAAY,CAAE,CHsQvD,IAAM,EAAS,EAAE,CAwBjB,MAvBA,QGtQ6C,EHsQtB,AAAC,IACpB,IAAM,EAAmB,IAAI,GAC7B,EAAY,MAAM,CAAC,GACnB,IAAM,EAAqB,EAAiB,cAAc,CAC1D,QAAQ,EAAoB,AAAC,IACzB,IAAM,EAAW,GAAY,GACvBA,EAAqB,EAAS,YAAY,EG5QJ,EH+QtC,EAAwB,AADhB,GADS,EAAS,GAAG,CAC4B,EAAa,EAAUA,EACnD,CAAC,EAAE,CACtC,GAAI,QAAQ,SAAQ,IAAyB,CACzC,IAAM,EAAS,AGjRuC,GHiRxB,yBAAyB,CAAC,CACpD,aAAc,EACd,WAAY,CAChB,GACA,EAAO,IAAI,CAAC,CACR,QAAS,EACT,KAAM,wBAAgD,CACtD,SAAU,EAAY,IAAI,AAC9B,EACJ,CACJ,EACJ,GACO,CG5RP,CACA,6BAA6B,CAAO,CAAE,CAClC,OAAO,AjDWR,SAAiC,CAAU,CAAE,CAAW,CAAE,CAAY,CAAE,CAAa,CAAE,CAAoB,CAAE,CAAa,EAC7H,IAAM,EAAiB,GAAuB,EAAY,EAAa,GACjE,EAAe,GAA0B,GACzC,GACA,GACN,OAAO,EAAc,EAAgB,EAAe,EAAc,EACtE,EiDjBuC,EAAQ,cAAc,CAAE,EAAQ,IAAI,CAAE,EAAQ,YAAY,CAAE,EAAQ,aAAa,CAAE,EAAQ,oBAAoB,CAAE,GACpJ,CACA,0BAA0B,CAAO,CAAE,CAC/B,OAAO,AjD2BR,SAA2C,CAAU,CAAE,CAAW,CAAE,CAAC,CAAE,CAAoB,CAAE,CAAQ,CAAE,CAAgB,EAC1H,IAAM,EAAiB,GAAiC,EAAY,EAAa,EAAU,GACrF,EAAe,GAA0B,GACzC,GACA,GACN,OAAO,EAAiB,CAAc,CAAC,EAAE,CAAE,EAAc,EAC7D,EiDjCiD,EAAQ,cAAc,CAAE,EAAQ,IAAI,CAAE,EAAQ,YAAY,CAAE,EAAQ,oBAAoB,CAAE,GAAY,EAAQ,QAAQ,EAAG,GACtK,CACJ,CC+EA,IAAM,GAAmB,IAzCzB,cAAyC,EACrC,aAAc,CACV,KAAK,IAAIa,WACT,IAAI,CAAC,UAAU,CAAG,CACd,OAAQ,EAAE,CACV,YAAa,EAAE,CACf,WAAY,EAAE,CACd,wBAAyB,EAAE,CAC3B,oBAAqB,EAAE,CACvB,iCAAkC,EAAE,AACxC,CACJ,CACA,OAAQ,CACJ,IAAI,CAAC,UAAU,CAAG,CACd,OAAQ,EAAE,CACV,YAAa,EAAE,CACf,WAAY,EAAE,CACd,wBAAyB,EAAE,CAC3B,oBAAqB,EAAE,CACvB,iCAAkC,EAAE,AACxC,CACJ,CACA,YAAY,CAAM,CAAE,CAChB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAChC,CACA,6BAA6B,CAAO,CAAE,CAClC,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,IAAI,CAAC,EACjD,CACA,yBAAyB,CAAU,CAAE,CACjC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAC7C,CACA,sCAAsC,CAAa,CAAE,CACjD,IAAI,CAAC,UAAU,CAAC,gCAAgC,CAAC,IAAI,CAAC,EAC1D,CACA,gBAAgB,CAAI,CAAE,CAClB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EACpC,CACA,iBAAiB,CAAE,CAAE,CACjB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EACrC,CACJ,ECpHO,SAAS,GAA0B,CAAgB,CAAE,CAAe,EAEnEK,AAAwC,KAAxCA,MAAM,EAAiB,WAAW,GAIlC,EAAiB,WAAW,CAAG,EAAgB,WAAW,CAC1D,EAAiB,SAAS,CAAG,EAAgB,SAAS,EAMjD,EAAiB,SAAS,CAAG,EAAgB,SAAS,EAAK,IAChE,GAAiB,SAAS,CAAG,EAAgB,SAAS,AAAD,CAE7D,CAQO,SAAS,GAAoB,CAAgB,CAAE,CAAe,EAE7DA,AAAwC,KAAxCA,MAAM,EAAiB,WAAW,GAIlC,EAAiB,WAAW,CAAG,EAAgB,WAAW,CAC1D,EAAiB,WAAW,CAAG,EAAgB,WAAW,CAC1D,EAAiB,SAAS,CAAG,EAAgB,SAAS,CACtD,EAAiB,SAAS,CAAG,EAAgB,SAAS,CACtD,EAAiB,SAAS,CAAG,EAAgB,SAAS,CACtD,EAAiB,OAAO,CAAG,EAAgB,OAAO,EAM7C,EAAiB,SAAS,CAAG,EAAgB,SAAS,EAAK,KAChE,EAAiB,SAAS,CAAG,EAAgB,SAAS,CACtD,EAAiB,SAAS,CAAG,EAAgB,SAAS,CACtD,EAAiB,OAAO,CAAG,EAAgB,OAAO,CAE1D,CCpDO,SAAS,GAAe,CAAG,CAAE,CAAS,EACzC1B,OAAO,cAAc,CAAC,EAFb,OAEwB,CAC7B,WAAY,GACZ,aAAc,GACd,SAAU,GACV,MAAO,CACX,EACJ,CnDNO,SAAS,GAAa,CAAG,CAAE,CAAK,EACnC,IAAM,EAAgB,QAAK,GACrB,EAAsB,EAAc,MAAM,CAChD,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAqBA,IAAK,CAE1C,IAAM,EAAiB,CAAG,CADJ,CAAa,CAACA,EAAE,CACG,CACnC,EAAuB,EAAe,MAAM,CAClD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAsB,IAAK,CAC3C,IAAM,EAAY,CAAc,CAAC,EAAE,AAE/B,AAA2B,UAA3B,EAAU,YAAY,EACtB,IAAI,CAAC,EAAU,IAAI,CAAC,CAAC,EAAU,QAAQ,CAAE,EAEjD,CACJ,CAEJ,CAmDI,CADO,EAGR,GAA8B,GAA4B,CAAC,GAFjC,CAAC,EAA0B,gBAAmB,CAAG,EAAE,CAAG,mBAC/E,CAAyB,CAAC,EAA0B,cAAiB,CAAG,EAAE,CAAG,iB,gBoD/DjF,IAAM,GAAwB,CAC1B,YAAa,4DACjB,EACAP,OAAO,MAAM,CAAC,IAEd,IACM,GfcK,Geda,CAAE,KAAM,wBAAyB,QAAS,GAAM,EAAE,AAAC,GAC3E,GAAkB,CAAC,GAAI,EACvB,IAAM,GAAwB,GAAoB,GAAK,8IAKvD,GAAI,GAAI,GAAI,GAAI,GAAI,IACpBA,OAAO,MAAM,CAAC,IACd,IAAM,GAA0B,CAC5B,KAAM,+IAEN,SAAU,CAAC,CACf,EA6MA,SAAS,GAAW,CAAe,CAAE,CAAW,CAAE,CAAU,CAAE,EAAY,EAAK,EAC3E,GAAuB,GACvB,IAAM,EAAW,SAAK,IAAI,CAAC,kBAAkB,EACvC,EAAgB,SAAW,GAAe,EAAc,EAAY,GAAG,CACvE,EAAU,IAAI,EAAgB,CAAE,WAAY,EAAE,CAAE,IAAK,CAAW,GAWtE,OAVI,GACA,GAAQ,SAAS,CAAG,EAAY,GAAG,AAAD,EAElC,QAAI,EAAa,kBACjB,GAAQ,YAAY,CAAG,EAAY,aAAa,AAAD,EAEnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAC7B,EAAc,IAAI,CAAC,IAAI,EACvB,EAAS,UAAU,CAAC,IAAI,CAAC,GACzB,IAAI,CAAC,kBAAkB,CAAC,GAAG,GACpB,EACX,CACA,SAAS,GAAa,CAAW,CAAE,CAAU,EACzC,GAAuB,GACvB,IAAM,EAAW,SAAK,IAAI,CAAC,kBAAkB,EAEvC,EAAa,AAAyB,KAAzB,SAAQ,GACrB,EAAO,AAAe,KAAf,EAAuB,EAAc,EAAY,GAAG,CAC3D,EAAY,IAAI,EAAY,CAC9B,WAAY,EAAE,CACd,IAAK,EACL,kBAAmB,GAAc,AAAmC,KAAnC,EAAY,kBAAkB,AACnE,GAqBA,MApBI,QAAI,EAAa,kBACjB,GAAU,YAAY,CAAG,EAAY,aAAa,AAAD,EAGrD,EAAU,aAAa,CADD,GAAK,EAAM,AAAC,GAAY,SAAW,EAAQ,IAAI,GAErE,EAAS,UAAU,CAAC,IAAI,CAAC,GACzB,QAAQ,EAAM,AAAC,IACX,IAAM,EAAc,IAAI,EAAY,CAAE,WAAY,EAAE,AAAC,GACrD,EAAU,UAAU,CAAC,IAAI,CAAC,GACtB,QAAI,EAAS,sBACb,EAAY,iBAAiB,CAAG,EAAQ,kBAAkB,CAGrD,QAAI,EAAS,SAClB,GAAY,iBAAiB,CAAG,EAAG,EAEvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAC7B,EAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,EACrB,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAC/B,GACO,EACX,CACA,SAAS,GAAa,CAAG,EACrB,OAAO,AAAQ,IAAR,EAAY,GAAK,CAAC,EAAE,EAAI,CAAC,AACpC,CACA,SAAS,GAAuB,CAAG,EAC/B,GAAI,EAAM,GAAK,EAjRI,IAiRkB,CACjC,IAAM,EAAQ,AAAIE,MAElB,CAAC,+BAA+B,EAAE,EAC7B;AAAG,sDAAkD,EAAE,IAAmB,CADnC,CAG5C,OADA,EAAM,oBAAoB,CAAG,GACvB,CACV,CACJ,CnDnRO,IAAM,GAAc,GAAoB,GAAK,GAAIyB,IAAKA,IAAKA,IAAKA,IAAKA,IAAKA,KACjF3B,OAAO,MAAM,CAAC,IACP,IAAM,GAAwBA,OAAO,MAAM,CAAC,CAC/C,gBAAiB,GACjB,aAAc,EACd,qBAAsB,GACtB,UAAW,GACX,qBAAsB,GACtB,qBAAsB,OACtB,cAAe,GACf,gBAAiB,EACrB,GACa,GAAsBA,OAAO,MAAM,CAAC,CAC7C,kBAAmB,IAAM,OACzB,cAAe,EACnB,GAkBO,SAAS,GAAU,CAAiB,EACvC,OAAO,WACH,OAAO,CACX,CACJ,CAnBI,CADO,EAeR,GAA8B,GAA4B,CAAC,GAdjC,CAAC,EAA0B,iBAAoB,CAAG,EAAE,CAAG,oBAChF,CAAyB,CAAC,EAA0B,mBAAsB,CAAG,EAAE,CAAG,sBAClF,CAAyB,CAAC,EAA0B,qBAAwB,CAAG,EAAE,CAAG,wBACpF,CAAyB,CAAC,EAA0B,qBAAwB,CAAG,EAAE,CAAG,wBACpF,CAAyB,CAAC,EAA0B,sBAAyB,CAAG,EAAE,CAAG,yBACrF,CAAyB,CAAC,EAA0B,cAAiB,CAAG,EAAE,CAAG,iBAC7E,CAAyB,CAAC,EAA0B,mBAAsB,CAAG,EAAE,CAAG,sBAClF,CAAyB,CAAC,EAA0B,cAAiB,CAAG,EAAE,CAAG,iBAC7E,CAAyB,CAAC,EAA0B,+BAAkC,CAAG,EAAE,CAAG,kCAC9F,CAAyB,CAAC,EAA0B,kBAAqB,CAAG,EAAE,CAAG,qBACjF,CAAyB,CAAC,EAA0B,sBAAyB,CAAG,GAAG,CAAG,yBACtF,CAAyB,CAAC,EAA0B,qBAAwB,CAAG,GAAG,CAAG,wBACrF,CAAyB,CAAC,EAA0B,aAAgB,CAAG,GAAG,CAAG,gBAC7E,CAAyB,CAAC,EAA0B,2BAA8B,CAAG,GAAG,CAAG,6BAOxF,OAAM,GAIT,OAAO,oBAAoB,CAAc,CAAE,CACvC,MAAME,MAAM,6HAEhB,CACA,qBAAsB,CAClB,IAAI,CAAC,UAAU,CAAC,sBAAuB,SAC/B,CACJ,KAAI,CAAC,gBAAgB,CAAG,GACxB,IAAM,EAAY,IAAI,CAAC,SAAS,CAChC,IAAI,CAAC,UAAU,CAAC,cAAe,KAI3B,EAAiB,IAAI,CACzB,GACA,IAAI,CAAC,UAAU,CAAC,oBAAqB,KACjC,GAAI,CACA,IAAI,CAAC,eAAe,GAEpB,QAAQ,IAAI,CAAC,iBAAiB,CAAE,AAAC,IAE7B,IACI,EADE,EAAwB,AADV,IAAI,CAAC,EAAa,CACI,qBAAwB,CAElE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAa,KAAK,CAAC,CAAE,KACpC,EAAmB,IAAI,CAAC,kBAAkB,CAAC,EAAc,EAC7D,GACA,IAAI,CAAC,oBAAoB,CAAC,EAAa,CAAG,CAC9C,EACJ,QACQ,CACJ,IAAI,CAAC,gBAAgB,EACzB,CACJ,GACA,IAAIH,EAAiB,EAAE,CA2CvB,GA1CA,IAAI,CAAC,UAAU,CAAC,oBAAqB,KACjCA,EAAiB,AoD3F1B,SAAwB,CAAO,EAClC,IAAM,EAAgB,SAAS,EAAS,CACpC,eAAgB,EACpB,GACM,EAAgB,CAAC,EACvB,QAAQ,EAAQ,KAAK,CAAE,AAAC,IACpB,CAAa,CAAC,EAAK,IAAI,CAAC,CAAG,CAC/B,GdPA,IAAM,EAAc,IAAI,GcQC,EAAe,EAAc,cAAc,EdNpE,OADA,EAAY,WAAW,GAChB,EAAY,MAAM,AcO7B,EpDkFgD,CAC5B,MAAO,QAAO,IAAI,CAAC,oBAAoB,CAC3C,GACA,IAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAACA,EACzD,GACA,IAAI,CAAC,UAAU,CAAC,sBAAuB,KAGnC,GAAI,QAAQA,IAAmB,AAAyB,KAAzB,IAAI,CAAC,eAAe,CAAY,KoDzF/C,EpD0FZ,IAAM,GoD1FM,EpD0F6B,CACrC,MAAO,QAAO,IAAI,CAAC,oBAAoB,EACvC,WAAY,QAAO,IAAI,CAAC,SAAS,EACjC,eAAgB,GAChB,YAAa,CACjB,EoD3FT,ARJJ,SAAyB,CAAS,CAAEK,CAAU,CAAE,CAAc,CAAE,CAAW,EAC9E,IAAM,EAAkB,SAAQ,EAAW,AAAC,GAAiB,AAMjE,UAAsC,CAAY,CAAE,CAAc,EAC9D,IAAM,EAAmB,IAAI,GAC7B,EAAa,MAAM,CAAC,GAGpB,IAAM,EAAa,EADM,AHed,GGhBgB,EAAiB,cAAc,CACL,IACT,AAAC,GAClC,EAAU,MAAM,CAAG,GAmB9B,MAjBe,GAAAe,EAAA,GAAI,QAAO,GAAa,AAAC,IACpC,IAAM,EAAY,GAAM,GAClB,EAAM,EAAe,wBAAwB,CAAC,EAAc,GAC5D,EAAU,GAAqB,GAC/B,EAAW,CACb,QAAS,EACT,KAAM,uBAA+C,CACrD,SAAU,EAAa,IAAI,CAC3B,QAAS,EACT,WAAY,EAAU,GAAG,AAC7B,EACM,EAAQ,GAA2B,GAIzC,OAHI,GACA,GAAS,SAAS,CAAG,CAAI,EAEtB,CACX,EAEJ,GAhC8F,EAAc,IAClG,EAA+B,AAkZzC,SAAgD,CAAS,CAAEf,CAAU,CAAE,CAAc,EACjF,IAAM,EAAS,EAAE,CACX,EAAa,GAAAe,EAAA,GAAIf,EAAY,AAAC,GAAc,EAAU,IAAI,EAYhE,MAXA,QAAQ,EAAW,AAAC,IAChB,IAAM,EAAe,EAAS,IAAI,CAClC,GAAI,GAAS,EAAY,GAAe,CACpC,IAAM,EAAS,EAAe,2BAA2B,CAAC,GAC1D,EAAO,IAAI,CAAC,CACR,QAAS,EACT,KAAM,iCAAyD,CAC/D,SAAU,CACd,EACJ,CACJ,GACO,CACX,EAjagF,EAAWA,EAAY,GAC7F,EAAoB,SAAQ,EAAW,AAAC,GAAY,AAgQvD,UAA6B,CAAY,CAAE,CAAc,EAC5D,IAAM,EAAc,IAAI,GACxB,EAAa,MAAM,CAAC,GACpB,IAAM,EAAM,EAAY,YAAY,CAmBpC,MAlBe,SAAQ,EAAK,AAAC,GACzB,AAAI,EAAO,UAAU,CAAC,MAAM,CAAG,IACpB,CACH,CACI,QAAS,EAAe,6BAA6B,CAAC,CAClD,aAAc,EACd,YAAa,CACjB,GACA,KAAM,eAAuC,CAC7C,SAAU,EAAa,IAAI,CAC3B,WAAY,EAAO,GAAG,AAC1B,EACH,CAGM,EAAE,CAIrB,GAvRkF,EAAS,IACjF,EAAsB,SAAQ,EAAW,AAAC,GAAY,AA0EzD,UAAyC,CAAI,CAAE,CAAQ,CAAE,CAAS,CAAE,CAAc,EACrF,IAAM,EAAS,EAAE,CAOjB,GAAI,AANgB,SAAO,EAAU,CAAC,EAAQ,IAC1C,AAAI,EAAQ,IAAI,GAAK,EAAK,IAAI,CACnB,EAAS,EAEb,EACR,GACe,EAAG,CACjB,IAAM,EAAS,EAAe,2BAA2B,CAAC,CACtD,aAAc,EACd,YAAa,CACjB,GACA,EAAO,IAAI,CAAC,CACR,QAAS,EACT,KAAM,qBAA6C,CACnD,SAAU,EAAK,IAAI,AACvB,EACJ,CACA,OAAO,CACX,GA9FgG,EAAS,EAAW,EAAa,IAC7H,OAAO,EAAgB,MAAM,CAAC,EAA8B,EAAmB,EACnF,EQF8B,AAH1B,GAAU,SAAS,EAAS,CACxB,eAAgB,EACpB,EAAC,EACiC,KAAK,CAAE,EAAQ,UAAU,CAAE,EAAQ,cAAc,CAAE,EAAQ,WAAW,GpD4FlF,EAA4B,A4CxG/C,SAA2B,CAAO,EACrC,IAAM,EAAmC,EAAQ,iBAAiB,CAAC,QAAQ,CAAC,CACxE,MAAO,EAAQ,KAAK,CACpB,WAAY,EAAQ,UAAU,CAC9B,YAAa,EAAQ,WAAW,AACpC,GACA,MAAO,GAAAe,EAAA,GAAI,EAAkC,AAAChB,GAAkBH,OAAO,MAAM,CAAC,CAAE,KAAM,6BAAqD,AAAC,EAAGG,GACnJ,E5CiGwE,CAChD,kBAAmB,IAAI,CAAC,iBAAiB,CACzC,MAAO,QAAO,IAAI,CAAC,oBAAoB,EACvC,WAAY,QAAO,IAAI,CAAC,SAAS,EACjC,YAAa,CACjB,EACA,KAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAkB,EAC3E,CACJ,GAEI,QAAQ,IAAI,CAAC,gBAAgB,IAEzB,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,UAAU,CAAC,yBAA0B,KACtC,IAAM,EAAa,AqB/FpC,SAAgC,CAAc,EACjD,IAAM,EAAgB,CAAC,EAKvB,MAJA,QAAQ,EAAgB,AAAC,IAErB,AjBwBO,EiBxBA,EADgB,IAAI,GAAoB,GAAS,YAAY,GAExE,GACO,CACX,ErBwFkE,QAAO,IAAI,CAAC,oBAAoB,EAC1E,KAAI,CAAC,aAAa,CAAG,CACzB,GAEJ,IAAI,CAAC,UAAU,CAAC,4BAA6B,KACzC,IAAI,EAAI,CACR,OAAC,GAAK,AAAC,GAAK,IAAI,CAAC,iBAAiB,AAAD,EAAG,UAAU,AAAD,GAAwC,EAAG,IAAI,CAAC,EAAI,CAC7F,MAAO,QAAO,IAAI,CAAC,oBAAoB,CAC3C,GACA,IAAI,CAAC,4BAA4B,CAAC,QAAO,IAAI,CAAC,oBAAoB,EACtE,IAEA,CAAC,GAAO,gCAAgC,EACxC,CAAC,QAAQ,IAAI,CAAC,gBAAgB,EAE9B,MADA,EAAgB,GAAAgB,EAAA,GAAI,IAAI,CAAC,gBAAgB,CAAE,AAAC,GAAa,EAAS,OAAO,EACnE,AAAIjB,MAAM,CAAC;AAAoC,CAAC,EAAE,EAAc,IAAI,CAAC,uCAAuC,CAAC,CAE3H,EACJ,CACA,YAAY,CAAe,CAAE,CAAM,CAAE,CAajC,GAZA,IAAI,CAAC,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAAC,gBAAgB,CAAG,GAExB,AADa,IAAI,CACZ,gBAAgB,CAAC,GACtB,AAFa,IAAI,CAEZ,gBAAgB,GACrB,AAHa,IAAI,CAGZ,cAAc,CAAC,GACpB,AAJa,IAAI,CAIZ,oBAAoB,CAAC,EAAiB,GAC3C,AALa,IAAI,CAKZ,eAAe,CAAC,GACrB,AANa,IAAI,CAMZ,eAAe,CAAC,GACrB,AAPa,IAAI,CAOZ,iBAAiB,GACtB,AARa,IAAI,CAQZ,gBAAgB,CAAC,GACtB,AATa,IAAI,CASZ,qBAAqB,CAAC,GACvB,QAAI,EAAQ,iBACZ,MAAM,AAAIA,MAAM,mQAKpB,KAAI,CAAC,eAAe,CAAG,QAAI,EAAQ,mBAC7B,EAAO,eAAe,CACtB,GAAsB,eAAe,AAC/C,CACJ,CAOA,GAAO,gCAAgC,CAAG,GqD5KtC,ArD6KgB,C8C9Jb,MACH,gBAAgB,CAAM,CAAE,CACpB,IAAI,CAAC,gBAAgB,CAAG,CAAC,EACzB,IAAI,CAAC,aAAa,CAAG,CAAC,EACtB,IAAI,CAAC,eAAe,CAAG,QAAI,EAAQ,mBAC7B,EAAO,eAAe,CACtB,GAAsB,eAAe,CAIvC,IAAI,CAAC,eAAe,EACpB,KAAI,CAAC,2BAA2B,CAAG,EAA0B,CAErE,CACA,iBAAiB,CAAO,CAAE,CACtB,IAAME,EAAc,GAAoB,EAAS,GAAIuB,IAAKA,IAAKA,IAAKA,IAAKA,IAAKA,KAE9E,OADAvB,EAAY,oBAAoB,CAAG,GAC5BA,CACX,CACA,iCAAiC,CAAO,CAAE,CACtC,MAAO,EACX,CACA,gCAAgC,CAAO,CAAE,CACrC,MAAO,EACX,CACA,wBAAwB,CAAW,CAAE,CAAe,CAAE,CAAa,CAAE,CAAe,CAAE,CAElF,IAAM,EAAgB,IAAI,CAAC,mBAAmB,GACxC,EAAkB,IAAI,CAAC,gBAAgB,GACvC,EAAiB,EAAE,CACrB,EAAoB,GAClB,EAAyB,IAAI,CAAC,EAAE,CAAC,GACnC,EAAY,IAAI,CAAC,EAAE,CAAC,GAClB,EAAuB,KACzB,IAAM,EAAgB,IAAI,CAAC,EAAE,CAAC,GASxB,EAAQ,IAAI,GANN,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,CAC5D,SAAU,EACV,OAAQ,EACR,SAAU,EACV,SAAU,IAAI,CAAC,mBAAmB,EACtC,GACgD,EAAwB,IAAI,CAAC,EAAE,CAAC,GAEhF,GAAM,cAAc,CAAG,GAAU,GACjC,IAAI,CAAC,UAAU,CAAC,EACpB,EACA,KAAO,CAAC,GAEJ,GAAI,IAAI,CAAC,YAAY,CAAC,EAAW,GAAkB,YAC/C,SAGC,GAAI,EAAc,IAAI,CAAC,IAAI,EAAG,CAE/B,IAEA,EAAY,KAAK,CAAC,IAAI,CAAE,GACxB,MACJ,MACS,IAAI,CAAC,YAAY,CAAC,EAAW,GAClC,EAAoB,IAGpB,EAAY,IAAI,CAAC,UAAU,GAC3B,IAAI,CAAC,iBAAiB,CAAC,EAAW,IAM1C,IAAI,CAAC,gBAAgB,CAAC,EAC1B,CACA,kCAAkCD,CAAuB,CAAE,CAAU,CAAE,CAAQ,CAAE,SAG5D,KAAb,GAIA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAIA,IAK9B,IAAI,CAAC,cAAc,IAMnB,IAAI,CAAC,wBAAwB,CAACA,EAAyB,IAAI,CAAC,2BAA2B,CAACA,EAAyB,IAIzH,CAEA,4BAA4B,CAAO,CAAEC,CAAY,CAAE,CAC/C,IAAM,EAAc,IAAI,CAAC,qBAAqB,CAAC,EAASA,GAExD,OADgB,IAAI,CAAC,yBAAyB,CAAC,EAEnD,CACA,kBAAkBD,CAAe,CAAE,CAAO,CAAE,CACxC,GAAI,IAAI,CAAC,kCAAkC,CAACA,EAAiB,GAEzD,OADoB,IAAI,CAAC,gBAAgB,CAACA,GAG9C,GAAI,IAAI,CAAC,iCAAiC,CAACA,GAAkB,CACzD,IAAM,EAAU,IAAI,CAAC,UAAU,GAE/B,OADA,IAAI,CAAC,YAAY,GACV,CACX,CACA,MAAM,IAAI,GAAwB,gBACtC,CACA,yBAAyBA,CAAa,CAAE,CAAO,CAAE,CAC7C,OAAQ,IAAI,CAAC,kCAAkC,CAACA,EAAe,IAC3D,IAAI,CAAC,iCAAiC,CAACA,EAC/C,CACA,mCAAmCA,CAAe,CAAE,CAAO,CAAE,CACzD,GAAI,CAAC,IAAI,CAAC,gCAAgC,CAACA,IAIvC,QAAQ,GAHR,MAAO,GAMX,IAAM,EAAgB,IAAI,CAAC,EAAE,CAAC,GAI9B,OAHiC,AAE1B,SAF0B,SAAK,EAAS,AAAC,GACrC,IAAI,CAAC,YAAY,CAAC,EAAe,GAGhD,CACA,kCAAkCA,CAAe,CAAE,OAC/C,CAAI,CAAC,IAAI,CAAC,+BAA+B,CAACA,IAGR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAIA,EAEpE,CACA,yBAAyB,CAAY,CAAE,CACnC,IAAM,EAAY,IAAI,CAAC,gBAAgB,GAEvC,OAAO,GADsB,IAAI,CAAC,yBAAyB,CAAC,GACtB,EAC1C,CACA,qBAAsB,CAClB,IAAM,EAA4B,IAAI,CAAC,gBAAgB,GAEnD,EAAY,IAAI,CAAC,EAAE,CAAC,GACpB,EAAI,EACR,OAAa,CACT,IAAM,EAAa,SAAK,EAA2B,AAAC,GVnFrD,GUoFmC,EAAW,IAG7C,GAAI,AAAe,SAAf,EACA,OAAO,EAEX,EAAY,IAAI,CAAC,EAAE,CAAC,GACpB,GACJ,CACJ,CACA,kBAAmB,CAEf,GAAI,AAA2B,IAA3B,IAAI,CAAC,UAAU,CAAC,MAAM,CACtB,OAAO,GAEX,IAAM,EAAoB,IAAI,CAAC,4BAA4B,GACrD,EAAc,IAAI,CAAC,kCAAkC,GACrD,EAAoB,IAAI,CAAC,gCAAgC,GAC/D,MAAO,CACH,SAAU,IAAI,CAAC,uBAAuB,CAAC,GACvC,iBAAkB,EAClB,OAAQ,IAAI,CAAC,uBAAuB,CAAC,EACzC,CACJ,CACA,yBAA0B,CACtB,IAAMA,EAAoB,IAAI,CAAC,UAAU,CACnC,EAA0B,IAAI,CAAC,qBAAqB,CAC1D,MAAO,GAAAgB,EAAA,GAAIhB,EAAmB,CAACJ,EAAU,IACrC,AAAI,AAAQ,IAAR,EACO,GAEJ,CACH,SAAU,IAAI,CAAC,uBAAuB,CAACA,GACvC,iBAAkB,CAAuB,CAAC,EAAI,CAC9C,OAAQ,IAAI,CAAC,uBAAuB,CAACI,CAAiB,CAAC,EAAM,EAAE,CACnE,EAER,CACA,kBAAmB,CACf,IAAM,EAAc,GAAAgB,EAAA,GAAI,IAAI,CAAC,uBAAuB,GAAI,AAAC,GAC9C,IAAI,CAAC,yBAAyB,CAAC,IAE1C,MAAO,SAAQ,EACnB,CACA,0BAA0B,CAAS,CAAE,CACjC,GAAI,IAAc,GACd,MAAO,CAAC,GAAI,CAEhB,IAAM,EAAa,EAAU,QAAQ,CAAG,EAAU,gBAAgB,CAAG,GAAK,EAAU,MAAM,CAC1F,OAAO,IAAI,CAAC,aAAa,CAAC,EAAW,AACzC,CAGA,kBAAkB,CAAK,CAAE,CAAY,CAAE,CAInC,OAHI,AAAC,IAAI,CAAC,YAAY,CAAC,EAAO,KAC1B,EAAa,IAAI,CAAC,GAEf,CACX,CACA,SAAS,CAAO,CAAE,CACd,IAAM,EAAiB,EAAE,CACrB,EAAU,IAAI,CAAC,EAAE,CAAC,GACtB,KAAO,AAAwC,KAAxC,IAAI,CAAC,YAAY,CAAC,EAAS,IAC9B,EAAU,IAAI,CAAC,UAAU,GACzB,IAAI,CAAC,iBAAiB,CAAC,EAAS,GAGpC,OAAO,GAAU,EACrB,CACA,4BAA4B,CAAQ,CAAE,CAAI,CAAE,CAAa,CAAE,CAAY,CAAE,CAAc,CAAE,CAAc,CAAE,CAAQ,CAAE,CAGnH,CACA,sBAAsB,CAAO,CAAEf,CAAY,CAAE,CACzC,IAAM,EAAgB,IAAI,CAAC,yBAAyB,GAQpD,MANoB,CAChB,UAAW,EACX,gBAHwB,QAAM,IAAI,CAAC,qBAAqB,EAIxD,QAAS,EACT,kBAAmBA,CACvB,CAEJ,CACA,2BAA4B,CACxB,MAAO,GAAAe,EAAA,GAAI,IAAI,CAAC,UAAU,CAAE,AAAC,GAAkB,IAAI,CAAC,uBAAuB,CAAC,GAChF,CACJ,EEvPO,MACH,eAAe,CAAM,CAAE,CACnB,IAAI,CAAC,oBAAoB,CAAG,QAAI,EAAQ,wBAClC,EAAO,oBAAoB,CAC3B,GAAsB,oBAAoB,CAChD,IAAI,CAAC,YAAY,CAAG,QAAI,EAAQ,gBAC1B,EAAO,YAAY,CACnB,GAAsB,YAAY,CACxC,IAAI,CAAC,iBAAiB,CAAG,QAAI,EAAQ,qBAC/B,EAAO,iBAAiB,CACxB,IAAI,GAAqB,CAAE,aAAc,IAAI,CAAC,YAAY,AAAC,GACjE,IAAI,CAAC,mBAAmB,CAAG,IAAIS,GACnC,CACA,6BAA6B,CAAK,CAAE,CAChC,QAAQ,EAAO,AAAC,IACZ,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAS,IAAI,CAAC,eAAe,CAAC,CAAE,KAC/C,GAAM,CAAE,aAAW,CAAE7B,WAAAA,CAAU,CAAE,QAAM,CAAE,qBAAmB,CAAE,kCAAgC,CAAE,yBAAuB,CAAG,CAAG,AAqGtI,SAAwB,CAAI,EAC/B,GAAiB,KAAK,GACtB,EAAK,MAAM,CAAC,IACZ,IAAM,EAAa,GAAiB,UAAU,CAG9C,OADA,GAAiB,KAAK,GACf,CACX,EA5G4J,GAC5I,QAAQ,EAAa,AAAC,IAClB,IAAM,EAAU,AAAiB,IAAjB,EAAS,GAAG,CAAS,GAAK,EAAS,GAAG,CACtD,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,GAAqB,GAAU,EAAE,EAAQ,CAAC,CAAE,SMNvCA,ENOpB,IAAM,EAAS,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,CAAC,CAC/D,eAAgB,EAAS,GAAG,CAC5B,KAAM,EACN,aAAc,EAAS,YAAY,EAAI,IAAI,CAAC,YAAY,CACxD,cAAe,EAAS,aAAa,CACrC,qBAAsB,IAAI,CAAC,oBAAoB,AACnD,GACM,GMdcA,ENcoB,IAAI,CAAC,mBAAmB,CAAC,EAAS,IAAI,CAAC,CMb5F,AARW,INqB2F,EAAS,GAAG,CMbtFA,GNcf,IAAI,CAAC,cAAc,CAAC,EAAK,EAC7B,EACJ,GACA,QAAQA,EAAY,AAAC,IACjB,IAAI,CAAC,oBAAoB,CAAC,EAAU,EAAS,GAAG,CMxB5C,INwBwD,aAAc,EAAS,YAAY,CAAE,GAAqB,GAC1H,GACA,QAAQ,EAAQ,AAAC,IACb,IAAI,CAAC,oBAAoB,CAAC,EAAU,EAAS,GAAG,CM5B1C,IN4BwD,SAAU,EAAS,YAAY,CAAE,GAAqB,GACxH,GACA,QAAQ,EAAqB,AAAC,IAC1B,IAAI,CAAC,oBAAoB,CAAC,EAAU,EAAS,GAAG,CM7BpC,KN6BwD,sBAAuB,EAAS,YAAY,CAAE,GAAqB,GAC3I,GACA,QAAQ,EAAkC,AAAC,IACvC,IAAI,CAAC,oBAAoB,CAAC,EAAU,EAAS,GAAG,CM9BhC,KN8BwD,mCAAoC,EAAS,YAAY,CAAE,GAAqB,GAC5J,GACA,QAAQ,EAAyB,AAAC,IAC9B,IAAI,CAAC,oBAAoB,CAAC,EAAU,EAAS,GAAG,CMlCxC,KNkCwD,0BAA2B,EAAS,YAAY,CAAE,GAAqB,GAC3I,EACJ,EACJ,EACJ,CACA,qBAAqB,CAAI,CAAE,CAAc,CAAE,CAAO,CAAE,CAAQ,CAAE,CAAgB,CAAE,CAAa,CAAE,CAC3F,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAc,EAAE,AAAmB,IAAnB,EAAuB,GAAK,EAAe,CAAC,CAAE,KAC7E,IAAM,EAAS,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,CAC5D,iBACA,OACA,aAAc,GAAoB,IAAI,CAAC,YAAY,CACnD,qBAAsB,IAAI,CAAC,oBAAoB,CAC/C,UACJ,GACM,EAAgF,EAAT,EAArC,IAAI,CAAC,mBAAmB,CAAC,EAAK,IAAI,CAAC,CAC3E,IAAI,CAAC,cAAc,CAAC,EAAK,EAC7B,EACJ,CAEA,4BAA4B,CAAY,CAAE,CAAU,CAAE,CAElD,OMnDG,ANmDiE,EAAd,EAD5B,IAAI,CAAC,4BAA4B,EAE/D,CACA,mBAAmB,CAAG,CAAE,CACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EACxC,CAEA,eAAe,CAAG,CAAE,CAAK,CAAE,CACvB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAK,EACtC,CACJ,EO3EO,MACH,gBAAgB,CAAM,CAAE,CAOpB,GANA,IAAI,CAAC,SAAS,CAAG,EAAE,CAEnB,IAAI,CAAC,SAAS,CAAG,EAAO,SAAS,CACjC,IAAI,CAAC,oBAAoB,CAAG,QAAI,EAAQ,wBAClC,EAAO,oBAAoB,CAC3B,GAAsB,oBAAoB,CAC3C,IAAI,CAAC,SAAS,CAQf,GAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAClC,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,wBAAwB,CAAG,GAChC,IAAI,CAAC,uBAAuB,CAAG,GAC/B,IAAI,CAAC,WAAW,CAAG,IAAI,CACvB,IAAI,CAAC,sBAAsB,CAAG,IAAI,CAAC,kCAAkC,GAGrE,IAAI,CAAC,wBAAwB,CAAG,IAAI,CACpC,IAAI,CAAC,uBAAuB,CAAG,IAAI,CACnC,IAAI,CAAC,WAAW,CAAG,IAAI,CAAC,eAAe,CACvC,IAAI,CAAC,sBAAsB,CAAG,IAAI,CAAC,iCAAiC,OAGvE,GAAI,cAAc,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAC7C,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,wBAAwB,CAAG,GAChC,IAAI,CAAC,uBAAuB,CAAG,GAC/B,IAAI,CAAC,WAAW,CAAG,IAAI,CACvB,IAAI,CAAC,sBAAsB,CACvB,IAAI,CAAC,wCAAwC,GAGjD,IAAI,CAAC,wBAAwB,CAAG,IAAI,CACpC,IAAI,CAAC,uBAAuB,CAAG,IAAI,CACnC,IAAI,CAAC,WAAW,CAAG,IAAI,CAAC,qBAAqB,CAC7C,IAAI,CAAC,sBAAsB,CACvB,IAAI,CAAC,uCAAuC,OAGnD,GAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAC3C,IAAI,CAAC,wBAAwB,CAAG,IAAI,CACpC,IAAI,CAAC,uBAAuB,CAAG,IAAI,CACnC,IAAI,CAAC,WAAW,CAAG,IAAI,CACvB,IAAI,CAAC,sBAAsB,CAAG,IAAI,MAGlC,MAAMG,MAAM,CAAC,+CAA+C,EAAE,EAAO,oBAAoB,CAAC,CAAC,CAAC,OA5ChG,IAAI,CAAC,wBAAwB,CAAG,IAAI,CACpC,IAAI,CAAC,qBAAqB,CAAG,IAAI,CACjC,IAAI,CAAC,eAAe,CAAG,IAAI,CAC3B,IAAI,CAAC,kBAAkB,CAAG,IAAI,CAC9B,IAAI,CAAC,WAAW,CAAG,IAAI,AA2C/B,CACA,yCAAyC,CAAO,CAAE,CAC9C,EAAQ,QAAQ,CAAG,CACf,YAAayB,IACb,UAAWA,GACf,CACJ,CACA,wCAAwC,CAAO,CAAE,CAC7C,EAAQ,QAAQ,CAAG,CAKf,YAAa,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW,CACnC,UAAWA,GACf,CACJ,CACA,mCAAmC,CAAO,CAAE,CACxC,EAAQ,QAAQ,CAAG,CACf,YAAaA,IACb,UAAWA,IACX,YAAaA,IACb,UAAWA,IACX,QAASA,IACT,UAAWA,GACf,CACJ,CAMA,kCAAkC,CAAO,CAAE,CACvC,IAAM,EAAY,IAAI,CAAC,EAAE,CAAC,EAC1B,GAAQ,QAAQ,CAAG,CACf,YAAa,EAAU,WAAW,CAClC,UAAW,EAAU,SAAS,CAC9B,YAAa,EAAU,WAAW,CAClC,UAAWA,IACX,QAASA,IACT,UAAWA,GACf,CACJ,CACA,yBAAyB,CAAY,CAAE,CACnC,IAAM,EAAU,CACZ,KAAM,EACN,SAAU3B,OAAO,MAAM,CAAC,KAC5B,EACA,IAAI,CAAC,sBAAsB,CAAC,GAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACxB,CACA,uBAAwB,CACpB,IAAI,CAAC,SAAS,CAAC,GAAG,EACtB,CACA,gBAAgB,CAAW,CAAE,CAEzB,IAAM,EAAY,IAAI,CAAC,EAAE,CAAC,GACpB,EAAM,EAAY,QAAQ,AAG5B,GAAI,WAAW,EAAI,EAAU,WAAW,EAAK,IAC7C,EAAI,SAAS,CAAG,EAAU,SAAS,CACnC,EAAI,OAAO,CAAG,EAAU,OAAO,CAC/B,EAAI,SAAS,CAAG,EAAU,SAAS,GAInC,EAAI,WAAW,CAAG2B,IAClB,EAAI,SAAS,CAAGA,IAChB,EAAI,WAAW,CAAGA,IAE1B,CACA,sBAAsB,CAAW,CAAE,CAC/B,IAAM,EAAY,IAAI,CAAC,EAAE,CAAC,GAEpB,EAAM,EAAY,QAAQ,AAG5B,GAAI,WAAW,EAAI,EAAU,WAAW,EAAK,GAC7C,EAAI,SAAS,CAAG,EAAU,SAAS,CAInC,EAAI,WAAW,CAAGA,GAE1B,CACA,gBAAgB,CAAG,CAAE,CAAa,CAAE,CAChC,IAAM5B,EAAU,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAE,AN/FzD,AAAiC,UAAjC,AMgGiBA,ENhGZ,QAAQ,CMgG4B,ENhGb,CAC5B,AM+FiBA,EN/FZ,QAAQ,CM+F4B,EN/Fb,CAAG,CM+FL,EN/FY,CAGtC,AM4FiBA,EN5FZ,QAAQ,CM4F4B,EN5Fb,CAAC,IAAI,CM4FP,GAE1B,IAAI,CAAC,wBAAwB,CAACA,EAAQ,QAAQ,CAAE,EACpD,CACA,mBAAmB,CAAa,CAAE,CAAQ,CAAE,CACxC,IAAM,EAAa,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAE,AN7F5D,AAA4B,UAA5B,AM8FqB,EN9FhB,QAAQ,CM8FoB,EN9FV,CACvB,AM6FqB,EN7FhB,QAAQ,CM6FoB,EN7FV,CAAG,CM6FiB,EN7FL,CAGtC,AM0FqB,EN1FhB,QAAQ,CM0FoB,EN1FV,CAAC,IAAI,CM0Fe,GAE3C,IAAI,CAAC,uBAAuB,CAAC,EAAW,QAAQ,CAAE,EAAc,QAAQ,CAC5E,CACA,8BAA+B,CAC3B,GAAI,SAAY,IAAI,CAAC,yBAAyB,EAAG,CAC7C,IAAM,EAA+B,AxDhJ1C,SAA8C,CAAW,CAAE,CAAS,EACvE,IAAM,EAAqB,WAAc,SAIzC,GAAe,EAAoB,EAAc,iBAwBjD,EAAmB,SAAS,CAvBN,CAClB,MAAO,SAAU,CAAO,CAAE,CAAK,EAQ3B,GANI,SAAQ,IAGR,GAAU,CAAO,CAAC,EAAE,AAAD,GAGnB,SAAY,GAGhB,OAAO,IAAI,CAAC,EAAQ,IAAI,CAAC,CAAC,EAAQ,QAAQ,CAAE,EAChD,EACA,gBAAiB,WACb,IAAM,EAA2B,AAgCtC,SAAyB,CAAe,CAAE,CAAS,MAIhB,EAHU,EAGO,EAHU,EAIjE,IAAM,EAAmB,SAAO,EAAW,AAAC,GACjC,AAA8C,KAA9C,SAAW,CAAe,CAAC,EAAa,GASnD,OAAO,GAPQ,GAAAoB,EAAA,GAAI,EAAkB,AAAC,GAC3B,EACH,IAAK,CAAC,yBAAyB,EAAE,EAAa,KAAK,EAAG,EAAgB,WAAW,CAAC,IAAI,CAAE,aAAa,CAAC,CACtG,KAAM,EAA0B,cAAc,CAC9C,WAAY,CAChB,IAVR,EAnC6D,IAAI,CAAE,GACvD,GAAI,CAAC,QAAQ,GAA2B,CACpC,IAAM,EAAgB,GAAAA,EAAA,GAAI,EAA0B,AAAC,GAAiB,EAAa,GAAG,CACtF,OAAMjB,MAAM,CAAC,gCAAgC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAC/D;AAAI,CAAJ,EAAE,EAAc,IAAI,CAAC,QAAQ,OAAO,CAAC,MAAO,OAAQ,CADmB,CAEhF,CACJ,CACJ,EAEA,EAAmB,SAAS,CAAC,WAAW,CAAG,EAC3C,EAAmB,WAAW,CAAG,EAC1B,CACX,EwD+GsF,IAAI,CAAC,SAAS,CAAE,QAAK,IAAI,CAAC,oBAAoB,GAExH,OADA,IAAI,CAAC,yBAAyB,CAAG,EAC1B,CACX,CACA,OAAO,IAAI,CAAC,yBAAyB,AACzC,CACA,0CAA2C,CACvC,GAAI,SAAY,IAAI,CAAC,qCAAqC,EAAG,CACzD,IAAM,EAAiB,AxDtH5B,SAAkD,CAAW,CAAE,CAAS,CAAE,CAAe,EAC5F,IAAM,EAAqB,WAAc,EAIzC,GAAe,EAAoB,EAAc,6BACjD,IAAM,EAAoBF,OAAO,MAAM,CAAC,EAAgB,SAAS,EAMjE,MALA,QAAQ,EAAW,AAAC,IAChB,CAAiB,CAAC,EAAS,CAAG,EAClC,GACA,EAAmB,SAAS,CAAG,EAC/B,EAAmB,SAAS,CAAC,WAAW,CAAG,EACpC,CACX,EwDyG4E,IAAI,CAAC,SAAS,CAAE,QAAK,IAAI,CAAC,oBAAoB,EAAG,IAAI,CAAC,4BAA4B,IAElJ,OADA,IAAI,CAAC,qCAAqC,CAAG,EACtC,CACX,CACA,OAAO,IAAI,CAAC,qCAAqC,AACrD,CACA,8BAA+B,CAC3B,IAAM,EAAY,IAAI,CAAC,UAAU,CACjC,OAAO,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,AAC1C,CACA,kCAAmC,CAC/B,IAAM,EAAY,IAAI,CAAC,UAAU,CACjC,OAAO,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,AAC1C,CACA,oCAAqC,CACjC,IAAM,EAAkB,IAAI,CAAC,qBAAqB,CAClD,OAAO,CAAe,CAAC,EAAgB,MAAM,CAAG,EAAE,AACtD,CACJ,ECrLO,MACH,kBAAmB,CACf,IAAI,CAAC,SAAS,CAAG,EAAE,CACnB,IAAI,CAAC,eAAe,CAAG,EACvB,IAAI,CAAC,OAAO,CAAG,EACnB,CACA,IAAI,MAAM,CAAQ,CAAE,CAGhB,GAAI,AAA0B,KAA1B,IAAI,CAAC,gBAAgB,CACrB,MAAME,MAAM,oFAIhB,IAAI,CAAC,KAAK,GACV,IAAI,CAAC,SAAS,CAAG,EACjB,IAAI,CAAC,eAAe,CAAG,EAAS,MAAM,AAC1C,CACA,IAAI,OAAQ,CACR,OAAO,IAAI,CAAC,SAAS,AACzB,CAEA,YAAa,QACT,AAAI,IAAI,CAAC,OAAO,EAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,GACxC,IAAI,CAAC,YAAY,GACV,IAAI,CAAC,EAAE,CAAC,IAGR,EAEf,CAGA,GAAG,CAAO,CAAE,CACR,IAAM,EAAY,IAAI,CAAC,OAAO,CAAG,SACjC,AAAI,EAAY,GAAK,IAAI,CAAC,eAAe,EAAI,EAClC,GAGA,IAAI,CAAC,SAAS,CAAC,EAAU,AAExC,CACA,cAAe,CACX,IAAI,CAAC,OAAO,EAChB,CACA,kBAAmB,CACf,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,iBAAiB,CAAQ,CAAE,CACvB,IAAI,CAAC,OAAO,CAAG,CACnB,CACA,iBAAkB,CACd,IAAI,CAAC,OAAO,CAAG,EACnB,CACA,uBAAwB,CACpB,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,CAC3C,CACA,kBAAmB,CACf,OAAO,IAAI,CAAC,gBAAgB,EAChC,CACJ,ECvDO,MACH,qBAAqB,CAAe,CAAE,CAAM,CAAE,CAc1C,GAbA,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAEtC,IAAI,CAAC,mBAAmB,CAAG,CAAC,EAC5B,IAAI,CAAC,mBAAmB,CAAG,CAAC,EAC5B,IAAI,CAAC,gBAAgB,CAAG,IACxB,IAAI,CAAC,YAAY,CAAG,GACpB,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,iBAAiB,CAAG,EAAE,CAC3B,IAAI,CAAC,SAAS,CAAG,CAAC,EAClB,IAAI,CAAC,mBAAmB,CAAG,EAAE,CAC7B,IAAI,CAAC,UAAU,CAAG,EAAE,CACpB,IAAI,CAAC,qBAAqB,CAAG,EAAE,CAC/B,IAAI,CAAC,oBAAoB,CAAG,CAAC,EACzB,QAAI,EAAQ,qBACZ,MAAMA,MAAM,kLAIhB,GAAI,SAAQ,GAAkB,CAI1B,GAAI,QAAQ,GACR,MAAMA,MAAM,6IAIhB,GAAI,AAA0C,UAA1C,OAAO,CAAe,CAAC,EAAE,CAAC,WAAW,CACrC,MAAMA,MAAM,+KAIpB,CACA,GAAI,SAAQ,GACR,IAAI,CAAC,SAAS,CAAG,SAAO,EAAiB,CAAC,EAAKE,KAC3C,CAAG,CAACA,EAAQ,IAAI,CAAC,CAAGA,EACb,GACR,CAAC,QAEH,GAAI,QAAI,EAAiB,UAC1B,GAAM,SAAQ,QAAO,EAAgB,KAAK,GAAI,IAAc,CAE5D,IAAM,EAAe,GADC,SAAQ,QAAO,EAAgB,KAAK,GAE1D,KAAI,CAAC,SAAS,CAAG,SAAO,EAAc,CAAC,EAAKA,KACxC,CAAG,CAACA,EAAQ,IAAI,CAAC,CAAGA,EACb,GACR,CAAC,EACR,MACK,GAAI,SAAS,GACd,IAAI,CAAC,SAAS,CAAG,QAAM,QAGvB,MAAM,AAAIF,MAAM,yIAKpB,KAAI,CAAC,SAAS,CAAC,GAAM,CAAG,GAIxB,IAAM,EAAwB,GAHR,QAAI,EAAiB,SACrC,SAAQ,QAAO,EAAgB,KAAK,GACpC,QAAO,GACsC,AAAC,GAAqB,QAAQ,EAAiB,eAAe,EACjH,KAAI,CAAC,YAAY,CAAG,EACd,GACA,GAIN,GAAkB,QAAO,IAAI,CAAC,SAAS,EAC3C,CACA,WAAW,CAAQ,CAAE,CAAI,CAAE,CAAM,CAAE,CAC/B,GAAI,IAAI,CAAC,gBAAgB,CACrB,MAAMA,MAAM,CAAC,cAAc,EAAE,EAAS;AAA8E,6FAAC,EAGzH,IAAM,EAAgB,QAAI,EAAQ,iBAC5B,EAAO,aAAa,CACpB,GAAoB,aAAa,CACjC,EAAoB,QAAI,EAAQ,qBAChC,EAAO,iBAAiB,CACxB,GAAoB,iBAAiB,CAGrC,EAAY,IAAI,CAAC,gBAAgB,EAAK,GAuC5C,OAtCA,IAAI,CAAC,gBAAgB,GACrB,IAAI,CAAC,mBAAmB,CAAC,EAAU,CAAG,EACtC,IAAI,CAAC,mBAAmB,CAAC,EAAS,CAAG,EAmCVF,OAAO,MAAM,CA/BpC,AAAmB,KAAnB,IAAI,CAAC,SAAS,CACM,SAA2B,GAAG,CAAI,EAClD,GAAI,CACA,IAAI,CAAC,yBAAyB,CAAC,EAAW,EAAU,IAAI,CAAC,UAAU,EACnE,EAAK,KAAK,CAAC,IAAI,CAAE,GACjB,IAAM,EAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAE,CAErD,OADA,IAAI,CAAC,WAAW,CAAC,GACV,CACX,CACA,MAAOG,EAAG,CACN,OAAO,IAAI,CAAC,eAAe,CAACA,EAAG,EAAe,EAClD,QACQ,CACJ,IAAI,CAAC,sBAAsB,EAC/B,CACJ,EAGoB,SAA8B,GAAG,CAAI,EACrD,GAAI,CAEA,OADA,IAAI,CAAC,yBAAyB,CAAC,EAAW,EAAU,IAAI,CAAC,UAAU,EAC5D,EAAK,KAAK,CAAC,IAAI,CAAE,EAC5B,CACA,MAAOA,EAAG,CACN,OAAO,IAAI,CAAC,eAAe,CAACA,EAAG,EAAe,EAClD,QACQ,CACJ,IAAI,CAAC,sBAAsB,EAC/B,CACJ,EAEwD,CAAE,WAAU,sBAAuB,CAAK,EAExG,CACA,gBAAgBA,CAAC,CAAE,CAAmB,CAAEJ,CAAiB,CAAE,CACvD,IAAM,EAAqB,AAA2B,IAA3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAK3C,EAAgB,GAAuB,CAAC,IAAI,CAAC,cAAc,IAAM,IAAI,CAAC,eAAe,CAC3F,GAAI,GAAuBI,GAAI,CAE3B,GAAI,EAAe,CACf,IAAM,EAAgB,IAAI,CAAC,mBAAmB,GAC9C,GAAI,IAAI,CAAC,wBAAwB,CAAC,GAAgB,CAE9C,GADA,AAJWA,EAIA,cAAc,CAAG,IAAI,CAAC,QAAQ,CAAC,IACtC,IAAI,CAAC,SAAS,CAMd,OAAOJ,EAAkBI,EANT,EAChB,IAAM,EAAmB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAE,CAElE,OADA,EAAiB,aAAa,CAAG,GAC1B,CACX,CAIJ,CAEI,GAAI,IAAI,CAAC,SAAS,CAAE,CAChB,IAAM,EAAmB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAE,AAClE,GAAiB,aAAa,CAAG,GACjC,AAlBOA,EAkBI,gBAAgB,CAAG,CAClC,CAEA,MArBWA,CAuBnB,CACK,GAAI,EAKL,OAHA,IAAI,CAAC,qBAAqB,GAGnBJ,EAAkBI,EAMjC,CAGI,MAAMA,CAEd,CAEA,eAAe,CAAiB,CAAE,CAAU,CAAE,CAC1C,IAAM,EAAM,IAAI,CAAC,2BAA2B,CH/K1B,IG+KuC,GACzD,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAmB,EAAY,EACnE,CACA,oBAAoB,CAAiB,CAAE,CAAU,CAAE,CAAG,CAAE,CACpD,IACI,EADA,EAAgB,IAAI,CAAC,kBAAkB,CAAC,GAE5C,GAAI,AAA6B,YAA7B,OAAO,EAAkC,CACzC,EAAS,EAAkB,GAAG,CAC9B,IAAM,EAAY,EAAkB,IAAI,CAExC,GAAI,AAAc,SAAd,EAAyB,CACzB,IAAM,EAAuB,EAC7B,EAAgB,IACL,EAAU,IAAI,CAAC,IAAI,GAAK,EAAqB,IAAI,CAAC,IAAI,CAErE,CACJ,MAEI,EAAS,EAEb,GAAI,AAA6B,KAA7B,EAAc,IAAI,CAAC,IAAI,EACvB,OAAO,EAAO,IAAI,CAAC,IAAI,CAG/B,CACA,mBAAmB,CAAc,CAAE,CAAiB,CAAE,CAClD,IAAM,EAAQ,IAAI,CAAC,2BAA2B,CHvMtB,KGuMyC,GACjE,OAAO,IAAI,CAAC,uBAAuB,CAAC,EAAgB,EAAmB,EAC3E,CACA,wBAAwB,CAAc,CAAE,CAAiB,CAAE,CAAG,CAAE,CAC5D,IACI,EADA,EAAgB,IAAI,CAAC,kBAAkB,CAAC,GAE5C,GAAI,AAA6B,YAA7B,OAAO,EAAkC,CACzC,EAAS,EAAkB,GAAG,CAC9B,IAAM,EAAY,EAAkB,IAAI,CAExC,GAAI,AAAc,SAAd,EAAyB,CACzB,IAAM,EAAuB,EAC7B,EAAgB,IACL,EAAU,IAAI,CAAC,IAAI,GAAK,EAAqB,IAAI,CAAC,IAAI,CAErE,CACJ,MAEI,EAAS,EAEb,GAAI,AAA6B,KAA7B,EAAc,IAAI,CAAC,IAAI,EAAY,CACnC,IAAI,EAAW,IAAI,CAAC,kBAAkB,CAAC,GACvC,KAAO,AAA6B,KAA7B,EAAc,IAAI,CAAC,IAAI,GAC1B,AAAa,KAAb,GACA,EAAW,IAAI,CAAC,kBAAkB,CAAC,EAE3C,MAEI,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAgB,sBAA8B,CAAE,EAAkB,OAAO,EAMhH,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,kBAAkB,CAAE,CAAC,EAAgB,EAAkB,CAAE,EHzOvE,KGyOwG,EAAgB,GACpJ,CACA,2BAA2B,CAAc,CAAE,CAAO,CAAE,CAChD,IAAM,EAAQ,IAAI,CAAC,2BAA2B,CH1OlB,KG0OyC,GACrE,IAAI,CAAC,+BAA+B,CAAC,EAAgB,EAAS,EAClE,CACA,gCAAgC,CAAc,CAAE,CAAO,CAAE,CAAG,CAAE,CAC1D,IAAM,EAAS,EAAQ,GAAG,CACpB,EAAY,EAAQ,GAAG,CAG7B,GAAI,AAA2C,KAA3C,AAFgC,IAAI,CAAC,kBAAkB,CAAC,GAE5B,IAAI,CAAC,IAAI,EAAY,CACjD,EAAO,IAAI,CAAC,IAAI,EAGhB,IAAM,EAAyB,IACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,GAGzC,KAAO,AAA6C,KAA7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,IAGjC,IAAI,CAAC,OAAO,CAAC,GAEb,EAAO,IAAI,CAAC,IAAI,EAGpB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,2BAA2B,CAAE,CAC/D,EACA,EACA,EACA,EACA,GACH,CAAE,EHxQqB,KGwQyB,EAAgB,GACrE,MAEI,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAgB,qCAA6C,CAAE,EAAQ,OAAO,CAEzH,CACA,aAAa,CAAc,CAAE,CAAiB,CAAE,CAC5C,IAAM,EAAQ,IAAI,CAAC,2BAA2B,CHlR9B,IGkRyC,GACzD,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAgB,EAAmB,EACrE,CACA,kBAAkB,CAAc,CAAE,CAAiB,CAAE,CAAG,CAAE,CACtD,IACI,EADA,EAAoB,IAAI,CAAC,kBAAkB,CAAC,GAEhD,GAAI,AAA6B,YAA7B,OAAO,EAAkC,CACzC,EAAS,EAAkB,GAAG,CAC9B,IAAM,EAAY,EAAkB,IAAI,CAExC,GAAI,AAAc,SAAd,EAAyB,CACzB,IAAM,EAAuB,EAC7B,EAAoB,IACT,EAAU,IAAI,CAAC,IAAI,GAAK,EAAqB,IAAI,CAAC,IAAI,CAErE,CACJ,MAEI,EAAS,EAEb,IAAI,EAAW,GACf,KAAO,AAAiC,KAAjC,EAAkB,IAAI,CAAC,IAAI,GAAc,AAAa,KAAb,GAC5C,EAAW,IAAI,CAAC,kBAAkB,CAAC,GAGvC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAE,CAAC,EAAgB,EAAkB,CAAE,EH3SzE,IG2SsG,EAAgB,GAMtI,EACJ,CACA,qBAAqB,CAAc,CAAE,CAAO,CAAE,CAC1C,IAAM,EAAQ,IAAI,CAAC,2BAA2B,CHlT1B,KGkTyC,GAC7D,IAAI,CAAC,yBAAyB,CAAC,EAAgB,EAAS,EAC5D,CACA,0BAA0B,CAAc,CAAE,CAAO,CAAE,CAAG,CAAE,CACpD,IAAM,EAAS,EAAQ,GAAG,CACpB,EAAY,EAAQ,GAAG,CAG7B,GAAI,AAAoC,KAApC,AAFyB,IAAI,CAAC,kBAAkB,CAAC,GAE5B,IAAI,CAAC,IAAI,EAAY,CAC1C,EAAO,IAAI,CAAC,IAAI,EAChB,IAAM,EAAyB,IACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,GAGzC,KAAO,AAA6C,KAA7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,IAGjC,IAAI,CAAC,OAAO,CAAC,GAEb,EAAO,IAAI,CAAC,IAAI,EAGpB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,2BAA2B,CAAE,CAC/D,EACA,EACA,EACA,EACA,GACH,CAAE,EH9Ua,KG8UyB,EAAgB,GAC7D,CACJ,CACA,4BAA4B,CAAc,CAAE,CAAS,CAAE,CAAsB,CAAE,CAAM,CAAE,CAAuB,CAAE,CAC5G,KAAO,KAGH,IAAI,CAAC,OAAO,CAAC,GACb,EAAO,IAAI,CAAC,IAAI,EAQpB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,2BAA2B,CAAE,CAC/D,EACA,EACA,EACA,EACA,EACH,CAAE,EHnWyB,KGmWqB,EAAgB,EACrE,CACA,mBAAmB,CAAM,CAAE,CACvB,IAAM,EAAkB,IAAI,CAAC,gBAAgB,GAK7C,OAJA,EAAO,IAAI,CAAC,IAAI,EAIT,AAHgB,IAAI,CAAC,gBAAgB,GAGpB,CAC5B,CACA,WAAW,CAAU,CAAE,CAAU,CAAE,CAC/B,IAAM,EAAQ,IAAI,CAAC,2BAA2B,CHnXhC,IGmXyC,GACjD,EAAO,SAAQ,GAAc,EAAa,EAAW,GAAG,CAExD,EAAe,AADN,IAAI,CAAC,kBAAkB,CAAC,GACX,IAAI,CAAC,IAAI,CAAE,GACvC,GAAI,AAAiB,SAAjB,EAEA,OAAO,AADmB,CAAI,CAAC,EAAa,CACnB,GAAG,CAAC,IAAI,CAAC,IAAI,EAE1C,IAAI,CAAC,mBAAmB,CAAC,EAAY,EAAW,OAAO,CAC3D,CACA,wBAAyB,CAKrB,GAJA,IAAI,CAAC,UAAU,CAAC,GAAG,GACnB,IAAI,CAAC,qBAAqB,CAAC,GAAG,GAE9B,IAAI,CAAC,qBAAqB,GACtB,AAA2B,IAA3B,IAAI,CAAC,UAAU,CAAC,MAAM,EAAU,AAA0B,KAA1B,IAAI,CAAC,cAAc,GAAc,CACjE,IAAM,EAAoB,IAAI,CAAC,EAAE,CAAC,GAC5B,EAAS,IAAI,CAAC,oBAAoB,CAAC,6BAA6B,CAAC,CACnE,eAAgB,EAChB,SAAU,IAAI,CAAC,mBAAmB,EACtC,GACA,IAAI,CAAC,UAAU,CAAC,IAAI,GAA2B,EAAQ,GAC3D,CACJ,CACA,gBAAgB,CAAU,CAAE,CAAG,CAAE,CAAO,CAAE,CACtC,IAAI,EACJ,GAAI,CACA,IAAM,EAAO,AAAY,SAAZ,EAAwB,EAAQ,IAAI,CAAG,OAMpD,OALA,IAAI,CAAC,UAAU,CAAG,EAClB,EAAa,EAAW,KAAK,CAAC,IAAI,CAAE,GACpC,IAAI,CAAC,kBAAkB,CAAC,EAAY,AAAY,SAAZ,GAAyB,AAAkB,SAAlB,EAAQ,KAAK,CACpE,EAAQ,KAAK,CACb,EAAW,QAAQ,EAClB,CACX,CACA,MAAO,EAAG,CACN,MAAM,IAAI,CAAC,oBAAoB,CAAC,EAAG,EAAS,EAAW,QAAQ,CACnE,CACJ,CACA,qBAAqBA,CAAC,CAAE,CAAO,CAAEJ,CAAQ,CAAE,CAOvC,MANI,GAAuBI,IAAMA,AAAuB,SAAvBA,EAAE,gBAAgB,GAC/C,IAAI,CAAC,kBAAkB,CAACA,EAAE,gBAAgB,CAAE,AAAY,SAAZ,GAAyB,AAAkB,SAAlB,EAAQ,KAAK,CAC5E,EAAQ,KAAK,CACbJ,GACN,OAAOI,EAAE,gBAAgB,EAEvBA,CACV,CACA,gBAAgB,CAAO,CAAE,CAAG,CAAE,CAAO,CAAE,CACnC,IAAI,EACJ,GAAI,CACA,IAAM,EAAY,IAAI,CAAC,EAAE,CAAC,EACtB,AAA0C,MAA1C,IAAI,CAAC,YAAY,CAAC,EAAW,IAC7B,IAAI,CAAC,YAAY,GACjB,EAAgB,GAGhB,IAAI,CAAC,oBAAoB,CAAC,EAAS,EAAW,EAEtD,CACA,MAAO,EAAkB,CACrB,EAAgB,IAAI,CAAC,uBAAuB,CAAC,EAAS,EAAK,EAC/D,CAIA,OAHA,IAAI,CAAC,eAAe,CAAC,AAAY,SAAZ,GAAyB,AAAkB,SAAlB,EAAQ,KAAK,CACrD,EAAQ,KAAK,CACb,EAAQ,IAAI,CAAE,GACb,CACX,CACA,qBAAqB,CAAO,CAAE,CAAS,CAAE,CAAO,CAAE,CAE9C,IADI,EACE,EAAgB,IAAI,CAAC,EAAE,CAAC,EAY9B,OAVI,EADA,AAAY,SAAZ,GAAyB,EAAQ,OAAO,CAClC,EAAQ,OAAO,CAGf,IAAI,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,CACtD,SAAU,EACV,OAAQ,EACR,SAAU,EACV,SAAU,IAAI,CAAC,mBAAmB,EACtC,GAEE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAyB,EAAK,EAAW,GACvE,CACA,wBAAwB,CAAO,CAAE,CAAG,CAAE,CAAgB,CAAE,CAGpD,GAAI,IAAI,CAAC,eAAe,EAEpB,AAA0B,6BAA1B,EAAiB,IAAI,EACrB,CAAC,IAAI,CAAC,cAAc,GAAI,CACxB,IAAM,EAAU,IAAI,CAAC,2BAA2B,CAAC,EAAS,GAC1D,GAAI,CACA,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAS,EAC3C,CACA,MAAOA,EAAqB,CACxB,GAAIA,EAAoB,IAAI,GAAK,GAG7B,MAAM,CAGN,OAAMA,CAEd,CACJ,CAEI,MAAM,CAEd,CACA,gBAAiB,CAEb,IAAM,EAAc,IAAI,CAAC,MAAM,CACzB,EAAiB,QAAM,IAAI,CAAC,UAAU,EAC5C,MAAO,CACH,OAAQ,EACR,WAAY,IAAI,CAAC,gBAAgB,GACjC,WAAY,EACZ,UAAW,IAAI,CAAC,SAAS,AAC7B,CACJ,CACA,iBAAiB,CAAQ,CAAE,CACvB,IAAI,CAAC,MAAM,CAAG,EAAS,MAAM,CAC7B,IAAI,CAAC,gBAAgB,CAAC,EAAS,UAAU,EACzC,IAAI,CAAC,UAAU,CAAG,EAAS,UAAU,AACzC,CACA,0BAA0B,CAAS,CAAE,CAAQ,CAAE,CAAgB,CAAE,CAC7D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAErB,IAAI,CAAC,wBAAwB,CAAC,EAClC,CACA,gBAAiB,CACb,OAAO,AAAoC,IAApC,IAAI,CAAC,mBAAmB,CAAC,MAAM,AAC1C,CACA,qBAAsB,CAClB,IAAM,EAAY,IAAI,CAAC,4BAA4B,GACnD,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAU,AAC9C,CACA,wBAAwB,CAAS,CAAE,CAC/B,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAU,AAC9C,CACA,gBAAiB,CACb,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,GACzC,CACA,OAAQ,CACJ,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,mBAAmB,CAAG,EAAE,CAC7B,IAAI,CAAC,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC,UAAU,CAAG,EAAE,CAEpB,IAAI,CAAC,SAAS,CAAG,EAAE,CACnB,IAAI,CAAC,qBAAqB,CAAG,EAAE,AACnC,CACJ,EC9gBO,MACH,OAAO,CAAI,CAAE,CACT,OAAO,EAAK,IAAI,CAAC,IAAI,CACzB,CACA,QAAQ,CAAG,CAAEC,CAAO,CAAE,CAAO,CAAE,CAC3B,OAAO,IAAI,CAAC,eAAe,CAACA,EAAS,EAAK,EAC9C,CACA,QAAQ,CAAG,CAAE,CAAU,CAAE,CAAO,CAAE,CAC9B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAK,EACjD,CACA,OAAO,CAAG,CAAE,CAAiB,CAAE,CAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,GAAG,CAAG,CAAE,CAAU,CAAE,CAChB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,KAAK,CAAG,CAAE,CAAiB,CAAE,CACzB,OAAO,IAAI,CAAC,YAAY,CAAC,EAAK,EAClC,CACA,WAAW,CAAG,CAAE,CAAiB,CAAE,CAC/B,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAK,EACxC,CACA,QAAQ,CAAO,CAAE,CAAO,CAAE,CACtB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,SAAS,CAAO,CAAE,CAAO,CAAE,CACvB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAS,EAAG,EAC5C,CACA,QAAQ,CAAU,CAAE,CAAO,CAAE,CACzB,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,SAAS,CAAU,CAAE,CAAO,CAAE,CAC1B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAY,EAAG,EAC/C,CACA,OAAO,CAAiB,CAAE,CACtB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,QAAQ,CAAiB,CAAE,CACvB,OAAO,IAAI,CAAC,cAAc,CAAC,EAAmB,EAClD,CACA,GAAG,CAAU,CAAE,CACX,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAY,EACvC,CACA,KAAK,CAAiB,CAAE,CACpB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,MAAM,CAAiB,CAAE,CACrB,IAAI,CAAC,YAAY,CAAC,EAAG,EACzB,CACA,SAAS,CAAO,CAAE,CACd,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,UAAU,CAAO,CAAE,CACf,IAAI,CAAC,oBAAoB,CAAC,EAAG,EACjC,CACA,aAAa,CAAiB,CAAE,CAC5B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAG,EACtC,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,cAAc,CAAiB,CAAE,CAC7B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,CACA,iBAAiB,CAAO,CAAE,CACtB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,CACA,KAAK,CAAI,CAAE,CAAc,CAAE,EAAS,EAAmB,CAAE,CACrD,GAAI,GAAS,IAAI,CAAC,iBAAiB,CAAE,GAAO,CAKxC,IAAM,EAAQ,CACV,QALW,GAAqC,2BAA2B,CAAC,CAC5E,aAAc,EACd,YAAa,IAAI,CAAC,SAAS,AAC/B,GAGI,KAAM,qBAA6C,CACnD,SAAU,CACd,EACA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAC/B,CACA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAC5B,IAAM,EAAqB,IAAI,CAAC,UAAU,CAAC,EAAM,EAAgB,GAEjE,OADA,IAAI,CAAC,EAAK,CAAG,EACN,CACX,CACA,cAAc,CAAI,CAAE,CAAI,CAAE,EAAS,EAAmB,CAAE,CACpD,IAAM,EAAa,AdnLpB,SAAkC,CAAQ,CAAE,CAAiB,CAAE,CAAS,EAC3E,IAAM,EAAS,EAAE,CAYjB,OAVK,GAAS,EAAmB,IAI7B,EAAO,IAAI,CAAC,CACR,QAHA,CAAC,+BAA+B,EAAE,EAAS,0CAA0C,EAAE,EAAU,oDAAE,CAAC,CAIpG,KAAM,uBAA+C,CACrD,SAAU,CACd,GAEG,CACX,EcqKoD,EAAM,IAAI,CAAC,iBAAiB,CAAE,IAAI,CAAC,SAAS,CACxF,KAAI,CAAC,gBAAgB,CAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GACrD,IAAM,EAAqB,IAAI,CAAC,UAAU,CAAC,EAAM,EAAM,GAEvD,OADA,IAAI,CAAC,EAAK,CAAG,EACN,CACX,CACA,UAAU,CAAW,CAAE,CAAI,CAAE,CACzB,OAAO,WAEH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAC9B,IAAM,EAAW,IAAI,CAAC,cAAc,GACpC,GAAI,CAGA,OAFA,EAAY,KAAK,CAAC,IAAI,CAAE,GAEjB,EACX,CACA,MAAOD,EAAG,CACN,GAAI,GAAuBA,GACvB,MAAO,EAGP,OAAMA,CAEd,QACQ,CACJ,IAAI,CAAC,gBAAgB,CAAC,GACtB,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAChC,CACJ,CACJ,CAEA,oBAAqB,CACjB,OAAO,IAAI,CAAC,oBAAoB,AACpC,CACA,8BAA+B,KlD7MF,EkD8MzB,OlD9MyB,EkD8MD,QAAO,IAAI,CAAC,oBAAoB,ElD7MrD,GAAAgB,EAAA,GAAI,EAER,SAAS,EAAoB,CAAI,EACpC,SAAS,EAAkB,CAAU,EACjC,MAAO,GAAAA,EAAA,GAAI,EAAY,EAC3B,CAEA,GAAI,aAAgB,EAAa,CAC7B,IAAM,EAAwB,CAC1B,KAAM,cACN,KAAM,EAAK,eAAe,CAC1B,IAAK,EAAK,GAAG,AACjB,EAIA,MAHI,QAAS,EAAK,KAAK,GACnB,GAAsB,KAAK,CAAG,EAAK,KAAK,AAAD,EAEpC,CACX,CACK,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,cACN,WAAY,EAAkB,EAAK,UAAU,CACjD,EAEC,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,SACN,IAAK,EAAK,GAAG,CACb,WAAY,EAAkB,EAAK,UAAU,CACjD,EAEC,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,sBACN,IAAK,EAAK,GAAG,CACb,WAAY,EAAkB,EAAK,UAAU,CACjD,EAEC,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,mCACN,IAAK,EAAK,GAAG,CACb,UAAY,EAAoB,IAAI,EAAS,CAAE,aAAc,EAAK,SAAS,AAAC,IAC5E,WAAY,EAAkB,EAAK,UAAU,CACjD,OAEC,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,0BACN,IAAK,EAAK,GAAG,CACb,UAAY,EAAoB,IAAI,EAAS,CAAE,aAAc,EAAK,SAAS,AAAC,IAC5E,WAAY,EAAkB,EAAK,UAAU,CACjD,OAEC,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,aACN,IAAK,EAAK,GAAG,CACb,WAAY,EAAkB,EAAK,UAAU,CACjD,OAEC,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,cACN,IAAK,EAAK,GAAG,CACb,WAAY,EAAkB,EAAK,UAAU,CACjD,OAEC,GAAI,aAAgB,EAAU,KA/LnB,EASG,EAuLf,IAAM,EAAqB,CACvB,KAAM,WACN,KAAM,EAAK,YAAY,CAAC,IAAI,CAC5B,MAlMR,CAQmB,EATH,EAmMU,EAAK,YAAY,CAzLpC,QAAS,EAAI,KAAK,GAAK,AAAc,KAAd,EAAI,KAAK,EAR5B,EAAQ,KAAK,CAGb,EAAQ,IAAI,CA+Lf,IAAK,EAAK,GAAG,AACjB,CACI,SAAS,EAAK,KAAK,GACnB,GAAmB,aAAa,CAAG,EAAK,KAAK,AAAD,EAEhD,IAAM,EAAU,EAAK,YAAY,CAAC,OAAO,CAMzC,OALI,EAAK,YAAY,CAAC,OAAO,EACzB,GAAmB,OAAO,CAAG,AFnL1B,EEmLmC,GAChC,EAAQ,MAAM,CACd,CAAM,EAET,CACX,MACK,GAAI,aAAgB,EACrB,MAAO,CACH,KAAM,OACN,KAAM,EAAK,IAAI,CACf,QAAS,EAAK,OAAO,CACrB,WAAY,EAAkB,EAAK,UAAU,CACjD,OAIA,MAAMjB,MAAM,uBAEpB,EkD4GI,CACJ,ECrUO,MACH,iBAAiB,CAAM,CAAE,CACrB,IAAI,CAAC,OAAO,CAAG,EAAE,CACjB,IAAI,CAAC,oBAAoB,CAAG,QAAI,EAAQ,wBAClC,EAAO,oBAAoB,CAC3B,GAAsB,oBAAoB,AACpD,CACA,WAAWC,CAAK,CAAE,CACd,GAAI,GAAuBA,GAMvB,OALAA,EAAM,OAAO,CAAG,CACZ,UAAW,IAAI,CAAC,yBAAyB,GACzC,oBAAqB,QAAM,IAAI,CAAC,qBAAqB,CACzD,EACA,IAAI,CAAC,OAAO,CAAC,IAAI,CAACA,GACXA,CAGP,OAAMD,MAAM,8DAEpB,CACA,IAAI,QAAS,CACT,MAAO,QAAM,IAAI,CAAC,OAAO,CAC7B,CACA,IAAI,OAAO,CAAS,CAAE,CAClB,IAAI,CAAC,OAAO,CAAG,CACnB,CAEA,wBAAwB,CAAU,CAAE,CAAQ,CAAE,CAAiB,CAAE,CAC7D,IAAM,EAAW,IAAI,CAAC,mBAAmB,GAGnCK,EAAkB,AADa,GAAiC,EADlD,IAAI,CAAC,kBAAkB,EAAE,CAAC,EAAS,CACwC,EAAU,IAAI,CAAC,YAAY,CACtE,CAAC,EAAE,CACjDC,EAAe,EAAE,CACvB,IAAK,IAAI,EAAI,EAAG,GAAK,IAAI,CAAC,YAAY,CAAE,IACpCA,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAE9B,IAAM,EAAM,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CACxD,uBAAwBD,EACxB,OAAQC,EACR,SAAU,IAAI,CAAC,EAAE,CAAC,GAClB,sBAAuB,EACvB,SAAU,CACd,EACA,OAAM,IAAI,CAAC,UAAU,CAAC,IAAI,GAAmB,EAAK,IAAI,CAAC,EAAE,CAAC,GAAI,IAAI,CAAC,EAAE,CAAC,IAC1E,CAEA,oBAAoB,CAAU,CAAE,CAAW,CAAE,CACzC,IAAMT,EAAW,IAAI,CAAC,mBAAmB,GAGnC,EAA+B,GAAuB,EAFxC,IAAI,CAAC,kBAAkB,EAAE,CAACA,EAAS,CAE8B,IAAI,CAAC,YAAY,EAChG,EAAe,EAAE,CACvB,IAAK,IAAI,EAAI,EAAG,GAAK,IAAI,CAAC,YAAY,CAAE,IACpC,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAE9B,IAAM,EAAgB,IAAI,CAAC,EAAE,CAAC,GACxB,EAAS,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,CAC7D,oBAAqB,EACrB,OAAQ,EACR,SAAU,EACV,sBAAuB,EACvB,SAAU,IAAI,CAAC,mBAAmB,EACtC,EACA,OAAM,IAAI,CAAC,UAAU,CAAC,IAAI,GAAqB,EAAQ,IAAI,CAAC,EAAE,CAAC,GAAI,GACvE,CACJ,ECtEO,MACH,mBAAoB,CAAE,CACtB,qBAAqB,CAAa,CAAE,CAAc,CAAE,CAChD,IAAM,EAAgB,IAAI,CAAC,oBAAoB,CAAC,EAAc,CAC9D,GAAI,SAAY,GACZ,MAAMG,MAAM,CAAC,OAAO,EAAE,EAAc,kCAAkC,CAAC,EAE3E,OAAO,GAAwB,CAAC,EAAc,CAAE,EAAgB,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,YAAY,CACxG,CAGA,0BAA0B,CAAW,CAAE,CACnC,IAAME,EAAc,GAAM,EAAY,SAAS,EAI/C,OAD+B,IAAI,GADb,AADE,IAAI,CAAC,kBAAkB,EACV,CAACA,EAAY,CACqB,GAAa,YAAY,EAEpG,CACJ,ETUO,MACH,iBAAiB,CAAM,CAAE,CACrB,IAAI,CAAC,kBAAkB,CAAG,EAAE,CAC5B,IAAI,CAAC,eAAe,CAAG,EAC3B,CACA,iBAAkB,CACd,IAAI,CAAC,eAAe,CAAG,GACvB,IAAI,CAAC,UAAU,CAAC,mBAAoB,KAUhC,IAAK,IAAI,EAAI,EAAG,EAAI,GAAI,IAAK,CACzB,IAAM,EAAM,EAAI,EAAI,EAAI,EACxB,KAAI,CAAC,CAAC,OAAO,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,CAAE,CAAI,EACxC,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAM,EAAG,EAC/C,EACA,IAAI,CAAC,CAAC,OAAO,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,CAAE,CAAI,EACxC,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAM,EAAG,EAC/C,EACA,IAAI,CAAC,CAAC,MAAM,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,EACjC,OAAO,IAAI,CAAC,oBAAoB,CAAC,EAAM,EAC3C,EACA,IAAI,CAAC,CAAC,EAAE,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,EAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAM,EACvC,EACA,IAAI,CAAC,CAAC,IAAI,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,EAC/B,IAAI,CAAC,kBAAkB,CAAC,EAAG,EAC/B,EACA,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,EACnC,IAAI,CAAC,0BAA0B,CAAC,EAAG,EACvC,EACA,IAAI,CAAC,CAAC,YAAY,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,EACvC,IAAI,CAAC,wBAAwB,CAAC,EAAG,EACrC,EACA,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAI,CAAC,CAAC,CAAG,SAAU,CAAI,EAC3C,IAAI,CAAC,gCAAgC,CAAC,EAAG,EAC7C,CACJ,CAEA,IAAI,CAAC,OAAU,CAAG,SAAU,CAAG,CAAE,CAAI,CAAE,CAAI,EACvC,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAM,EAAK,EACjD,EACA,IAAI,CAAC,OAAU,CAAG,SAAU,CAAG,CAAE,CAAI,CAAE,CAAI,EACvC,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAM,EAAK,EACjD,EACA,IAAI,CAAC,MAAS,CAAG,SAAU,CAAG,CAAE,CAAI,EAChC,OAAO,IAAI,CAAC,oBAAoB,CAAC,EAAM,EAC3C,EACA,IAAI,CAAC,EAAK,CAAG,SAAU,CAAG,CAAE,CAAI,EAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAM,EACvC,EACA,IAAI,CAAC,IAAO,CAAG,SAAU,CAAG,CAAE,CAAI,EAC9B,IAAI,CAAC,kBAAkB,CAAC,EAAK,EACjC,EACA,IAAI,CAAC,UAAa,CAAG,SAAU,CAAG,CAAE,CAAI,EACpC,IAAI,CAAC,wBAAwB,CAAC,EAAK,EACvC,EACA,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,aAAa,CAChC,IAAI,CAAC,SAAS,CAAG,IAAI,CAAC,gBAAgB,CACtC,IAAI,CAAC,EAAE,CAAG,IAAI,CAAC,SAAS,AAC5B,EACJ,CACA,kBAAmB,CACf,IAAI,CAAC,eAAe,CAAG,GAKvB,IAAI,CAAC,UAAU,CAAC,6BAA8B,KAE1C,IAAK,IAAI,EAAI,EAAG,EAAI,GAAI,IAAK,CACzB,IAAM,EAAM,EAAI,EAAI,EAAI,EACxB,QAAO,AAHE,IAAI,AAGF,CAAC,CAAC,OAAO,EAAE,EAAI,CAAC,CAAC,CAC5B,OAAO,AAJE,IAAI,AAIF,CAAC,CAAC,OAAO,EAAE,EAAI,CAAC,CAAC,CAC5B,OAAO,AALE,IAAI,AAKF,CAAC,CAAC,MAAM,EAAE,EAAI,CAAC,CAAC,CAC3B,OAAO,AANE,IAAI,AAMF,CAAC,CAAC,EAAE,EAAE,EAAI,CAAC,CAAC,CACvB,OAAO,AAPE,IAAI,AAOF,CAAC,CAAC,IAAI,EAAE,EAAI,CAAC,CAAC,CACzB,OAAO,AARE,IAAI,AAQF,CAAC,CAAC,QAAQ,EAAE,EAAI,CAAC,CAAC,CAC7B,OAAO,AATE,IAAI,AASF,CAAC,CAAC,YAAY,EAAE,EAAI,CAAC,CAAC,CACjC,OAAO,AAVE,IAAI,AAUF,CAAC,CAAC,gBAAgB,EAAE,EAAI,CAAC,CAAC,AACzC,CACA,OAAO,AAZM,IAAI,CAYL,OAAU,CACtB,OAAO,AAbM,IAAI,CAaL,OAAU,CACtB,OAAO,AAdM,IAAI,CAcL,MAAS,CACrB,OAAO,AAfM,IAAI,CAeL,EAAK,CACjB,OAAO,AAhBM,IAAI,CAgBL,IAAO,CACnB,OAAO,AAjBM,IAAI,CAiBL,UAAa,CACzB,OAAO,AAlBM,IAAI,CAkBL,MAAM,CAClB,OAAO,AAnBM,IAAI,CAmBL,SAAS,CACrB,OAAO,AApBM,IAAI,CAoBL,EAAE,AAClB,EACJ,CAIA,cAAc,CAAI,CAAE,CAEpB,CAEA,iBAAiB,CAAW,CAAE,CAAI,CAAE,CAChC,MAAO,IAAM,EACjB,CAGA,UAAU,CAAO,CAAE,CAGf,OAAO,EACX,CACA,mBAAmB,CAAI,CAAE,CAAG,CAAE,CAC1B,GAAI,CACA,IAAM,EAAkB,IAAI,EAAK,CAAE,WAAY,EAAE,CAAE,KAAM,CAAK,GAK9D,OAJA,EAAgB,IAAI,CAAG,EACvB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAC7B,EAAI,IAAI,CAAC,IAAI,EACb,IAAI,CAAC,kBAAkB,CAAC,GAAG,GACpB,CACX,CACA,MAAO,EAAe,CAClB,GAAI,AAAuC,KAAvC,EAAc,oBAAoB,CAClC,GAAI,CACA,EAAc,OAAO,CACjB,EAAc,OAAO,CAArB,uJAGR,CACA,MAAO,EAAiB,CAGxB,CAEJ,MAAM,CACV,CACJ,CAEA,qBAAqB,CAAiB,CAAE,CAAU,CAAE,CAChD,OAAO,GAAW,IAAI,CAAC,IAAI,CAAE,EAAQ,EAAmB,EAC5D,CACA,yBAAyB,CAAU,CAAE,CAAiB,CAAE,CACpD,GAAW,IAAI,CAAC,IAAI,CAAE,EAAqB,EAAmB,EAClE,CACA,iCAAiC,CAAU,CAAE,CAAO,CAAE,CAClD,GAAW,IAAI,CAAC,IAAI,CAAE,EAAkC,EAAS,EAvKhD,GAwKrB,CACA,mBAAmB,CAAU,CAAE,CAAiB,CAAE,CAC9C,GAAW,IAAI,CAAC,IAAI,CAAE,EAAY,EAAmB,EACzD,CACA,2BAA2B,CAAU,CAAE,CAAO,CAAE,CAC5C,GAAW,IAAI,CAAC,IAAI,CAAE,EAAyB,EAAS,EA7KvC,GA8KrB,CACA,iBAAiB,CAAU,CAAE,CAAU,CAAE,CACrC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAE,EAAY,EAC/C,CACA,sBAAsB,CAAU,CAAE,CAAU,CAAE,CAAO,CAAE,CAEnD,GADA,GAAuB,GACnB,CAAC,GAAc,AAAgC,KAAhC,QAAI,EAAY,YAAuB,CACtD,IAAM,EAAQ,AAAIF,MAAM,CAAC,QAAQ,EAAE,GAAa,GAC3C,oEAA+C,EAAE2B,KAAK,SAAS,CAAC,GAChE;AAAG,yBAAwB,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAFe,CAIlF,OADA,EAAM,oBAAoB,CAAG,GACvB,CACV,CACA,IAAM,EAAW,SAAK,IAAI,CAAC,kBAAkB,EAEvC,EAAkB,IAAI,EAAY,CACpC,IAAK,EACL,gBAHa,EAAW,QAAQ,CAIhC,MAAO,QAAyC,KAAK,EAAI,EAAQ,KAAK,CAEtE,eAAgB,MACpB,GAEA,OADA,EAAS,UAAU,CAAC,IAAI,CAAC,GAClB,IAAI,CAAC,SAAS,CACf,GACA,EACV,CACA,sBAAsB,CAAO,CAAE,CAAU,CAAE,CAAO,CAAE,CAEhD,GADA,GAAuB,GACnB,CAAC,GAAoB,GAAU,CAC/B,IAAM,EAAQ,AAAI3B,MAAM,CAAC,QAAQ,EAAE,GAAa,GAC3C,gEAA2C,EAAE2B,KAAK,SAAS,CAAC,GAC5D;AAAG,yBAAwB,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAFe,CAIlF,OADA,EAAM,oBAAoB,CAAG,GACvB,CACV,CACA,IAAM,EAAW,SAAK,IAAI,CAAC,kBAAkB,EACvC,EAAkB,IAAI,EAAS,CACjC,IAAK,EACL,aAAc,EACd,MAAO,QAAyC,KAAK,EAAI,EAAQ,KAAK,AAC1E,GAEA,OADA,EAAS,UAAU,CAAC,IAAI,CAAC,GAClB,EACX,CACJ,EUhOO,MACH,sBAAsB,CAAM,CAAE,CAC1B,GAAI,QAAI,EAAQ,iBAAkB,CAC9B,IAAM,EAAoB,EAAO,aAAa,CACxC,EAAgB,AAA6B,UAA7B,OAAO,CAC7B,KAAI,CAAC,iBAAiB,CAAG,EACnB,EACA,IACN,IAAI,CAAC,aAAa,CAAG,EACf,EAAoB,EACpB,CACV,MAEI,IAAI,CAAC,iBAAiB,CAAG,EACzB,IAAI,CAAC,aAAa,CAAG,GAAsB,aAAa,AAE5D,KAAI,CAAC,eAAe,CAAG,EAC3B,CACA,WAAW,CAAS,CAAE,CAAS,CAAE,CAG7B,GAAI,AAAuB,KAAvB,IAAI,CAAC,aAAa,CAgBlB,OAAO,GAhBsB,EAC7B,IAAI,CAAC,eAAe,GACpB,IAAM,EAAS,AAAI5B,MAAM,IAAI,CAAC,eAAe,CAAG,GAAG,IAAI,CAAC,IACpD,KAAI,CAAC,eAAe,CAAG,IAAI,CAAC,iBAAiB,CAGjD,GAAM,CAAE,MAAI,CAAE,OAAK,CAAE,CAAG,GAAM,GAExB,EAAc,EAAO,GAAKqB,QAAQ,IAAI,CAAGA,QAAQ,GAAG,CAK1D,OAJI,IAAI,CAAC,eAAe,CAAG,IAAI,CAAC,iBAAiB,EAC7C,EAAY,CAAC,EAAE,EAAO,KAAK,EAAE,EAAU,QAAQ,EAAE,EAAK,EAAE,CAAC,EAE7D,IAAI,CAAC,eAAe,GACb,CACX,CAIJ,CACJ,E7D2IC,CqDxLa,OAAO,CAAC,AAAC,IACf,IAAM,EAAY,EAAS,SAAS,CACpCtB,OAAO,mBAAmB,CAAC,GAAW,OAAO,CAAC,AAAC,IAC3C,GAAI,AAAa,gBAAb,EACA,OAEJ,IAAM,EAAqBA,OAAO,wBAAwB,CAAC,EAAW,EAElE,IACC,GAAmB,GAAG,EAAI,EAAmB,GAAG,AAAD,EAChDA,OAAO,cAAc,CAAC,ArDmK1B,GqDnKsC,SAAS,CAAE,EAAU,GAGvD,ArDgKJ,GqDhKgB,SAAS,CAAC,EAAS,CAAG,EAAS,SAAS,CAAC,EAAS,AAEtE,EACJ,ErDgLG,OAAM,WAA8B,GACvC,YAAY,CAAe,CAAE,EAAS,EAAqB,CAAE,CACzD,IAAM,EAAc,QAAM,EAC1B,GAAY,SAAS,CAAG,GACxB,KAAK,CAAC,EAAiB,EAC3B,CACJ,C,uD8DnLW,EASA,EAaA,EA8BA,EA2BA,EAwBA,EA4BA,EA8BA,EAyBA,EA2BA,EAmBA,EAyCA,EAwBA,EAwBA,EAiCA,EA2CA,EA0BA,EAoCA,EA6BA,EA4CA,EAiBA,EAuBA,EAwBA,EA8UA,EAuBA,EAwBA,EAwBA,EA6BA,EAiCA,EAgCA,EAoCA,EAwBA,EA8DA,EA0EA,EAsCA,EAmFA,EA4CA,EA2EA,EAkBA,EA2BA,EAqCA,EA0BA,EAsBA,EAsBA,EAwBA,EAwCA,EA8BA,EAoBA,EAqBA,EAsBA,EAuBA,EAeA,GAeA,GAiDA,GAqCA,GCn0DA,GCtHA,GCdA,GCmOA,GJtOA,GAOA,GAOA,GASA,GAaA,GA8BA,GA2BA,GAwBA,GA4BA,GA8BA,GAyBA,GA2BA,GAmBA,GAyCA,GAwBA,GAwBA,GAqBA,GAYA,GA2CA,GA0BA,GAoCA,GAqBA,GAQA,GA4CA,GAiBA,GAuBA,GAwBA,GAuBA,GAuTA,GAuBA,GAwBA,GAwBA,GA6BA,GAmBA,GAcA,GAgCA,GAwBA,GAYA,GAwBA,GAqBA,GAaA,GAeA,GAaA,GAoBA,GAiBA,GAiBA,GAoBA,GAmBA,GAmBA,GAkCA,GAOA,GAwBA,GAkBA,GA4CA,GA2EA,GAkBA,GA2BA,GAqCA,GA0BA,GAsBA,GAsBA,GAwBA,GAwCA,GAgBA,GAcA,GAoBA,GAqBA,GAsBA,GAuBA,GAeA,GAeA,GAsBA,GAOA,GAOA,GAaA,GAWA,GAOA,GAOA,GAYA,GA6KP,GCh/DO,GCtHA,GCdA,GEQA,GD2NA,GErOA,G,oFCGJ,SAAS,GAAY,CAAI,CAAEI,CAAI,CAAE,CAAU,EAC9C,MAAO,CAAC,EAAE,EAAK,IAAI,CAAC,CAAC,EAAEA,EAAK,CAAC,EAAE,EAAW,CAAC,AAC/C,CAcO,MAAM,GACT,YAAY,CAAM,CAAE,CAChB,IAAI,CAAC,MAAM,CAAG,CAClB,CACA,WAAY,CACR,MAAO,EACX,CACJ,CACO,MAAM,WAAuB,GAChC,YAAY,CAAM,CAAEA,CAAS,CAAE,CAC3B,KAAK,CAAC,GACN,IAAI,CAAC,SAAS,CAAGA,CACrB,CACJ,CACO,MAAM,WAA0B,GACnC,YAAY,CAAM,CAAE,CAChB,KAAK,CAAC,EACV,CACA,WAAY,CACR,MAAO,EACX,CACJ,CACO,MAAM,WAAuB,GAChC,YAAY,CAAS,CAAE,CAAI,CAAE,CAAW,CAAE,CACtC,KAAK,CAAC,GACN,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,WAAW,CAAG,CACvB,CACA,WAAY,CACR,MAAO,EACX,CACJ,CAoHA,SAAS,GAAM,CAAG,CAAE,CAAI,CAAE,CAAK,EAC3B,IAAM,EAAU,SAAO,SAAI,EAAM,UAAU,CAAE,AAAC,GAAM,AAjFxD,UAAS,EAAK,CAAG,CAAEL,CAAI,CAAE,CAAU,EAC/B,GAAI,aAAsB,KAAQ,CAC9B,OAAO,GAAS,EAAKA,EAAM,EAAW,YAAY,CAAE,GAEnD,GAAI,aAAsB,KAAW,CAC/B,KAmQE,EAnQM,EAmQD,EAnQMA,EAmQO,EAnQD,EAoQ9B,IAAM,EAAO,EAAY,cAAc,CACjC,EAAQ,EAAI,gBAAgB,CAAC,GAAG,CAAC,GACjCY,EAAO,GAAS,EAAK,EAAa,EAAa,CACjD,KA3ViB,CA4VrB,GACM,EAAQ,GAAS,EAAK,EAAa,EAAa,CAClD,KA9ViB,CA+VrB,GAGA,OADA,GAAcA,EADD,IAAI,GAAe,EAAO,EAAM,IAEtC,CACHA,KAAAA,EACA,OACJ,CAjRwC,CAEnC,GAAI,aAAsB,KAAW,CAC/B,KAuDM,EAvDM,EAuDD,EAvDMZ,EAuDA,EAvDM,EAwDlC,IAAM,EAAQ,GAAS,EAAK,EAAM,EAAa,CAC3C,KAhJiB,CAiJrB,GACA,GAAoB,EAAK,GACzB,IAAMS,EAAO,SAAI,EAAY,UAAU,CAAE,AAAC,GAAM,EAAK,EAAK,EAAM,IAEhE,OADe,GAAS,EAAK,EAAM,EAAO,KAAgBA,EA7Dd,CAEvC,GAAI,aAAsB,KAAM,CACjC,OAAO,AA6Df,SAAgB,CAAG,CAAE,CAAI,CAAE,CAAM,EAC7B,IAAM,EAAQ,GAAS,EAAK,EAAM,EAAQ,CACtC,KAzJiB,CA0JrB,GACA,GAAoB,EAAK,GACzB,IAAM,EAAS,GAAS,EAAK,EAAM,EAAO,EAAQ,GAAM,EAAK,EAAM,QA+ErDA,EA9EE,EA8EG,EA9EE,EA8EIsB,EA9EE,EA8EQ,EA9EA,EA+EnC,IAAM,EAAQ,EAAO,IAAI,CAIzB,OAFA,GAAQ,EADI,EAAO,KAAK,EAExBtB,EAAI,WAAW,CAAC,GAAY,EAAM,SAAUsB,EAAS,GAAG,EAAE,CAAG,EACtD,CAlFX,EApEsB,EAAK/B,EAAM,GAExB,GAAI,aAAsB,KAAU,CAC9B,KAeK,EAfM,EAeD,EAfMA,EAeA,EAfM,EAgBjC,IAAM,EAAY,GAAS,EAAK,EAAM,EAAY,CAC9C,KA3G4B,CA4GhC,GACA,GAAoB,EAAK,GACzB,IAAM,EAAS,GAAS,EAAK,EAAM,EAAW,EAAY,GAAM,EAAK,EAAM,IAC3E,OAAO,GAAK,EAAK,EAAM,EAAY,EArBQ,MAEtC,GAAI,aAAsB,KAAuB,CAC3C,KAoBQ,EApBM,EAoBD,EApBMA,EAoBA,EApBM,EAqBpC,IAAM,EAAY,GAAS,EAAK,EAAM,EAAY,CAC9C,KAnH4B,CAoHhC,GACA,GAAoB,EAAK,GACzB,IAAM,EAAS,GAAS,EAAK,EAAM,EAAW,EAAY,GAAM,EAAK,EAAM,IACrE,EAAM,GAAS,EAAK,EAAM,EAAW,SAAS,CAAE,GACtD,OAAO,GAAK,EAAK,EAAM,EAAY,EAAQ,EA3BG,MAEzC,GAAI,aAAsB,KAAmB,CACvC,KA0Bc,EA1BM,EA0BD,EA1BMA,EA0BA,EA1BM,EA2B1C,IAAM,EAAY,GAAS,EAAK,EAAM,EAAY,CAC9C,KA7H4B,CA8HhC,GACA,GAAoB,EAAK,GACzB,IAAM,EAAS,GAAS,EAAK,EAAM,EAAW,EAAY,GAAM,EAAK,EAAM,IAC3E,OAAO,GAAK,EAAK,EAAM,EAAY,EAhCiB,KAGzC,CADN,IAAI,cAAsB,KAAgC,AAAhC,EAI3B,OAAO,GAAM,EAAKA,EAAM,OA4BA,EA/BM,EA+BD,EA/BMA,EA+BA,EA/BM,EAgC7C,IAAM,EAAY,GAAS,EAAK,EAAM,EAAY,CAC9C,KArI4B,CAsIhC,GACA,GAAoB,EAAK,GACzB,IAAM,EAAS,GAAS,EAAK,EAAM,EAAW,EAAY,GAAM,EAAK,EAAM,IACrE,EAAM,GAAS,EAAK,EAAM,EAAW,SAAS,CAAE,GACtD,OAAO,GAAK,EAAK,EAAM,EAAY,EAAQ,EAtCY,CAK3D,GAqD6D,EAAK,EAAM,IAAK,AAACI,GAAMA,AAAM,SAANA,UAChF,AAAI,AAAmB,IAAnB,EAAQ,MAAM,CACP,CAAO,CAAC,EAAE,CAEZ,AAAmB,IAAnB,EAAQ,MAAM,CACnB,OAGO,AA6Hf,SAAmB,CAAG,CAAE,CAAI,EACxB,IAAM,EAAa,EAAK,MAAM,CAC9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,EAAG,IAAK,KA6FxB,EAAK,EA5FlB,IACI,EADE,EAAS,CAAI,CAAC,EAAE,AAElB,AAAmC,KAAnC,EAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAC9B,GAAa,EAAO,IAAI,CAAC,WAAW,CAAC,EAAE,AAAD,EAE1C,IAAM,EAAmB,aAAsB,GACzC,EAAiB,EACjB,EAAO,CAAI,CAAC,EAAI,EAAE,CAAC,IAAI,AACzB,AAhTa,KAgTb,EAAO,IAAI,CAAC,IAAI,EAChB,AAjTa,IAiTb,EAAO,KAAK,CAAC,IAAI,EACjB,AAAe,SAAf,GACC,CAAC,GAAoB,EAAe,WAAW,GAAK,EAAO,KAAK,EAC7D,EAAW,MAAM,GAAK,EAAO,KAAK,AAAD,GAEjC,EACA,EAAe,WAAW,CAAG,EAG7B,EAAW,MAAM,CAAG,EA0Ef,EAxEG,EAwEE,EAxEG,EAAO,KAAK,CAyErC,EAAI,MAAM,CAAC,MAAM,CAAC,EAAI,MAAM,CAAC,OAAO,CAAC,GAAQ,IArErC,GAAQ,EAAO,KAAK,CAAE,EAE9B,CACA,IAAM,EAAQ,CAAI,CAAC,EAAE,CACf,EAAO,CAAI,CAAC,EAAa,EAAE,CACjC,MAAO,CACH,KAAM,EAAM,IAAI,CAChB,MAAO,EAAK,KAAK,AACrB,CACJ,EAjKyB,EAAK,EAE9B,CACA,SAAS,GAAK,CAAG,CAAE,CAAI,CAAE,CAAI,CAAE,CAAM,CAAE,CAAG,EACtC,IAAM,EAAW,EAAO,IAAI,CACtB,EAAS,EAAO,KAAK,CACrB,EAAO,GAAS,EAAK,EAAM,EAAM,CACnC,KArK0B,EAsK9B,GACA,GAAoB,EAAK,GACzB,IAAM,EAAM,GAAS,EAAK,EAAM,EAAM,CAClC,KAxKoB,EAyKxB,GAiBA,OAhBA,EAAS,QAAQ,CAAG,EACpB,EAAI,QAAQ,CAAG,EACf,EAAI,WAAW,CAAC,GAAY,EAAM,EAAM,mCAAqC,sBAAuB,EAAK,GAAG,EAAE,CAAG,EACjH,GAAQ,EAAQ,GAGZ,AAAQ,SAAR,GACA,GAAQ,EAAM,GACd,GAAQ,EAAM,KAGd,GAAQ,EAAM,GAEd,GAAQ,EAAM,EAAI,IAAI,EACtB,GAAQ,EAAI,KAAK,CAAE,IAEhB,CACH,KAAM,EACN,MAAO,CACX,CACJ,CACA,SAAS,GAAK,CAAG,CAAE,CAAI,CAAE,CAAI,CAAE,CAAM,CAAE,CAAG,EACtC,IAAM,EAAQ,EAAO,IAAI,CACnB,EAAM,EAAO,KAAK,CAClB,EAAQ,GAAS,EAAK,EAAM,EAAM,CACpC,KArM2B,EAsM/B,GACA,GAAoB,EAAK,GACzB,IAAMQ,EAAU,GAAS,EAAK,EAAM,EAAM,CACtC,KAvMoB,EAwMxB,GACM,EAAO,GAAS,EAAK,EAAM,EAAM,CACnC,KA7M0B,CA8M9B,GAgBA,OAfA,EAAM,QAAQ,CAAG,EACjBA,EAAQ,QAAQ,CAAG,EACnB,GAAQ,EAAO,GACf,GAAQ,EAAOA,GACf,GAAQ,EAAK,GACT,AAAQ,SAAR,GACA,GAAQ,EAAMA,GAEd,GAAQ,EAAM,EAAI,IAAI,EACtB,GAAQ,EAAI,KAAK,CAAE,IAGnB,GAAQ,EAAM,GAElB,EAAI,WAAW,CAAC,GAAY,EAAM,EAAM,0BAA4B,aAAc,EAAK,GAAG,EAAE,CAAG,EACxF,CACH,KAAM,EACN,MAAOA,CACX,CACJ,CAQA,SAAS,GAAoB,CAAG,CAAE,CAAK,EAGnC,OAFA,EAAI,cAAc,CAAC,IAAI,CAAC,GACxB,EAAM,QAAQ,CAAG,EAAI,cAAc,CAAC,MAAM,CAAG,EACtC,EAAM,QAAQ,AACzB,CACA,SAAS,GAAS,CAAG,CAAE,CAAI,CAAE,CAAK,CAAE,CAAU,CAAE,GAAG,CAAI,EACnD,IAAM,EAAM,GAAS,EAAK,EAAM,EAAY,CACxC,KAlPqB,EAmPrB,OACJ,GAEA,IAAK,IAAM,KADX,EAAM,GAAG,CAAG,EACM,GACV,AAAQ,SAAR,GAEA,GAAQ,EAAO,EAAI,IAAI,EACvB,GAAQ,EAAI,KAAK,CAAE,IAGnB,GAAQ,EAAO,GAQvB,OADA,EAAI,WAAW,CAAC,GAAY,EAAM,AAGtC,SAAqB,CAAU,EAC3B,GAAI,aAAsB,KAAW,CACjC,MAAO,cAEN,GAAI,aAAsB,KAAM,CACjC,MAAO,SAEN,GAAI,aAAsB,KAAU,CACrC,MAAO,aAEN,GAAI,aAAsB,KAAuB,CAClD,MAAO,0BAEN,GAAI,aAAsB,KAAmB,CAC9C,MAAO,2BAEN,GAAI,aAAsB,KAAgC,CAC3D,MAAO,wCAGP,MAAM,AAAIT,MAAM,sCAExB,EAzBkD,GAAa,EAAW,GAAG,EAAE,CAAG,EAJ/D,CACX,KAAM,EACN,MAAO,CACX,CAGJ,CA6DA,SAAS,GAAS,CAAG,CAAE,CAAI,CAAE,CAAS,CAAE,CAAU,EAC9C,IAAM,EAAO,GAAS,EAAK,EAAM,EAAY,CACzC,KA5UiB,CA6UrB,GACM,EAAQ,GAAS,EAAK,EAAM,EAAY,CAC1C,KA/UiB,CAgVrB,GAEA,OADA,GAAc,EAAM,IAAI,GAAe,EAAO,IACvC,CACH,OACA,OACJ,CACJ,CA4BA,SAAS,GAAQ,CAAC,CAAE,CAAC,EAEjB,GAAc,EADK,IAAI,GAAkB,GAE7C,CACA,SAAS,GAAS,CAAG,CAAE,CAAI,CAAE,CAAU,CAAE,CAAO,EAC5C,IAAM,EAAIF,OAAO,MAAM,CAAC,CAAE,MACtB,aAAY,uBAAwB,GAAO,OAAM,YAAa,EAAE,CAAE,oBAAqB,EAAE,CAAE,YAAa,EAAI,MAAM,CAAC,MAAM,AAAC,EAAG,GAEjI,OADA,EAAI,MAAM,CAAC,IAAI,CAAC,GACT,CACX,CACA,SAAS,GAAc,CAAK,CAAEI,CAAU,EAGhC,AAA6B,IAA7B,EAAM,WAAW,CAAC,MAAM,EACxB,GAAM,sBAAsB,CAAGA,EAAW,SAAS,EAAC,EAExD,EAAM,WAAW,CAAC,IAAI,CAACA,EAC3B,CCzYO,IAAM,GAAY,CAAC,CACnB,OAAM,GACT,aAAc,CACV,IAAI,CAAC,GAAG,CAAG,CAAC,EACZ,IAAI,CAAC,OAAO,CAAG,EAAE,AACrB,CACA,IAAI,MAAO,CACP,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,AAC9B,CACA,UAAW,CAEP,IAAI,CAAC,GAAG,CAAG,CAAC,CAChB,CACA,IAAI,CAAM,CAAE,CACR,IAAM,EAAM,GAAgB,GAGtB,KAAO,IAAI,CAAC,GAAG,GACjB,IAAI,CAAC,GAAG,CAAC,EAAI,CAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAE1B,CACA,IAAI,UAAW,CACX,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,IAAI,MAAO,CACP,MAAO,SAAI,IAAI,CAAC,OAAO,CAAE,AAACD,GAAMA,EAAE,GAAG,CACzC,CACA,IAAI,KAAM,CACN,IAAI,EAAQ,GACZ,IAAK,IAAM,KAAK,IAAI,CAAC,GAAG,CACpB,GAAS,EAAI,IAEjB,OAAO,CACX,CACJ,CACO,SAAS,GAAgB,CAAM,CAAE,EAAM,EAAI,EAC9C,MAAO,CAAC,EAAE,EAAM,CAAC,CAAC,EAAE,EAAO,GAAG,CAAC,CAAC,CAAG,GAAG,CAAC,EAAE,EAAO,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,EAAO,KAAK,CAAC,GAAG,CAAC,AAACA,GAAMA,EAAE,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,AACtI,C,mGCTA,OAAM,GACF,aAAc,CACV,IAAI,CAAC,UAAU,CAAG,EAAE,AACxB,CACA,GAAG,CAAK,CAAE,CACN,OAAO,GAAS,IAAI,CAAC,UAAU,CAAC,MAAM,EAAI,IAAI,CAAC,UAAU,CAAC,EAAM,AACpE,CACA,IAAI,CAAK,CAAE,CAAK,CAAE,CACd,IAAI,CAAC,UAAU,CAAC,EAAM,CAAG,CAC7B,CACA,UAAW,CACP,IAAI,EAAQ,GACN,EAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CACnC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,IACtB,GAAS,AAAuB,KAAvB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAY,IAAM,IAEjD,OAAO,CACX,CACJ,CACA,IAAM,GAAmB,IAAI,EACtB,OAAM,WAAgC,KAAoB,CAC7D,YAAY,CAAO,CAAE,CACjB,IAAI,EACJ,KAAK,GACL,IAAI,CAAC,OAAO,CAAG,MAAC,GAAK,QAAyC,KAAK,EAAI,EAAQ,OAAO,AAAD,EAA+B,EAAM,AAAC,GAAYmB,QAAQ,GAAG,CAAC,EACvJ,CACA,WAAW,CAAO,CAAE,CAChB,IAAI,CAAC,GAAG,CAAG,AFNZ,SAAmB,CAAK,EAC3B,IAAM,EAAM,CACR,YAAa,CAAC,EACd,eAAgB,EAAE,CAClB,iBAAkB,IAAIM,IACtB,gBAAiB,IAAIA,IACrB,OAAQ,EAAE,AACd,GACA,AAYJ,SAAyC,CAAG,CAAE,CAAK,EAC/C,IAAM7B,EAAa,EAAM,MAAM,CAC/B,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAY,IAAK,CACjC,IAAMA,EAAO,CAAK,CAAC,EAAE,CACf,EAAQ,GAAS,EAAKA,EAAM,OAAW,CACzC,KApEkB,CAqEtB,GACM,EAAO,GAAS,EAAKA,EAAM,OAAW,CACxC,KAlEiB,CAmErB,EACA,GAAM,IAAI,CAAG,EACb,EAAI,gBAAgB,CAAC,GAAG,CAACA,EAAM,GAC/B,EAAI,eAAe,CAAC,GAAG,CAACA,EAAM,EAClC,CACJ,EA1BoC,EAAK,GACrC,IAAMA,EAAa,EAAM,MAAM,CAC/B,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAY,IAAK,CACjC,IAAMA,EAAO,CAAK,CAAC,EAAE,CACf,EAAY,GAAM,EAAKA,EAAMA,EACjB,UAAd,GAGJ,AA2SR,SAAyB,CAAG,CAAE,CAAI,CAAE,CAAK,EAErC,GADc,EAAI,gBAAgB,CAAC,GAAG,CAAC,GACxB,EAAM,IAAI,EACzB,IAAM,EAAO,EAAI,eAAe,CAAC,GAAG,CAAC,GACrC,GAAQ,EAAM,KAAK,CAAE,EAMzB,EArTwB,EAAKA,EAAM,EAC/B,CACA,OAAO,CACX,EEb6B,EAAQ,KAAK,EAClC,IAAI,CAAC,IAAI,CAAG,AAuJpB,SAA0B,CAAG,EACzB,IAAM,EAAiB,EAAI,cAAc,CAAC,MAAM,CAC1C,EAAgBE,MAAM,GAC5B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAgB,IAChC,CAAa,CAAC,EAAE,CAAG,AA1M3B,SAAwB,CAAU,CAAE,CAAQ,EACxC,IAAM,EAAM,CAAC,EACb,OAAO,AAAC,IACJ,IAAM,EAAM,EAAa,QAAQ,GAC7B,EAAW,CAAG,CAAC,EAAI,QACN,SAAb,IAIA,EAAW,CACP,cAAe,EACf,WACA,OAAQ,CAAC,CACb,EACA,CAAG,CAAC,EAAI,CAAG,GARJ,CAWf,CACJ,EAwL0C,EAAI,cAAc,CAAC,EAAE,CAAE,GAE7D,OAAO,CACX,EA9JqC,IAAI,CAAC,GAAG,CACzC,CACA,0CAA2C,CACvC,MAAO,EAAE,AACb,CACA,6BAA8B,CAC1B,MAAO,EAAE,AACb,CACA,6BAA6B,CAAO,CAAE,CAClC,GAAM,CAAE,gBAAc,CAAEF,KAAAA,CAAI,CAAE,eAAa,CAAE,sBAAoB,CAAE,CAAG,EAChE,EAAO,IAAI,CAAC,IAAI,CAChB,EAAU,IAAI,CAAC,OAAO,CACtB,EAAM,GAAYA,EAAM,cAAe,GAEvC,EAAgB,AADA,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAI,CACX,QAAQ,CACtC,EAAc,SAAI,UAAkB,CACtC,aAAc,EACd,WAAY,EACZ,SAAU,cACV,KAAMA,CACV,GAAI,AAAC,GAAY,SAAI,EAAS,AAAC,GAAS,CAAI,CAAC,EAAE,GAC/C,GAAI,GAAc,EAAa,KAAU,CAAC,EAAsB,CAC5D,IAAM,EAAc,SAAO,EAAa,CAAC,EAAQ,EAAS,KACtD,SAAQ,EAAS,AAAC,IACV,IACA,CAAM,CAAC,EAAY,YAAY,CAAC,CAAG,EACnC,SAAQ,EAAY,eAAe,CAAE,AAAC,IAClC,CAAM,CAAC,EAAkB,CAAG,CAChC,GAER,GACO,GACR,CAAC,UACJ,AAAI,EACO,SAAU,CAAM,EACnB,IAAI,EAEJ,IAAM,EAAa,CAAW,CAAC,AADb,IAAI,CAAC,EAAE,CAAC,GACe,YAAY,CAAC,CACtD,GAAI,AAAW,SAAX,GAAwB,AAAe,SAAf,EAA0B,CAClD,IAAM,EAAO,MAAC,GAAK,CAAM,CAAC,EAAW,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CACnF,GAAI,AAAS,SAAT,GAAsB,AAAoB,KAApB,EAAK,IAAI,CAAC,IAAI,EACpC,MAER,CACA,OAAO,CACX,EAGO,WAEH,OAAO,CAAW,CAAC,AADD,IAAI,CAAC,EAAE,CAAC,GACG,YAAY,CAAC,AAC9C,CAER,QACK,AAAI,EACE,SAAU,CAAM,EACnB,IAAM,EAAa,IAAI,GACjB,EAAS,AAAW,SAAX,EAAuB,EAAI,EAAO,MAAM,CACvD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAAK,CAC7B,IAAM,EAAO,QAAuC,KAAK,EAAI,CAAM,CAAC,EAAE,CAAC,IAAI,CAC3E,EAAW,GAAG,CAAC,EAAG,AAAS,SAAT,GAAsB,EAAK,IAAI,CAAC,IAAI,EAC1D,CACA,IAAM,EAAS,GAAgB,IAAI,CAAC,IAAI,CAAE,EAAM,EAAe,EAAY,GAC3E,MAAO,AAAkB,UAAlB,OAAO,EAAsB,EAAS,MACjD,EAGO,WACH,IAAM,EAAS,GAAgB,IAAI,CAAC,IAAI,CAAE,EAAM,EAAe,GAAkB,GACjF,MAAO,AAAkB,UAAlB,OAAO,EAAsB,EAAS,MACjD,CAER,CACA,0BAA0B,CAAO,CAAE,CAC/B,GAAM,CAAE,gBAAc,CAAEA,KAAAA,CAAI,CAAE,UAAQ,CAAE,sBAAoB,CAAE,CAAG,EAC3D,EAAO,IAAI,CAAC,IAAI,CAChB,EAAU,IAAI,CAAC,OAAO,CACtB,EAAM,GAAYA,EAAM,EAAU,GAElC,EAAgB,AADA,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAI,CACX,QAAQ,CACtC,EAAO,SAAI,UAAkB,CAC/B,aAAc,EACd,WAAY,EACZ,WACAA,KAAAA,CACJ,GAAI,AAACI,GACM,SAAIA,EAAG,AAAC,GAAM,CAAC,CAAC,EAAE,GAE7B,GAAI,GAAc,IAAS,CAAI,CAAC,EAAE,CAAC,EAAE,EAAI,CAAC,EAAsB,CAC5D,IAAM,EAAM,CAAI,CAAC,EAAE,CACb,EAAoB,SAAQ,GAClC,GAAI,AAA6B,IAA7B,EAAkB,MAAM,EACxB,SAAQ,CAAiB,CAAC,EAAE,CAAC,eAAe,EAAG,CAE/C,IAAMA,EAAyB,AADL,CAAiB,CAAC,EAAE,CACG,YAAY,CAC7D,OAAO,WACH,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,YAAY,GAAKA,CACvC,CACJ,CACK,CACD,IAAM,EAAc,SAAO,EAAmB,CAAC,EAAQ,KAC/B,SAAhB,IACA,CAAM,CAAC,EAAY,YAAY,CAAC,CAAG,GACnC,SAAQ,EAAY,eAAe,CAAE,AAAC,IAClC,CAAM,CAAC,EAAkB,CAAG,EAChC,IAEG,GACR,CAAC,GACJ,OAAO,WAEH,MAAO,AAAwC,KAAxC,CAAW,CAAC,AADD,IAAI,CAAC,EAAE,CAAC,GACG,YAAY,CAAC,AAC9C,CACJ,CACJ,CACA,OAAO,WACH,IAAM,EAAS,GAAgB,IAAI,CAAC,IAAI,CAAE,EAAM,EAAe,GAAkB,GACjF,MAAO,AAAkB,UAAlB,OAAO,GAA8B,AAAW,IAAX,CAChD,CACJ,CACJ,CACA,SAAS,GAAc,CAAS,CAAE,EAAa,EAAI,EAC/C,IAAM,EAAU,IAAIU,IACpB,IAAK,IAAM,KAAO,EAAW,CACzB,IAAM,EAAS,IAAIA,IACnB,IAAK,IAAM,KAAW,EAAK,CACvB,GAAI,AAAY,SAAZ,EACA,IAAI,EAKA,MAAO,QAHP,MAOR,IAAK,IAAM,IADK,CAAC,EAAQ,YAAY,CAAC,CAAC,MAAM,CAAC,EAAQ,eAAe,EAEjE,GAAI,EAAQ,GAAG,CAAC,GACZ,IAAI,CAAC,EAAO,GAAG,CAAC,GACZ,MAAO,EACX,MAGA,EAAQ,GAAG,CAAC,GACZ,EAAO,GAAG,CAAC,EAGvB,CACJ,CACA,MAAO,EACX,CASA,SAAS,GAAgB,CAAS,CAAE,CAAQ,CAAE,CAAY,CAAE,CAAO,EAC/D,IAAM,EAAM,CAAS,CAAC,EAAS,CAAC,GAC5B,EAAQ,EAAI,KAAK,CACrB,GAAI,AAAU,SAAV,EAAqB,CACrB,IAAM,EAAU,AAoNxB,SAA2B,CAAQ,EAC/B,IAAM,EAAU,IAAI,GACd,EAAsB,EAAS,WAAW,CAAC,MAAM,CACvD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAqB,IAOrC,GALe,CACX,MAFW,EAAS,WAAW,CAAC,EAAE,CAAC,MAAM,CAGzC,IAAK,EACL,MAAO,EAAE,AACb,EACgB,GAEpB,OAAO,CACX,EAjO0C,EAAI,aAAa,EACnD,EAAQ,GAAY,EAAK,GAAY,IACrC,EAAI,KAAK,CAAG,CAChB,CAEA,OADY,GAAiB,KAAK,CAAC,IAAI,CAAE,CAAC,EAAK,EAAO,EAAc,EAAQ,CAEhF,CACA,SAAS,GAAiB,CAAG,CAAE,CAAE,CAAE,CAAY,CAAE,CAAO,EACpD,IAAI,EAAY,EACZ,EAAI,EACF,EAAO,EAAE,CACX,EAAI,IAAI,CAAC,EAAE,CAAC,KAChB,OAAa,KA2Ge,EAAO,EA1G/B,IAAI,GA0GoB,EA1GO,EA0GA,EA1GW,EA2GvC,EAAM,KAAK,CAAC,EAAM,YAAY,CAAC,EAvGlC,GAHI,AAAM,SAAN,GACA,GAAI,GAAuB,KAAK,CAAC,IAAI,CAAE,CAAC,EAAK,EAAW,EAAG,EAAG,EAAc,EAAQ,GAEpF,IAAM,GACN,OAAO,AA0FnB,SAAmC,CAAI,CAAE,CAAQ,CAAE,CAAO,MCpT1C,EAAON,EDyTnB,MAAO,CACH,YAAa,EACb,kBAAkB,EC3TV,EDsTkB,AADN,SAAQ,EAAS,OAAO,CAAC,QAAQ,CAAE,AAACJ,GAAMA,EAAE,KAAK,CAAC,WAAW,EAEhF,MAAM,CAAC,AAACA,GAAMA,aAAa,IAC3B,GAAG,CAAC,AAACA,GAAMA,EAAE,SAAS,ECxTRI,EDwTW,AAACJ,GAAMA,EAAE,YAAY,CCvT9C,AAAC,GAAS,EAAM,MAAM,CAAI,SAAS,EAAO,SAAaI,EAAU,IAAM,EAAE,ED2T1E,UAAW,CACf,CACJ,EApG6C,EAAM,EAAW,GAEtD,GAAI,AAAoB,KAApB,EAAE,aAAa,CACf,OAAO,EAAE,UAAU,CAEvB,EAAY,EACZ,EAAK,IAAI,CAAC,GACV,EAAI,IAAI,CAAC,EAAE,CAAC,IAChB,CACJ,CACA,SAAS,GAAuB,CAAG,CAAE,CAAS,CAAE,CAAK,CAAE,CAAS,CAAE,CAAY,CAAE,CAAO,EACnF,IAAM,EAAQ,AA6FlB,SAAyB,CAAO,CAAEH,CAAK,CAAE,CAAY,EACjD,IAuBI,EAvBEG,EAAe,IAAI,GACnB,EAAoB,EAAE,CAC5B,IAAK,IAAM,KAAK,EAAQ,QAAQ,CAAE,CAC9B,GAAI,AAA2B,KAA3B,EAAa,EAAE,CAAC,EAAE,GAAG,EACrB,SAEJ,GAAI,AFjViB,IEiVjB,EAAE,KAAK,CAAC,IAAI,CAAoB,CAChC,EAAkB,IAAI,CAAC,GACvB,QACJ,CACA,IAAM,EAAmB,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM,CACnD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAkB,IAAK,CAEvC,IAAM,EAAS,AA2B3B,SAA4B,CAAU,CAAEH,CAAK,EACzC,GAAI,aAAsB,IACtB,UAAaA,EAAO,EAAW,SAAS,EACxC,OAAO,EAAW,MAAM,AAGhC,EAlC+B,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,CACKA,EAC1C,AAAW,UAAX,GACAG,EAAa,GAAG,CAAC,CACb,MAAO,EACP,IAAK,EAAE,GAAG,CACV,MAAO,EAAE,KAAK,AAClB,EAER,CACJ,CAKA,GAHI,AAA6B,IAA7B,EAAkB,MAAM,EAAUA,AAAsB,IAAtBA,EAAa,IAAI,EACnD,GAAQA,CAAW,EAEnB,AAAU,SAAV,EAEA,IAAK,IAAM,KADX,EAAQ,IAAI,GACIA,EAAa,QAAQ,EACjC,GAAQ,EAAG,GAGnB,GAAI,EAAkB,MAAM,CAAG,GAAK,CAAC,AAwHzC,SAAkC,CAAO,EACrC,IAAK,IAAM,KAAK,EAAQ,QAAQ,CAC5B,GAAI,AFteiB,IEsejB,EAAE,KAAK,CAAC,IAAI,CACZ,MAAO,GAGf,MAAO,EACX,EA/HkE,GAC1D,IAAK,IAAM,KAAK,EACZ,EAAM,GAAG,CAAC,GAGlB,OAAO,CACX,EArIkC,EAAU,OAAO,CAAE,EAAO,GACxD,GAAI,AAAe,IAAf,EAAM,IAAI,CAEV,OADA,GAAW,EAAK,EAAW,EAAO,IAC3B,GAEX,IAAI,EAAW,GAAY,GACrB,EAAe,AAuIzB,SAAsB,CAAO,CAAE,CAAY,EACvC,IAAI,EACJ,IAAK,IAAM,KAAK,EAAQ,QAAQ,CAC5B,GAAI,AAA2B,KAA3B,EAAa,EAAE,CAAC,EAAE,GAAG,EACrB,IAAI,AAAQ,SAAR,EACA,EAAM,EAAE,GAAG,MAEV,GAAI,IAAQ,EAAE,GAAG,CAClB,MACJ,CAGR,OAAO,CACX,EApJsC,EAAO,GACzC,GAAI,AAAiB,SAAjB,EACA,EAAS,aAAa,CAAG,GACzB,EAAS,UAAU,CAAG,EACtB,EAAS,OAAO,CAAC,SAAS,CAAG,OAE5B,GAAI,AA2Pb,SAA0C,CAAO,EAC7C,GAAI,AATR,SAAoC,CAAO,EACvC,IAAK,IAAM,KAAK,EAAQ,QAAQ,CAC5B,GAAI,AF9eiB,IE8ejB,EAAE,KAAK,CAAC,IAAI,CACZ,MAAO,GAGf,MAAO,EACX,EAEmC,GAC3B,MAAO,GAEX,IAAM,EAAU,AAIpB,SAA+B,CAAO,EAClC,IAAM,EAAe,IAAIqB,IACzB,IAAK,IAAM,KAAK,EAAS,CACrB,IAAM,EAAM,GAAgB,EAAG,IAC3B,EAAO,EAAa,GAAG,CAAC,EACf,UAAT,IACA,EAAO,CAAC,EACR,EAAa,GAAG,CAAC,EAAK,IAE1B,CAAI,CAAC,EAAE,GAAG,CAAC,CAAG,EAClB,CACA,OAAO,CACX,EAhB0C,EAAQ,QAAQ,EAEtD,OADkB,AAgBtB,SAA8B,CAAO,EACjC,IAAK,IAAM,KAAS3B,MAAM,IAAI,CAAC,EAAQ,MAAM,IACzC,GAAID,OAAO,IAAI,CAAC,GAAO,MAAM,CAAG,EAC5B,MAAO,GAGf,MAAO,EACX,EAvB2C,IAAY,CAAC,AAwBxD,SAAsC,CAAO,EACzC,IAAK,IAAM,KAASC,MAAM,IAAI,CAAC,EAAQ,MAAM,IACzC,GAAID,AAA8B,IAA9BA,OAAO,IAAI,CAAC,GAAO,MAAM,CACzB,MAAO,GAGf,MAAO,EACX,EA/BqF,EAErF,EAlQ8C,GAAQ,CAC9C,IAAM,EAAa,SAAI,EAAM,IAAI,CACjC,GAAS,aAAa,CAAG,GACzB,EAAS,UAAU,CAAG,EACtB,EAAS,OAAO,CAAC,SAAS,CAAG,EAC7B,GAAyB,KAAK,CAAC,IAAI,CAAE,CAAC,EAAK,EAAW,EAAM,IAAI,CAAE,EAAQ,CAC9E,CAEA,OADW,GAAW,EAAK,EAAW,EAAO,EAEjD,CACA,SAAS,GAAyB,CAAG,CAAE,CAAS,CAAE,CAAgB,CAAE,CAAO,EACvE,IAAM,EAAa,EAAE,CACrB,IAAK,IAAI,EAAI,EAAG,GAAK,EAAW,IAC5B,EAAW,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,SAAS,EAExC,IAAMQ,EAAW,EAAI,aAAa,CASlC,EANgB,AAQpB,SAA6B,CAAO,EAChC,IAAM,EAAU,SAAI,EAAQ,UAAU,CAAE,AAAC,GAAY,UAAW,IAAU,IAAI,CAAC,MACzE,EAAa,AAA2B,IAA3B,EAAQ,UAAU,CAAC,GAAG,CAAS,GAAK,EAAQ,UAAU,CAAC,GAAG,CACzE,EAAc,CAAC,kCAAkC,EAAE,EAAQ,gBAAgB,CAAC,IAAI,CAAC,MAAM,MAAM,EAAE,AASvG,SAA8B,CAAI,EAC9B,GAAI,aAAgB,KAAW,CAC3B,MAAO,UAEN,GAAI,aAAgB,KAAM,CAC3B,MAAO,SAEN,GAAI,aAAgB,KAAW,CAChC,MAAO,KAEN,GAAI,aAAgB,KAAmB,CACxC,MAAO,eAEN,GAAI,aAAgB,KAAgC,CACrD,MAAO,wBAEN,GAAI,aAAgB,KAAuB,CAC5C,MAAO,gBAEN,GAAI,aAAgB,KAAU,CAC/B,MAAO,YAEN,GAAI,aAAgB,KAAQ,CAC7B,MAAO,eAGP,MAAMN,MAAM,uBAEpB,EArC4H,EAAQ,UAAU,EAAE,EAAE,EACzI,UAAS,EAAE,EAAQ,YAAY,CAAC,IAAI,CACpC;AAAS,CAAR,EAAE,EAAQ;AAA2D,CAFgF,CAO3J,OAHI,EACI,CAAC;AAA4F,CAAC,CAC9F,sBAEZ,EAnBwC,CAChC,aAHiBM,EAAS,IAAI,CAI9B,mBACA,WAJeA,EAAS,UAAU,CAKlC,YACJ,GAEJ,CAsHA,SAAS,GAAY,CAAO,EACxB,MAAO,CACH,QAAS,EACT,MAAO,CAAC,EACR,cAAe,GACf,WAAY,EAChB,CACJ,CACA,SAAS,GAAW,CAAG,CAAE,CAAI,CAAE,CAAK,CAAE,CAAE,EAGpC,OAFA,EAAK,GAAY,EAAK,GACtB,EAAK,KAAK,CAAC,EAAM,YAAY,CAAC,CAAG,EAC1B,CACX,CACA,SAAS,GAAY,CAAG,CAAE,CAAK,EAC3B,GAAI,IAAU,GACV,OAAO,EAIX,IAAM,EAAS,EAAM,OAAO,CAAC,GAAG,CAC1B,EAAW,EAAI,MAAM,CAAC,EAAO,QACnC,AAAI,AAAa,SAAb,EACO,GAEX,EAAM,OAAO,CAAC,QAAQ,GACtB,EAAI,MAAM,CAAC,EAAO,CAAG,EACd,EACX,CAeA,SAAS,GAAQ,CAAM,CAAE,CAAO,EAC5B,IAAM,EAAI,EAAO,KAAK,CACtB,GAAI,AFpbqB,IEobrB,EAAE,IAAI,CAAoB,CAC1B,GAAI,EAAO,KAAK,CAAC,MAAM,CAAG,EAAG,CACzB,IAAM,EAAW,IAAI,EAAO,KAAK,CAAC,CAOlC,GALqB,CACjB,MAFgB,EAAS,GAAG,GAG5B,IAAK,EAAO,GAAG,CACf,MAAO,CACX,EACsB,EAC1B,MAII,EAAQ,GAAG,CAAC,GAEhB,MACJ,CACI,AAAC,EAAE,sBAAsB,EACzB,EAAQ,GAAG,CAAC,GAEhB,IAAM,EAAmB,EAAE,WAAW,CAAC,MAAM,CAC7C,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAkBA,IAAK,CAEvC,IAAM,EAAI,AAMlB,SAA0B,CAAM,CAAEH,CAAU,EACxC,GAAIA,aAAsB,GACtB,MAAO,CACH,MAAOA,EAAW,MAAM,CACxB,IAAK,EAAO,GAAG,CACf,MAAO,EAAO,KAAK,AACvB,EAEC,GAAIA,aAAsB,GAAgB,CAC3C,IAAM,EAAQ,IAAI,EAAO,KAAK,CAAEA,EAAW,WAAW,CAAC,CACvD,MAAO,CACH,MAAOA,EAAW,MAAM,CACxB,IAAK,EAAO,GAAG,CACf,OACJ,CACJ,CAEJ,EAvBmC,EADR,EAAE,WAAW,CAACG,EAAE,CAE/B,AAAM,UAAN,GACA,GAAQ,EAAG,EAEnB,CACJ,C,eTzdI,CACD,KAAgB,IAAc,CAAC,EAAC,EADnB,EAAE,CAHd,SAAY,CAAK,EACb,MAAO,AAAiB,UAAjB,OAAO,CAClB,EAQA,AACD,KAAQ,IAAM,CAAC,EAAC,EADX,EAAE,CAHN,SAAY,CAAK,EACb,MAAO,AAAiB,UAAjB,OAAO,CAClB,EAKA,CADO,EAOR,IAAY,IAAU,CAAC,IANd,SAAS,CAAG,YACpB,EAAQ,SAAS,CAAG,WAIpB,EAAQ,EAAE,CAHV,SAAY,CAAK,EACb,MAAO,AAAiB,UAAjB,OAAO,GAAsB,EAAQ,SAAS,EAAI,GAAS,GAAS,EAAQ,SAAS,AAChG,EAKA,CADO,EAOR,IAAa,IAAW,CAAC,IANf,SAAS,CAAG,EACrB,EAAS,SAAS,CAAG,WAIrB,EAAS,EAAE,CAHX,SAAY,CAAK,EACb,MAAO,AAAiB,UAAjB,OAAO,GAAsB,EAAS,SAAS,EAAI,GAAS,GAAS,EAAS,SAAS,AAClG,EAuBA,CAfO,EAwBR,IAAa,IAAW,CAAC,IATf,MAAM,CATf,SAAgB,CAAI,CAAE,CAAS,EAO3B,OANI,IAASD,OAAO,SAAS,EACzB,GAAO,GAAS,SAAS,AAAD,EAExB,IAAcA,OAAO,SAAS,EAC9B,GAAY,GAAS,SAAS,AAAD,EAE1B,CAAE,OAAM,WAAU,CAC7B,EASA,EAAS,EAAE,CAJX,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADP,IACsB,GAAG,QAAQ,CAAC,AADlC,EAC4C,IAAI,GAAK,GAAG,QAAQ,CAAC,AADjE,EAC2E,SAAS,CACxG,EAoBA,CAZO,EAqBR,IAAU,IAAQ,CAAC,IATZ,MAAM,CAXZ,SAAgB,CAAG,CAAEF,CAAG,CAAE,CAAK,CAAE,CAAI,EACjC,GAAI,GAAG,QAAQ,CAAC,IAAQ,GAAG,QAAQ,CAACA,IAAQ,GAAG,QAAQ,CAAC,IAAU,GAAG,QAAQ,CAAC,GAC1E,MAAO,CAAE,MAAO,GAAS,MAAM,CAAC,EAAKA,GAAM,IAAK,GAAS,MAAM,CAAC,EAAO,EAAM,EAE5E,GAAI,GAAS,EAAE,CAAC,IAAQ,GAAS,EAAE,CAACA,GACrC,MAAO,CAAE,MAAO,EAAK,IAAKA,CAAI,CAG9B,OAAM,AAAIF,MAAM,CAAC,2CAA2C,EAAE,EAAI,EAAE,EAAEE,EAAI,EAAE,EAAE,EAAM,EAAE,EAAE,EAAK,CAAC,CAAC,CAEvG,EASA,EAAM,EAAE,CAJR,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADP,IACsB,GAAS,EAAE,CAAC,AADlC,EAC4C,KAAK,GAAK,GAAS,EAAE,CAAC,AADlE,EAC4E,GAAG,CACnG,EAiBA,CATO,EAkBR,IAAa,IAAW,CAAC,IATf,MAAM,CAHf,SAAgB,CAAG,CAAE,CAAK,EACtB,MAAO,CAAE,MAAK,OAAM,CACxB,EASA,EAAS,EAAE,CAJX,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADP,IACsB,GAAM,EAAE,CAAC,AAD/B,EACyC,KAAK,GAAM,IAAG,MAAM,CAAC,AAD9D,EACwE,GAAG,GAAK,GAAG,SAAS,CAAC,AAD7F,EACuG,GAAG,EAC9H,EAmBA,CAXO,EAsBR,IAAiB,IAAe,CAAC,IAXnB,MAAM,CAHnB,SAAgB,CAAS,CAAEA,CAAW,CAAE,CAAoB,CAAE,CAAoB,EAC9E,MAAO,CAAE,YAAWA,YAAAA,EAAa,uBAAsB,sBAAqB,CAChF,EAWA,EAAa,EAAE,CANf,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADP,IACsB,GAAM,EAAE,CAAC,AAD/B,EACyC,WAAW,GAAK,GAAG,MAAM,CAAC,AADnE,EAC6E,SAAS,GAC/F,GAAM,EAAE,CAAC,AAFA,EAEU,oBAAoB,GACtC,IAAM,EAAE,CAAC,AAHD,EAGW,oBAAoB,GAAK,GAAG,SAAS,CAAC,AAHjD,EAG2D,oBAAoB,EACnG,EAoBA,CAZO,EAwBR,IAAU,IAAQ,CAAC,IAZZ,MAAM,CARZ,SAAgB,CAAG,CAAE,CAAK,CAAE,CAAI,CAAE,CAAK,EACnC,MAAO,CACH,MACA,QACA,OACA,OACJ,CACJ,EAYA,EAAM,EAAE,CAPR,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAG,WAAW,CAAC,AADnC,EAC6C,GAAG,CAAE,EAAG,IAChE,GAAG,WAAW,CAAC,AAFJ,EAEc,KAAK,CAAE,EAAG,IACnC,GAAG,WAAW,CAAC,AAHJ,EAGc,IAAI,CAAE,EAAG,IAClC,GAAG,WAAW,CAAC,AAJJ,EAIc,KAAK,CAAE,EAAG,EAC9C,EAkBA,CAVO,EAmBR,IAAqB,IAAmB,CAAC,IATvB,MAAM,CANvB,SAAgB,CAAK,CAAE,CAAK,EACxB,MAAO,CACH,QACA,OACJ,CACJ,EASA,EAAiB,EAAE,CAJnB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAM,EAAE,CAAC,AAD7B,EACuC,KAAK,GAAK,GAAM,EAAE,CAAC,AAD1D,EACoE,KAAK,CAC/F,EAmBA,CAXO,EAsBR,IAAsB,IAAoB,CAAC,IAXxB,MAAM,CAPxB,SAAgB,CAAK,CAAEA,CAAQ,CAAE,CAAmB,EAChD,MAAO,CACH,QACAA,SAAAA,EACA,qBACJ,CACJ,EAWA,EAAkB,EAAE,CANpB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAG,MAAM,CAAC,AAD9B,EACwC,KAAK,GACvD,IAAG,SAAS,CAAC,AAFH,EAEa,QAAQ,GAAK,GAAS,EAAE,CAFrC,EAE+C,GACzD,IAAG,SAAS,CAAC,AAHH,EAGa,mBAAmB,GAAK,GAAG,UAAU,CAAC,AAHnD,EAG6D,mBAAmB,CAAE,GAAS,EAAE,EACnH,EAWA,CAJO,EAaR,IAAqB,IAAmB,CAAC,IATvB,OAAO,CAAG,UAI3B,EAAiB,OAAO,CAAG,UAI3B,EAAiB,MAAM,CAAG,SA8B1B,CAvBO,EAmCR,IAAiB,IAAe,CAAC,IAZnB,MAAM,CAnBnB,SAAgB,CAAS,CAAE,CAAO,CAAE,CAAc,CAAE,CAAY,CAAE,CAAI,CAAE,CAAa,EACjF,IAAM,EAAS,CACX,YACA,SACJ,EAaA,OAZI,GAAG,OAAO,CAAC,IACX,GAAO,cAAc,CAAG,CAAa,EAErC,GAAG,OAAO,CAAC,IACX,GAAO,YAAY,CAAG,CAAW,EAEjC,GAAG,OAAO,CAAC,IACX,GAAO,IAAI,CAAG,CAAG,EAEjB,GAAG,OAAO,CAAC,IACX,GAAO,aAAa,CAAG,CAAY,EAEhC,CACX,EAYA,EAAa,EAAE,CAPf,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAG,QAAQ,CAAC,AADhC,EAC0C,SAAS,GAAK,GAAG,QAAQ,CAAC,AADpE,EAC8E,SAAS,GACjG,IAAG,SAAS,CAAC,AAFH,EAEa,cAAc,GAAK,GAAG,QAAQ,CAAC,AAF5C,EAEsD,cAAc,IAC9E,IAAG,SAAS,CAAC,AAHH,EAGa,YAAY,GAAK,GAAG,QAAQ,CAAC,AAH1C,EAGoD,YAAY,IAC1E,IAAG,SAAS,CAAC,AAJH,EAIa,IAAI,GAAK,GAAG,MAAM,CAAC,AAJhC,EAI0C,IAAI,EACpE,EAkBA,CAVO,EAmBR,IAAiC,IAA+B,CAAC,IATnC,MAAM,CANnC,SAAgB,CAAQ,CAAE,CAAO,EAC7B,MAAO,CACH,WACA,SACJ,CACJ,EASA,EAA6B,EAAE,CAJ/B,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAS,EAAE,CAAC,AAD5B,EACsC,QAAQ,GAAK,GAAG,MAAM,CAAC,AAD7D,EACuE,OAAO,CAClG,EAWA,CAJO,EAiBR,IAAuB,IAAqB,CAAC,IAbzB,KAAK,CAAG,EAI3B,EAAmB,OAAO,CAAG,EAI7B,EAAmB,WAAW,CAAG,EAIjC,EAAmB,IAAI,CAAG,EAe1B,CAPO,EAcR,IAAkB,IAAgB,CAAC,IAPpB,WAAW,CAAG,EAM5B,EAAc,UAAU,CAAG,EAa3B,AACD,KAAoB,IAAkB,CAAC,EAAC,EADvB,EAAE,CAJlB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAG,MAAM,CAAC,AAD9B,EACwC,IAAI,CAClE,EA4BA,CApBO,EAqCR,IAAe,IAAa,CAAC,IAjBjB,MAAM,CAhBjB,SAAgB,CAAK,CAAE,CAAO,CAAE,CAAQ,CAAE,CAAI,CAAE,CAAM,CAAE,CAAkB,EACtE,IAAI,EAAS,CAAE,QAAO,SAAQ,EAa9B,OAZI,GAAG,OAAO,CAAC,IACX,GAAO,QAAQ,CAAG,CAAO,EAEzB,GAAG,OAAO,CAAC,IACX,GAAO,IAAI,CAAG,CAAG,EAEjB,GAAG,OAAO,CAAC,IACX,GAAO,MAAM,CAAG,CAAK,EAErB,GAAG,OAAO,CAAC,IACX,GAAO,kBAAkB,CAAG,CAAiB,EAE1C,CACX,EAiBA,EAAW,EAAE,CAZb,SAAY,CAAK,EACb,IAAI,EAEJ,OAAO,GAAG,OAAO,CADD,IAET,GAAM,EAAE,CAAC,AAFA,EAEU,KAAK,GACxB,GAAG,MAAM,CAAC,AAHD,EAGW,OAAO,GAC1B,IAAG,MAAM,CAAC,AAJF,EAIY,QAAQ,GAAK,GAAG,SAAS,CAAC,AAJtC,EAIgD,QAAQ,IAChE,IAAG,OAAO,CAAC,AALH,EAKa,IAAI,GAAK,GAAG,MAAM,CAAC,AALhC,EAK0C,IAAI,GAAK,GAAG,SAAS,CAAC,AALhE,EAK0E,IAAI,IACtF,IAAG,SAAS,CAAC,AANL,EAMe,eAAe,GAAM,GAAG,MAAM,CAAC,MAAC,GAAK,AANpD,EAM8D,eAAe,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,GACpI,IAAG,MAAM,CAAC,AAPF,EAOY,MAAM,GAAK,GAAG,SAAS,CAAC,AAPpC,EAO8C,MAAM,IAC5D,IAAG,SAAS,CAAC,AARL,EAQe,kBAAkB,GAAK,GAAG,UAAU,CAAC,AARpD,EAQ8D,kBAAkB,CAAE,GAA6B,EAAE,EACrI,EAmBA,CAXO,EAoBR,IAAY,IAAU,CAAC,IATd,MAAM,CAPd,SAAgB,CAAK,CAAE,CAAO,CAAE,GAAG,CAAI,EACnC,IAAI,EAAS,CAAE,QAAO,SAAQ,EAI9B,OAHI,GAAG,OAAO,CAAC,IAAS,EAAK,MAAM,CAAG,GAClC,GAAO,SAAS,CAAG,CAAG,EAEnB,CACX,EASA,EAAQ,EAAE,CAJV,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,MAAM,CAAC,AAD1B,EACoC,KAAK,GAAK,GAAG,MAAM,CAAC,AADxD,EACkE,OAAO,CAC7F,EAiBA,CATO,EAkCR,IAAa,IAAW,CAAC,IAzBf,OAAO,CAHhB,SAAiB,CAAK,CAAE,CAAO,EAC3B,MAAO,CAAE,QAAO,SAAQ,CAC5B,EAUA,EAAS,MAAM,CAHf,SAAgB,CAAQ,CAAE,CAAO,EAC7B,MAAO,CAAE,MAAO,CAAE,MAAO,EAAU,IAAK,CAAS,EAAG,SAAQ,CAChE,EASA,EAAS,GAAG,CAHZ,SAAa,CAAK,EACd,MAAO,CAAE,QAAO,QAAS,EAAG,CAChC,EAQA,EAAS,EAAE,CANX,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IAEX,GAAG,MAAM,CAAC,AAFC,EAES,OAAO,GAC3B,GAAM,EAAE,CAAC,AAHE,EAGQ,KAAK,CACnC,EAeA,CAXO,EAmBR,IAAqB,IAAmB,CAAC,IARvB,MAAM,CAVvB,SAAgB,CAAK,CAAE,CAAiB,CAAE,CAAW,EACjD,IAAM,EAAS,CAAE,OAAM,EAOvB,OANI,AAAsB,SAAtB,GACA,GAAO,iBAAiB,CAAG,CAAgB,EAE3C,AAAgB,SAAhB,GACA,GAAO,WAAW,CAAG,CAAU,EAE5B,CACX,EAQA,EAAiB,EAAE,CANnB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAG,MAAM,CAAC,AAD9B,EACwC,KAAK,GAC1D,IAAG,OAAO,CAAC,AAFE,EAEQ,iBAAiB,GAAK,AAAgC,SAAhC,AAF9B,EAEwC,iBAAiB,AAAa,GACnF,IAAG,MAAM,CAAC,AAHG,EAGO,WAAW,GAAK,AAA0B,SAA1B,AAHvB,EAGiC,WAAW,AAAa,CAC/E,EASA,AACD,KAA+B,IAA6B,CAAC,EAAC,EADlC,EAAE,CAJ7B,SAAY,CAAK,EAEb,OAAO,GAAG,MAAM,CADE,EAEtB,EAeA,CAXO,EAsCR,IAAsB,IAAoB,CAAC,IA3BxB,OAAO,CAHzB,SAAiB,CAAK,CAAE,CAAO,CAAE,CAAU,EACvC,MAAO,CAAE,QAAO,UAAS,aAAc,CAAW,CACtD,EAYA,EAAkB,MAAM,CAHxB,SAAgB,CAAQ,CAAE,CAAO,CAAE,CAAU,EACzC,MAAO,CAAE,MAAO,CAAE,MAAO,EAAU,IAAK,CAAS,EAAG,UAAS,aAAc,CAAW,CAC1F,EAWA,EAAkB,GAAG,CAHrB,SAAa,CAAK,CAAE,CAAU,EAC1B,MAAO,CAAE,QAAO,QAAS,GAAI,aAAc,CAAW,CAC1D,EAMA,EAAkB,EAAE,CAJpB,SAAY,CAAK,EAEb,OAAO,GAAS,EAAE,CADA,IACgB,IAAiB,EAAE,CAAC,AADpC,EAC8C,YAAY,GAAK,GAA2B,EAAE,CAAC,AAD7F,EACuG,YAAY,EACzI,EAeA,CAPO,EAeR,IAAqB,IAAmB,CAAC,IARvB,MAAM,CAHvB,SAAgB,CAAY,CAAE,CAAK,EAC/B,MAAO,CAAE,eAAc,OAAM,CACjC,EAQA,EAAiB,EAAE,CANnB,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IAET,GAAwC,EAAE,CAAC,AAFlC,EAE4C,YAAY,GACjEH,MAAM,OAAO,CAAC,AAHL,EAGe,KAAK,CACxC,EAkBA,CAdO,EAqBR,IAAe,IAAa,CAAC,IAPjB,MAAM,CAbjB,SAAgB,CAAG,CAAE,CAAO,CAAE,CAAU,EACpC,IAAI,EAAS,CACT,KAAM,SACN,KACJ,EAOA,OANI,AAAY,SAAZ,GAA0B,CAAsB,SAAtB,EAAQ,SAAS,EAAkB,AAA2B,SAA3B,EAAQ,cAAc,AAAa,GAChG,GAAO,OAAO,CAAG,CAAM,EAEvB,AAAe,SAAf,GACA,GAAO,YAAY,CAAG,CAAS,EAE5B,CACX,EAOA,EAAW,EAAE,CALb,SAAY,CAAK,EAEb,OAAO,AADS,GACI,AAAmB,WAAnB,AADJ,EACc,IAAI,EAAiB,GAAG,MAAM,CAAC,AAD7C,EACuD,GAAG,GAAM,CAAsB,SAAtB,AADhE,EAC0E,OAAO,EAC5F,AAAC,CAAgC,SAAhC,AAFU,EAEA,OAAO,CAAC,SAAS,EAAkB,GAAG,OAAO,CAAC,AAF9C,EAEwD,OAAO,CAAC,SAAS,IAAO,CAAqC,SAArC,AAFhF,EAE0F,OAAO,CAAC,cAAc,EAAkB,GAAG,OAAO,CAAC,AAF7I,EAEuJ,OAAO,CAAC,cAAc,EAAE,GAAO,CAA2B,SAA3B,AAFtL,EAEgM,YAAY,EAAkB,GAA2B,EAAE,CAAC,AAF5P,EAEsQ,YAAY,EACtS,EAmBA,CAfO,EAsBR,IAAe,IAAa,CAAC,IAPjB,MAAM,CAdjB,SAAgB,CAAM,CAAE,CAAM,CAAE,CAAO,CAAE,CAAU,EAC/C,IAAI,EAAS,CACT,KAAM,SACN,SACA,QACJ,EAOA,OANI,AAAY,SAAZ,GAA0B,CAAsB,SAAtB,EAAQ,SAAS,EAAkB,AAA2B,SAA3B,EAAQ,cAAc,AAAa,GAChG,GAAO,OAAO,CAAG,CAAM,EAEvB,AAAe,SAAf,GACA,GAAO,YAAY,CAAG,CAAS,EAE5B,CACX,EAOA,EAAW,EAAE,CALb,SAAY,CAAK,EAEb,OAAO,AADS,GACI,AAAmB,WAAnB,AADJ,EACc,IAAI,EAAiB,GAAG,MAAM,CAAC,AAD7C,EACuD,MAAM,GAAK,GAAG,MAAM,CAAC,AAD5E,EACsF,MAAM,GAAM,CAAsB,SAAtB,AADlG,EAC4G,OAAO,EAC9H,AAAC,CAAgC,SAAhC,AAFU,EAEA,OAAO,CAAC,SAAS,EAAkB,GAAG,OAAO,CAAC,AAF9C,EAEwD,OAAO,CAAC,SAAS,IAAO,CAAqC,SAArC,AAFhF,EAE0F,OAAO,CAAC,cAAc,EAAkB,GAAG,OAAO,CAAC,AAF7I,EAEuJ,OAAO,CAAC,cAAc,EAAE,GAAO,CAA2B,SAA3B,AAFtL,EAEgM,YAAY,EAAkB,GAA2B,EAAE,CAAC,AAF5P,EAEsQ,YAAY,EACtS,EAkBA,CAdO,EAqBR,IAAe,IAAa,CAAC,IAPjB,MAAM,CAbjB,SAAgB,CAAG,CAAE,CAAO,CAAE,CAAU,EACpC,IAAI,EAAS,CACT,KAAM,SACN,KACJ,EAOA,OANI,AAAY,SAAZ,GAA0B,CAAsB,SAAtB,EAAQ,SAAS,EAAkB,AAA8B,SAA9B,EAAQ,iBAAiB,AAAa,GACnG,GAAO,OAAO,CAAG,CAAM,EAEvB,AAAe,SAAf,GACA,GAAO,YAAY,CAAG,CAAS,EAE5B,CACX,EAOA,EAAW,EAAE,CALb,SAAY,CAAK,EAEb,OAAO,AADS,GACI,AAAmB,WAAnB,AADJ,EACc,IAAI,EAAiB,GAAG,MAAM,CAAC,AAD7C,EACuD,GAAG,GAAM,CAAsB,SAAtB,AADhE,EAC0E,OAAO,EAC5F,AAAC,CAAgC,SAAhC,AAFU,EAEA,OAAO,CAAC,SAAS,EAAkB,GAAG,OAAO,CAAC,AAF9C,EAEwD,OAAO,CAAC,SAAS,IAAO,CAAwC,SAAxC,AAFhF,EAE0F,OAAO,CAAC,iBAAiB,EAAkB,GAAG,OAAO,CAAC,AAFhJ,EAE0J,OAAO,CAAC,iBAAiB,EAAE,GAAO,CAA2B,SAA3B,AAF5L,EAEsM,YAAY,EAAkB,GAA2B,EAAE,CAAC,AAFlQ,EAE4Q,YAAY,EAC5S,EAkBA,AACD,KAAkB,IAAgB,CAAC,EAAC,EADrB,EAAE,CAbhB,SAAY,CAAK,EAEb,OAAO,AADS,GAEX,CAAsB,SAAtB,AAFW,EAED,OAAO,EAAkB,AAA8B,SAA9B,AAFxB,EAEkC,eAAe,AAAa,GACzE,CAA8B,SAA9B,AAHW,EAGD,eAAe,EAAkB,AAHhC,EAG0C,eAAe,CAAC,KAAK,CAAC,AAAC,GACzE,AAAI,GAAG,MAAM,CAAC,EAAO,IAAI,EACd,GAAW,EAAE,CAAC,IAAW,GAAW,EAAE,CAAC,IAAW,GAAW,EAAE,CAAC,GAGhE,GAAiB,EAAE,CAAC,GAElC,CACT,EAkTA,CARO,EAiBR,IAA2B,IAAyB,CAAC,IAT7B,MAAM,CAH7B,SAAgB,CAAG,EACf,MAAO,CAAE,KAAI,CACjB,EASA,EAAuB,EAAE,CAJzB,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,MAAM,CAAC,AAD1B,EACoC,GAAG,CAC3D,EAiBA,CATO,EAkBR,IAAoC,IAAkC,CAAC,IATtC,MAAM,CAHtC,SAAgB,CAAG,CAAE,CAAO,EACxB,MAAO,CAAE,MAAK,SAAQ,CAC1B,EASA,EAAgC,EAAE,CAJlC,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,MAAM,CAAC,AAD1B,EACoC,GAAG,GAAK,GAAG,OAAO,CAAC,AADvD,EACiE,OAAO,CAC5F,EAiBA,CATO,EAkBR,IAA4C,IAA0C,CAAC,IAT9C,MAAM,CAH9C,SAAgB,CAAG,CAAE,CAAO,EACxB,MAAO,CAAE,MAAK,SAAQ,CAC1B,EASA,EAAwC,EAAE,CAJ1C,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,MAAM,CAAC,AAD1B,EACoC,GAAG,GAAM,CAAsB,OAAtB,AAD7C,EACuD,OAAO,EAAa,GAAG,OAAO,CAAC,AADtF,EACgG,OAAO,EAC3H,EAmBA,CAXO,EAoBR,IAAqB,IAAmB,CAAC,IATvB,MAAM,CAHvB,SAAgB,CAAG,CAAE,CAAU,CAAE,CAAO,CAAE,CAAI,EAC1C,MAAO,CAAE,MAAK,aAAY,UAAS,MAAK,CAC5C,EASA,EAAiB,EAAE,CAJnB,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,MAAM,CAAC,AAD1B,EACoC,GAAG,GAAK,GAAG,MAAM,CAAC,AADtD,EACgE,UAAU,GAAK,GAAG,OAAO,CAAC,AAD1F,EACoG,OAAO,GAAK,GAAG,MAAM,CAAC,AAD1H,EACoI,IAAI,CAC5J,EAeA,CAJO,EAiBR,IAAe,IAAa,CAAC,IAbjB,SAAS,CAAG,YAIvB,EAAW,QAAQ,CAAG,WAQtB,EAAW,EAAE,CAJb,SAAY,CAAK,EAEb,OAAO,AADW,IACG,EAAW,SAAS,EAAI,AAD3B,IACyC,EAAW,QAAQ,AAClF,EAYA,AACD,KAAkB,IAAgB,CAAC,EAAC,EADrB,EAAE,CAJhB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CAAC,IAAU,GAAW,EAAE,CAAC,AAD9B,EACwC,IAAI,GAAK,GAAG,MAAM,CAAC,AAD3D,EACqE,KAAK,CAChG,EAQA,CADO,EA0BR,IAAuB,IAAqB,CAAC,IAzBzB,IAAI,CAAG,EAC1B,EAAmB,MAAM,CAAG,EAC5B,EAAmB,QAAQ,CAAG,EAC9B,EAAmB,WAAW,CAAG,EACjC,EAAmB,KAAK,CAAG,EAC3B,EAAmB,QAAQ,CAAG,EAC9B,EAAmB,KAAK,CAAG,EAC3B,EAAmB,SAAS,CAAG,EAC/B,EAAmB,MAAM,CAAG,EAC5B,EAAmB,QAAQ,CAAG,GAC9B,EAAmB,IAAI,CAAG,GAC1B,EAAmB,KAAK,CAAG,GAC3B,EAAmB,IAAI,CAAG,GAC1B,EAAmB,OAAO,CAAG,GAC7B,EAAmB,OAAO,CAAG,GAC7B,EAAmB,KAAK,CAAG,GAC3B,EAAmB,IAAI,CAAG,GAC1B,EAAmB,SAAS,CAAG,GAC/B,EAAmB,MAAM,CAAG,GAC5B,EAAmB,UAAU,CAAG,GAChC,EAAmB,QAAQ,CAAG,GAC9B,EAAmB,MAAM,CAAG,GAC5B,EAAmB,KAAK,CAAG,GAC3B,EAAmB,QAAQ,CAAG,GAC9B,EAAmB,aAAa,CAAG,GAWnC,CAJO,EAgBR,IAAqB,IAAmB,CAAC,IAZvB,SAAS,CAAG,EAW7B,EAAiB,OAAO,CAAG,EAa3B,AACD,KAAsB,IAAoB,CAAC,EAAC,EADzB,UAAU,CAAG,EAe/B,CAPO,EAgBR,IAAsB,IAAoB,CAAC,IATxB,MAAM,CAHxB,SAAgB,CAAO,CAAE,CAAM,CAAEF,CAAO,EACpC,MAAO,CAAE,UAAS,SAAQA,QAAAA,CAAQ,CACtC,EASA,EAAkB,EAAE,CAJpB,SAAY,CAAK,EAEb,OAAO,AADW,GACE,GAAG,MAAM,CAAC,AADZ,EACsB,OAAO,GAAK,GAAM,EAAE,CAAC,AAD3C,EACqD,MAAM,GAAK,GAAM,EAAE,CAAC,AADzE,EACmF,OAAO,CAChH,EAkBA,CARO,EAmBR,IAAmB,IAAiB,CAAC,IAXrB,IAAI,CAAG,EAUtB,EAAe,iBAAiB,CAAG,EASnC,AACD,KAA+B,IAA6B,CAAC,EAAC,EADlC,EAAE,CAL7B,SAAY,CAAK,EAEb,OAAO,AADW,GACG,IAAG,MAAM,CAAC,AADb,EACuB,MAAM,GAAK,AAAqB,SAArB,AADlC,EAC4C,MAAM,AAAa,GAC5E,IAAG,MAAM,CAAC,AAFG,EAEO,WAAW,GAAK,AAA0B,SAA1B,AAFvB,EAEiC,WAAW,AAAa,CAC/E,EAgBA,AACD,KAAmB,IAAiB,CAAC,EAAC,EADtB,MAAM,CAHrB,SAAgB,CAAK,EACjB,MAAO,CAAE,OAAM,CACnB,EAkBA,AACD,KAAmB,IAAiB,CAAC,EAAC,EADtB,MAAM,CAHrB,SAAgB,CAAK,CAAE,CAAY,EAC/B,MAAO,CAAE,MAAO,GAAgB,EAAE,CAAE,aAAc,CAAC,CAAC,CAAa,CACrE,EAaA,CATO,EAkBR,IAAiB,IAAe,CAAC,IATnB,aAAa,CAH1B,SAAuB,CAAS,EAC5B,OAAO,EAAU,OAAO,CAAC,wBAAyB,OACtD,EASA,EAAa,EAAE,CAJf,SAAY,CAAK,EAEb,OAAO,GAAG,MAAM,CADE,IACc,GAAG,aAAa,CAD9B,IAC6C,GAAG,MAAM,CAAC,AADvD,EACiE,QAAQ,GAAK,GAAG,MAAM,CAAC,AADxF,EACkG,KAAK,CAC7H,EAcA,AACD,KAAU,IAAQ,CAAC,EAAC,EADb,EAAE,CANR,SAAY,CAAK,EAEb,MAAO,CAAC,CADQ,GACM,GAAG,aAAa,CADtB,IACsC,IAAc,EAAE,CAAC,AADvD,EACiE,QAAQ,GACrF,GAAa,EAAE,CAAC,AAFJ,EAEc,QAAQ,GAClC,GAAG,UAAU,CAAC,AAHF,EAGY,QAAQ,CAAE,GAAa,EAAE,IAAO,CAAgB,SAAhB,EAAM,KAAK,EAAkB,GAAM,EAAE,CAAC,EAAM,KAAK,EACjH,EAkBA,AACD,KAAyB,IAAuB,CAAC,EAAC,EAD5B,MAAM,CAH3B,SAAgB,CAAK,CAAE,CAAa,EAChC,OAAO,EAAgB,CAAE,QAAO,eAAc,EAAI,CAAE,OAAM,CAC9D,EAsBA,AACD,KAAyB,IAAuB,CAAC,EAAC,EAD5B,MAAM,CAb3B,SAAgB,CAAK,CAAE,CAAa,CAAE,GAAG,CAAU,EAC/C,IAAI,EAAS,CAAE,OAAM,EAUrB,OATI,GAAG,OAAO,CAAC,IACX,GAAO,aAAa,CAAG,CAAY,EAEnC,GAAG,OAAO,CAAC,GACX,EAAO,UAAU,CAAG,EAGpB,EAAO,UAAU,CAAG,EAAE,CAEnB,CACX,EAWA,CAJO,EAaR,IAA0B,IAAwB,CAAC,IAT5B,IAAI,CAAG,EAI7B,EAAsB,IAAI,CAAG,EAI7B,EAAsB,KAAK,CAAG,EAoB9B,AACD,KAAsB,IAAoB,CAAC,EAAC,EADzB,MAAM,CAPxB,SAAgB,CAAK,CAAE,CAAI,EACvB,IAAIA,EAAS,CAAE,OAAM,EAIrB,OAHI,GAAG,MAAM,CAAC,IACVA,CAAAA,EAAO,IAAI,CAAG,CAAG,EAEdA,CACX,EAQA,CADO,EA2BR,IAAe,IAAa,CAAC,IA1BjB,IAAI,CAAG,EAClB,EAAW,MAAM,CAAG,EACpB,EAAW,SAAS,CAAG,EACvB,EAAW,OAAO,CAAG,EACrB,EAAW,KAAK,CAAG,EACnB,EAAW,MAAM,CAAG,EACpB,EAAW,QAAQ,CAAG,EACtB,EAAW,KAAK,CAAG,EACnB,EAAW,WAAW,CAAG,EACzB,EAAW,IAAI,CAAG,GAClB,EAAW,SAAS,CAAG,GACvB,EAAW,QAAQ,CAAG,GACtB,EAAW,QAAQ,CAAG,GACtB,EAAW,QAAQ,CAAG,GACtB,EAAW,MAAM,CAAG,GACpB,EAAW,MAAM,CAAG,GACpB,EAAW,OAAO,CAAG,GACrB,EAAW,KAAK,CAAG,GACnB,EAAW,MAAM,CAAG,GACpB,EAAW,GAAG,CAAG,GACjB,EAAW,IAAI,CAAG,GAClB,EAAW,UAAU,CAAG,GACxB,EAAW,MAAM,CAAG,GACpB,EAAW,KAAK,CAAG,GACnB,EAAW,QAAQ,CAAG,GACtB,EAAW,aAAa,CAAG,GAY3B,AACD,KAAc,IAAY,CAAC,EAAC,EADjB,UAAU,CAAG,EAwBvB,AACD,KAAsB,IAAoB,CAAC,EAAC,EADzB,MAAM,CAXxB,SAAgB,CAAI,CAAE,CAAI,CAAEA,CAAK,CAAE,CAAG,CAAE,CAAa,EACjD,IAAI,EAAS,CACT,OACA,OACA,SAAU,CAAE,MAAKA,MAAAA,CAAM,CAC3B,EAIA,OAHI,GACA,GAAO,aAAa,CAAG,CAAY,EAEhC,CACX,EAmBA,AACD,KAAoB,IAAkB,CAAC,EAAC,EADvB,MAAM,CALtB,SAAgB,CAAI,CAAE,CAAI,CAAE,CAAG,CAAE,CAAK,EAClC,OAAO,AAAU,SAAV,EACD,CAAE,OAAM,OAAM,SAAU,CAAE,MAAK,OAAM,CAAE,EACvC,CAAE,OAAM,OAAM,SAAU,CAAE,KAAI,CAAE,CAC1C,EA4BA,CAxBO,EAuCR,IAAmB,IAAiB,CAAC,IAfrB,MAAM,CAbrB,SAAgB,CAAI,CAAE,CAAM,CAAE,CAAI,CAAE,CAAK,CAAE,CAAc,CAAE,CAAQ,EAC/D,IAAI,EAAS,CACT,OACA,SACA,OACA,QACA,gBACJ,EAIA,OAHI,AAAa,SAAb,GACA,GAAO,QAAQ,CAAG,CAAO,EAEtB,CACX,EAeA,EAAe,EAAE,CAVjB,SAAY,CAAK,EAEb,OAAO,AADS,GAEZ,GAAG,MAAM,CAAC,AAFE,EAEQ,IAAI,GAAK,GAAG,MAAM,CAAC,AAF3B,EAEqC,IAAI,GACrD,GAAM,EAAE,CAAC,AAHG,EAGO,KAAK,GAAK,GAAM,EAAE,CAAC,AAH1B,EAGoC,cAAc,GAC7D,CAAqB,SAArB,AAJW,EAID,MAAM,EAAkB,GAAG,MAAM,CAAC,AAJjC,EAI2C,MAAM,IAC5D,CAAyB,SAAzB,AALW,EAKD,UAAU,EAAkB,GAAG,OAAO,CAAC,AALtC,EAKgD,UAAU,IACrE,CAAuB,SAAvB,AANW,EAMD,QAAQ,EAAkBE,MAAM,OAAO,CAAC,AANvC,EAMiD,QAAQ,IACpE,CAAmB,SAAnB,AAPW,EAOD,IAAI,EAAkBA,MAAM,OAAO,CAAC,AAPnC,EAO6C,IAAI,EACrE,EAWA,CAJO,EAoER,IAAmB,IAAiB,CAAC,IAhErB,KAAK,CAAG,GAIvB,EAAe,QAAQ,CAAG,WAI1B,EAAe,QAAQ,CAAG,WAY1B,EAAe,eAAe,CAAG,mBAWjC,EAAe,cAAc,CAAG,kBAahC,EAAe,eAAe,CAAG,mBAMjC,EAAe,MAAM,CAAG,SAIxB,EAAe,qBAAqB,CAAG,yBASvC,EAAe,YAAY,CAAG,gBAY9B,CAJO,EAYR,IAA0B,IAAwB,CAAC,IAR5B,OAAO,CAAG,EAOhC,EAAsB,SAAS,CAAG,EAqBlC,CAdO,EAyBR,IAAsB,IAAoB,CAAC,IAXxB,MAAM,CAVxB,SAAgB,CAAW,CAAE,CAAI,CAAE,CAAW,EAC1C,IAAI,EAAS,CAAE,aAAY,EAO3B,OANI,SACA,GAAO,IAAI,CAAG,CAAG,EAEjB,SACA,GAAO,WAAW,CAAG,CAAU,EAE5B,CACX,EAWA,EAAkB,EAAE,CANpB,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,UAAU,CAAC,AAD9B,EACwC,WAAW,CAAE,GAAW,EAAE,GAC1E,CAAmB,SAAnB,AAFQ,EAEE,IAAI,EAAkB,GAAG,UAAU,CAAC,AAFtC,EAEgD,IAAI,CAAE,GAAG,MAAM,IACvE,CAA0B,SAA1B,AAHQ,EAGE,WAAW,EAAkB,AAH/B,EAGyC,WAAW,GAAK,GAAsB,OAAO,EAAI,AAH1F,EAGoG,WAAW,GAAK,GAAsB,SAAS,AAAD,CACtK,EAuBA,CAnBO,EA+BR,IAAe,IAAa,CAAC,IAZjB,MAAM,CAlBjB,SAAgB,CAAK,CAAE,CAAmB,CAAE,CAAI,EAC5C,IAAI,EAAS,CAAE,OAAM,EACjB,EAAY,GAchB,MAbI,AAA+B,UAA/B,OAAO,GACP,EAAY,GACZ,EAAO,IAAI,CAAG,GAET,GAAQ,EAAE,CAAC,GAChB,EAAO,OAAO,CAAG,EAGjB,EAAO,IAAI,CAAG,EAEd,GAAa,AAAS,SAAT,GACb,GAAO,IAAI,CAAG,CAAG,EAEd,CACX,EAYA,EAAW,EAAE,CAVb,SAAY,CAAK,EAEb,OAAO,AADS,GACI,GAAG,MAAM,CAAC,AADd,EACwB,KAAK,GACxC,CAA0B,SAA1B,AAFW,EAED,WAAW,EAAkB,GAAG,UAAU,CAAC,AAF1C,EAEoD,WAAW,CAAE,GAAW,EAAE,IACzF,CAAmB,SAAnB,AAHW,EAGD,IAAI,EAAkB,GAAG,MAAM,CAAC,AAH/B,EAGyC,IAAI,IACxD,CAAmB,SAAnB,AAJW,EAID,IAAI,EAAkB,AAAsB,SAAtB,AAJrB,EAI+B,OAAO,AAAa,GAC9D,CAAsB,SAAtB,AALW,EAKD,OAAO,EAAkB,GAAQ,EAAE,CAAC,AALnC,EAK6C,OAAO,IAC/D,CAA0B,SAA1B,AANW,EAMD,WAAW,EAAkB,GAAG,OAAO,CAAC,AANvC,EAMiD,WAAW,IACvE,CAAmB,SAAnB,AAPW,EAOD,IAAI,EAAkB,GAAc,EAAE,CAAC,AAPtC,EAOgD,IAAI,EACxE,EAmBA,CAXO,EAoBR,IAAa,IAAW,CAAC,IATf,MAAM,CAPf,SAAgB,CAAK,CAAE,CAAI,EACvB,IAAIF,EAAS,CAAE,OAAM,EAIrB,OAHI,GAAG,OAAO,CAAC,IACXA,CAAAA,EAAO,IAAI,CAAG,CAAG,EAEdA,CACX,EASA,EAAS,EAAE,CAJX,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAM,EAAE,CAAC,AADzB,EACmC,KAAK,GAAM,IAAG,SAAS,CAAC,AAD3D,EACqE,OAAO,GAAK,GAAQ,EAAE,CAAC,AAD5F,EACsG,OAAO,EACjI,EAeA,CAPO,EAgBR,IAAsB,IAAoB,CAAC,IATxB,MAAM,CAHxB,SAAgB,CAAO,CAAE,CAAY,EACjC,MAAO,CAAE,UAAS,cAAa,CACnC,EASA,EAAkB,EAAE,CAJpB,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAG,QAAQ,CAAC,AAD5B,EACsC,OAAO,GAAK,GAAG,OAAO,CAAC,AAD7D,EACuE,YAAY,CACvG,EAeA,CAPO,EAgBR,IAAiB,IAAe,CAAC,IATnB,MAAM,CAHnB,SAAgB,CAAK,CAAEK,CAAM,CAAE,CAAI,EAC/B,MAAO,CAAE,QAAOA,OAAAA,EAAQ,MAAK,CACjC,EASA,EAAa,EAAE,CAJf,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADD,IACgB,GAAM,EAAE,CAAC,AADzB,EACmC,KAAK,GAAM,IAAG,SAAS,CAAC,AAD3D,EACqE,MAAM,GAAK,GAAG,MAAM,CAAC,AAD1F,EACoG,MAAM,EAC9H,EAiBA,CATO,EAeR,IAAmB,IAAiB,CAAC,IANrB,MAAM,CAHrB,SAAgB,CAAK,CAAE,CAAM,EACzB,MAAO,CAAE,QAAO,QAAO,CAC3B,EAMA,EAAe,EAAE,CAJjB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADP,IACsB,GAAM,EAAE,CAAC,AAD/B,EACyC,KAAK,GAAM,CAAqB,SAArB,AADpD,EAC8D,MAAM,EAAkB,EAAe,EAAE,CAAC,AADxG,EACkH,MAAM,EAC5I,EAYA,CADO,EA+BR,IAAuB,IAAqB,CAAC,IA9BzB,SAAY,CAAG,YAKlC,EAAmB,IAAO,CAAG,OAC7B,EAAmB,KAAQ,CAAG,QAC9B,EAAmB,IAAO,CAAG,OAC7B,EAAmB,SAAY,CAAG,YAClC,EAAmB,MAAS,CAAG,SAC/B,EAAmB,aAAgB,CAAG,gBACtC,EAAmB,SAAY,CAAG,YAClC,EAAmB,QAAW,CAAG,WACjC,EAAmB,QAAW,CAAG,WACjC,EAAmB,UAAa,CAAG,aACnC,EAAmB,KAAQ,CAAG,QAC9B,EAAmB,QAAW,CAAG,WACjC,EAAmB,MAAS,CAAG,SAC/B,EAAmB,KAAQ,CAAG,QAC9B,EAAmB,OAAU,CAAG,UAChC,EAAmB,QAAW,CAAG,WACjC,EAAmB,OAAU,CAAG,UAChC,EAAmB,MAAS,CAAG,SAC/B,EAAmB,MAAS,CAAG,SAC/B,EAAmB,MAAS,CAAG,SAC/B,EAAmB,QAAW,CAAG,WAIjC,EAAmB,SAAY,CAAG,YAWlC,CADO,EAWR,IAA2B,IAAyB,CAAC,IAV7B,WAAc,CAAG,cACxC,EAAuB,UAAa,CAAG,aACvC,EAAuB,QAAW,CAAG,WACrC,EAAuB,MAAS,CAAG,SACnC,EAAuB,UAAa,CAAG,aACvC,EAAuB,QAAW,CAAG,WACrC,EAAuB,KAAQ,CAAG,QAClC,EAAuB,YAAe,CAAG,eACzC,EAAuB,aAAgB,CAAG,gBAC1C,EAAuB,cAAiB,CAAG,iBAY3C,AACD,KAAmB,IAAiB,CAAC,EAAC,EADtB,EAAE,CALjB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACqB,CAAuB,SAAvB,AADrB,EAC+B,QAAQ,EAAkB,AAA8B,UAA9B,OAAO,AADhE,EAC0E,QAAQ,AAAY,GAC5GH,MAAM,OAAO,CAAC,AAFA,EAEU,IAAI,GAAM,CAA0B,IAA1B,AAFpB,EAE8B,IAAI,CAAC,MAAM,EAAU,AAA6B,UAA7B,OAAO,AAF1D,EAEoE,IAAI,CAAC,EAAE,AAAY,CAC7G,EAgBA,CAPO,EAaR,IAAoB,IAAkB,CAAC,IANtB,MAAM,CAHtB,SAAgB,CAAK,CAAEG,CAAI,EACvB,MAAO,CAAE,QAAOA,KAAAA,CAAK,CACzB,EAMA,EAAgB,EAAE,CAJlB,SAAY,CAAK,EAEb,OAAO,MADW,GACsC,GAAM,EAAE,CAAC,AAD/C,EACyD,KAAK,GAAK,GAAG,MAAM,CAAC,AAD7E,EACuF,IAAI,CACjH,EAgBA,CAPO,EAcR,IAA8B,IAA4B,CAAC,IAPhC,MAAM,CAHhC,SAAgB,CAAK,CAAE,CAAY,CAAE,CAAmB,EACpD,MAAO,CAAE,QAAO,eAAc,qBAAoB,CACtD,EAOA,EAA0B,EAAE,CAL5B,SAAY,CAAK,EAEb,OAAO,MADW,GACsC,GAAM,EAAE,CAAC,AAD/C,EACyD,KAAK,GAAK,GAAG,OAAO,CAAC,AAD9E,EACwF,mBAAmB,GACrH,IAAG,MAAM,CAAC,AAFA,EAEU,YAAY,GAAK,AAA2B,SAA3B,AAF3B,EAEqC,YAAY,AAAa,CACpF,EAgBA,CAPO,EAcR,IAAqC,IAAmC,CAAC,IAPvC,MAAM,CAHvC,SAAgB,CAAK,CAAE,CAAU,EAC7B,MAAO,CAAE,QAAO,YAAW,CAC/B,EAOA,EAAiC,EAAE,CALnC,SAAY,CAAK,EAEb,OAAO,MADW,GACsC,GAAM,EAAE,CAAC,AAD/C,EACyD,KAAK,GACxE,IAAG,MAAM,CAAC,AAFA,EAEU,UAAU,GAAK,AAAyB,SAAzB,AAFzB,EAEmC,UAAU,AAAa,CAChF,EAiBA,CAPO,EAgBR,IAAuB,IAAqB,CAAC,IATzB,MAAM,CAHzB,SAAgB,CAAO,CAAE,CAAe,EACpC,MAAO,CAAE,UAAS,iBAAgB,CACtC,EASA,EAAmB,EAAE,CAJrB,SAAY,CAAK,EAEb,OAAO,GAAG,OAAO,CADC,IACc,GAAM,EAAE,CAAC,EAAM,eAAe,CAClE,EAaA,CAJO,EAaR,IAAkB,IAAgB,CAAC,IATpB,IAAI,CAAG,EAIrB,EAAc,SAAS,CAAG,EAI1B,EAAc,EAAE,CAHhB,SAAY,CAAK,EACb,OAAO,AAAU,IAAV,GAAe,AAAU,IAAV,CAC1B,EAQA,CAJO,GAaR,IAAuB,IAAqB,CAAC,IATzB,MAAM,CAHzB,SAAgB,CAAK,EACjB,MAAO,CAAE,OAAM,CACnB,EASA,GAAmB,EAAE,CAPrB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IAEV,CAAsB,SAAtB,AAFU,EAEA,OAAO,EAAkB,GAAG,MAAM,CAAC,AAFnC,EAE6C,OAAO,GAAK,GAAc,EAAE,CAAC,AAF1E,EAEoF,OAAO,IACrG,CAAuB,SAAvB,AAHU,EAGA,QAAQ,EAAkB,GAAS,EAAE,CAAC,AAHtC,EAGgD,QAAQ,IAClE,CAAsB,SAAtB,AAJU,EAIA,OAAO,EAAkB,GAAQ,EAAE,CAAC,AAJpC,EAI8C,OAAO,EAC3E,EAYA,CARO,GAoBR,IAAc,IAAY,CAAC,IAZhB,MAAM,CAPhB,SAAgB,CAAQ,CAAE,CAAK,CAAE,CAAI,EACjC,IAAM,EAAS,CAAE,WAAU,OAAM,EAIjC,OAHI,AAAS,SAAT,GACA,GAAO,IAAI,CAAG,CAAG,EAEd,CACX,EAYA,GAAU,EAAE,CAVZ,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAS,EAAE,CAAC,AADhC,EAC0C,QAAQ,GAC5D,IAAG,MAAM,CAAC,AAFA,EAEU,KAAK,GAAK,GAAG,UAAU,CAAC,AAFlC,EAE4C,KAAK,CAAE,GAAmB,EAAE,IAClF,CAAmB,SAAnB,AAHU,EAGA,IAAI,EAAkB,GAAc,EAAE,CAAC,AAHvC,EAGiD,IAAI,IAC/D,AAAwB,SAAxB,AAJU,EAIA,SAAS,EAAmB,GAAG,UAAU,CAAC,AAJ1C,EAIoD,SAAS,CAAE,GAAS,EAAE,GACpF,CAAsB,SAAtB,AALU,EAKA,OAAO,EAAkB,GAAG,MAAM,CAAC,AALnC,EAK6C,OAAO,GAAK,GAAc,EAAE,CAAC,AAL1E,EAKoF,OAAO,IACrG,CAA0B,SAA1B,AANU,EAMA,WAAW,EAAkB,GAAG,OAAO,CAAC,AANxC,EAMkD,WAAW,IACvE,CAA2B,SAA3B,AAPU,EAOA,YAAY,EAAkB,GAAG,OAAO,CAAC,AAPzC,EAOmD,YAAY,EACrF,EAQA,AACD,KAAgB,IAAc,CAAC,EAAC,EADnB,aAAa,CAHzB,SAAuB,CAAK,EACxB,MAAO,CAAE,KAAM,UAAW,OAAM,CACpC,EAQA,AACD,KAAyB,IAAuB,CAAC,EAAC,EAD5B,MAAM,CAH3B,SAAgB,CAAU,CAAE,CAAU,CAAEL,CAAK,CAAE,CAAO,EAClD,MAAO,CAAE,aAAY,aAAYA,MAAAA,EAAO,SAAQ,CACpD,EAQA,AACD,KAAyB,IAAuB,CAAC,EAAC,EAD5B,MAAM,CAH3B,SAAgB,CAAK,EACjB,MAAO,CAAE,OAAM,CACnB,EAcA,CAJO,GASR,IAAgC,IAA8B,CAAC,IALlC,OAAO,CAAG,EAItC,GAA4B,SAAS,CAAG,EAOxC,AACD,KAA2B,IAAyB,CAAC,EAAC,EAD9B,MAAM,CAH7B,SAAgB,CAAK,CAAEK,CAAI,EACvB,MAAO,CAAE,QAAOA,KAAAA,CAAK,CACzB,EAQA,AACD,KAA4B,IAA0B,CAAC,EAAC,EAD/B,MAAM,CAH9B,SAAgB,CAAW,CAAE,CAAsB,EAC/C,MAAO,CAAE,cAAa,wBAAuB,CACjD,EASA,AACD,KAAoB,IAAkB,CAAC,EAAC,EADvB,EAAE,CAJlB,SAAY,CAAK,EAEb,OAAO,GAAG,aAAa,CADL,IACoB,GAAI,EAAE,CAAC,AAD3B,EACqC,GAAG,GAAK,GAAG,MAAM,CAAC,AADvD,EACiE,IAAI,CAC3F,EAmBA,CAXO,GA8ER,IAAiB,IAAe,CAAC,IAnEnB,MAAM,CAHnB,SAAgB,CAAG,CAAE,CAAU,CAAE,CAAO,CAAE,CAAO,EAC7C,OAAO,IAAI,GAAiB,EAAK,EAAY,EAAS,EAC1D,EAUA,GAAa,EAAE,CALf,SAAY,CAAK,EAEb,QAAO,IAAG,OAAO,CADD,IACgB,GAAG,MAAM,CAAC,AAD1B,EACoC,GAAG,GAAM,IAAG,SAAS,CAAC,AAD1D,EACoE,UAAU,GAAK,GAAG,MAAM,CAAC,AAD7F,EACuG,UAAU,IAAM,GAAG,QAAQ,CAAC,AADnI,EAC6I,SAAS,GAC/J,GAAG,IAAI,CAAC,AAFC,EAES,OAAO,GAAK,GAAG,IAAI,CAAC,AAF7B,EAEuC,UAAU,GAAK,GAAG,IAAI,CAAC,AAF9D,EAEwE,QAAQ,EACpG,EA0BA,GAAa,UAAU,CAxBvB,SAAoB,CAAQ,CAAE,CAAK,EAC/B,IAAI,EAAO,EAAS,OAAO,GACvB,EAAc,AAuBtB,SAAS,EAAU,CAAI,CAAE,CAAO,EAC5B,GAAI,EAAK,MAAM,EAAI,EAEf,OAAO,EAEX,IAAM,EAAI,AAAC,EAAK,MAAM,CAAG,EAAK,EACxB,EAAO,EAAK,KAAK,CAAC,EAAG,GACrB,EAAQ,EAAK,KAAK,CAAC,GACzB,EAAU,EAAM,GAChB,EAAU,EAAO,GACjB,IAAI,EAAU,EACV,EAAW,EACX,EAAI,EACR,KAAO,EAAU,EAAK,MAAM,EAAI,EAAW,EAAM,MAAM,EAE/C,AAAO,GADD,EAAQ,CAAI,CAAC,EAAQ,CAAE,CAAK,CAAC,EAAS,EAG5C,CAAI,CAAC,IAAI,CAAG,CAAI,CAAC,IAAU,CAI3B,CAAI,CAAC,IAAI,CAAG,CAAK,CAAC,IAAW,CAGrC,KAAO,EAAU,EAAK,MAAM,EACxB,CAAI,CAAC,IAAI,CAAG,CAAI,CAAC,IAAU,CAE/B,KAAO,EAAW,EAAM,MAAM,EAC1B,CAAI,CAAC,IAAI,CAAG,CAAK,CAAC,IAAW,CAEjC,OAAO,CACX,EAtDgC,EAAO,CAAC,EAAG,KACnC,IAAI,EAAO,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAG,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,QAClD,AAAI,AAAS,IAAT,EACO,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAG,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAErD,CACX,GACI,EAAqB,EAAK,MAAM,CACpC,IAAK,IAAI,EAAI,EAAY,MAAM,CAAG,EAAG,GAAK,EAAG,IAAK,CAC9C,IAAI,EAAI,CAAW,CAAC,EAAE,CAClBqB,EAAc,EAAS,QAAQ,CAAC,EAAE,KAAK,CAAC,KAAK,EAC7C,EAAY,EAAS,QAAQ,CAAC,EAAE,KAAK,CAAC,GAAG,EAC7C,GAAI,GAAa,EACb,EAAO,EAAK,SAAS,CAAC,EAAGA,GAAe,EAAE,OAAO,CAAG,EAAK,SAAS,CAAC,EAAW,EAAK,MAAM,OAGzF,MAAM,AAAIvB,MAAM,oBAEpB,EAAqBuB,CACzB,CACA,OAAO,CACX,CAsCJ,OAAM,GACF,YAAY,CAAG,CAAE,CAAU,CAAE,CAAO,CAAE,CAAO,CAAE,CAC3C,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,YAAY,CAAG,MACxB,CACA,IAAI,KAAM,CACN,OAAO,IAAI,CAAC,IAAI,AACpB,CACA,IAAI,YAAa,CACb,OAAO,IAAI,CAAC,WAAW,AAC3B,CACA,IAAI,SAAU,CACV,OAAO,IAAI,CAAC,QAAQ,AACxB,CACA,QAAQ,CAAK,CAAE,CACX,GAAI,EAAO,CACP,IAAI,EAAQ,IAAI,CAAC,QAAQ,CAAC,EAAM,KAAK,EACjC,EAAM,IAAI,CAAC,QAAQ,CAAC,EAAM,GAAG,EACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAO,EAC1C,CACA,OAAO,IAAI,CAAC,QAAQ,AACxB,CACA,OAAOtB,CAAK,CAAE,CAAO,CAAE,CACnB,IAAI,CAAC,QAAQ,CAAGA,EAAM,IAAI,CAC1B,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,YAAY,CAAG,MACxB,CACA,gBAAiB,CACb,GAAI,AAAsB,SAAtB,IAAI,CAAC,YAAY,CAAgB,CACjC,IAAI,EAAc,EAAE,CAChBC,EAAO,IAAI,CAAC,QAAQ,CACpB,EAAc,GAClB,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAK,MAAM,CAAE,IAAK,CAC9B,IACA,EAAY,IAAI,CAAC,GACjB,EAAc,IAElB,IAAI,EAAKA,EAAK,MAAM,CAAC,GACrB,EAAe,AAAO,OAAP,GAAe,AAAO,OAAP,EAC1B,AAAO,OAAP,GAAe,EAAI,EAAIA,EAAK,MAAM,EAAIA,AAAuB,OAAvBA,EAAK,MAAM,CAAC,EAAI,IACtD,GAER,CACI,GAAeA,EAAK,MAAM,CAAG,GAC7B,EAAY,IAAI,CAACA,EAAK,MAAM,EAEhC,IAAI,CAAC,YAAY,CAAG,CACxB,CACA,OAAO,IAAI,CAAC,YAAY,AAC5B,CACA,WAAW,CAAM,CAAE,CACf,EAASc,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,EAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAG,GAC1D,IAAI,EAAc,IAAI,CAAC,cAAc,GACjC,EAAM,EAAG,EAAO,EAAY,MAAM,CACtC,GAAI,AAAS,IAAT,EACA,OAAO,GAAS,MAAM,CAAC,EAAG,GAE9B,KAAO,EAAM,GAAM,CACf,IAAI,EAAMA,KAAK,KAAK,CAAC,AAAC,GAAM,CAAG,EAAK,EAChC,EAAW,CAAC,EAAI,CAAG,EACnB,EAAO,EAGP,EAAM,EAAM,CAEpB,CAGA,IAAI,EAAO,EAAM,EACjB,OAAO,GAAS,MAAM,CAAC,EAAM,EAAS,CAAW,CAAC,EAAK,CAC3D,CACA,SAAS,CAAQ,CAAE,CACf,IAAI,EAAc,IAAI,CAAC,cAAc,GACrC,GAAI,EAAS,IAAI,EAAI,EAAY,MAAM,CACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAE1B,GAAI,EAAS,IAAI,CAAG,EACrB,OAAO,EAEX,IAAI,EAAa,CAAW,CAAC,EAAS,IAAI,CAAC,CACvCM,EAAiB,AAAC,EAAS,IAAI,CAAG,EAAI,EAAY,MAAM,CAAI,CAAW,CAAC,EAAS,IAAI,CAAG,EAAE,CAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrH,OAAON,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,EAAa,EAAS,SAAS,CAAEM,GAAiB,EAC/E,CACA,IAAI,WAAY,CACZ,OAAO,IAAI,CAAC,cAAc,GAAG,MAAM,AACvC,CACJ,KAEW,GAiDR,IAAO,IAAK,CAAC,GAhDZ,IAAM,GAAWxB,OAAO,SAAS,CAAC,QAAQ,AAI1C,IAAG,OAAO,CAHV,SAAiB,CAAK,EAClB,OAAO,AAAiB,SAAV,CAClB,EAKA,GAAG,SAAS,CAHZ,SAAmB,CAAK,EACpB,OAAO,AAAiB,SAAV,CAClB,EAKA,GAAG,OAAO,CAHV,SAAiB,CAAK,EAClB,MAAO,AAAU,KAAV,GAAkB,AAAU,KAAV,CAC7B,EAKA,GAAG,MAAM,CAHT,SAAgB,CAAK,EACjB,MAAO,AAAyB,oBAAzB,GAAS,IAAI,CAAC,EACzB,EAKA,GAAG,MAAM,CAHT,SAAgB,CAAK,EACjB,MAAO,AAAyB,oBAAzB,GAAS,IAAI,CAAC,EACzB,EAKA,GAAG,WAAW,CAHd,SAAqB,CAAK,CAAE,CAAG,CAAE,CAAG,EAChC,MAAO,AAAyB,oBAAzB,GAAS,IAAI,CAAC,IAAgC,GAAO,GAAS,GAAS,CAClF,EAKA,GAAG,OAAO,CAHV,SAAiB,CAAK,EAClB,MAAO,AAAyB,oBAAzB,GAAS,IAAI,CAAC,IAAgC,aAAe,GAAS,GAAS,UAC1F,EAKA,GAAG,QAAQ,CAHX,SAAkB,CAAK,EACnB,MAAO,AAAyB,oBAAzB,GAAS,IAAI,CAAC,IAAgC,GAAK,GAAS,GAAS,UAChF,EAKA,GAAG,IAAI,CAHP,SAAc,CAAK,EACf,MAAO,AAAyB,sBAAzB,GAAS,IAAI,CAAC,EACzB,EAQA,GAAG,aAAa,CANhB,SAAuB,CAAK,EAIxB,OAAO,AAAU,OAAV,GAAkB,AAAiB,UAAjB,OAAO,CACpC,EAKA,GAAG,UAAU,CAHb,SAAoB,CAAK,CAAE,CAAK,EAC5B,OAAOC,MAAM,OAAO,CAAC,IAAU,EAAM,KAAK,CAAC,EAC/C,CWpqEG,OAAM,GACT,aAAc,CACV,IAAI,CAAC,SAAS,CAAG,EAAE,AACvB,CACA,IAAI,SAAU,CACV,IAAI,EACJ,OAAO,MAAC,GAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAG,EAAE,AAAD,EAA+B,EAAK,IAAI,CAAC,QAAQ,AAC1G,CACA,cAAc,CAAK,CAAE,CAIjB,OAHA,IAAI,CAAC,QAAQ,CAAG,IAAI,GAAgB,GACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAG,IAAI,CAAC,QAAQ,CAClC,IAAI,CAAC,SAAS,CAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB,IAAI,CAAC,QAAQ,AACxB,CACA,mBAAmB,CAAO,CAAE,CACxB,IAAM,EAAgB,IAAI,GAK1B,OAJA,EAAc,aAAa,CAAG,EAC9B,EAAc,IAAI,CAAG,IAAI,CAAC,QAAQ,CAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GACb,CACX,CACA,cAAc,CAAK,CAAE,CAAO,CAAE,CAC1B,IAAM,EAAW,IAAI,GAAgB,EAAM,WAAW,CAAE,EAAM,KAAK,CAAC,MAAM,CAAE,UAAa,GAAQ,EAAM,SAAS,CAAE,CAAC,GAInH,OAHA,EAAS,aAAa,CAAG,EACzB,EAAS,IAAI,CAAG,IAAI,CAAC,QAAQ,CAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GACnB,CACX,CACA,WAAW,CAAI,CAAE,CACb,IAAM,EAAS,EAAK,SAAS,CAC7B,GAAI,EAAQ,CACR,IAAM,EAAQ,EAAO,OAAO,CAAC,OAAO,CAAC,EACjC,IAAS,GACT,EAAO,OAAO,CAAC,MAAM,CAAC,EAAO,EAErC,CACJ,CACA,eAAe,CAAM,CAAE,CACnB,IAAM,EAAQ,EAAE,CAChB,IAAK,IAAM,KAAS,EAAQ,CACxB,IAAM,EAAW,IAAI,GAAgB,EAAM,WAAW,CAAE,EAAM,KAAK,CAAC,MAAM,CAAE,UAAa,GAAQ,EAAM,SAAS,CAAE,GAClH,GAAS,IAAI,CAAG,IAAI,CAAC,QAAQ,CAC7B,EAAM,IAAI,CAAC,EACf,CACA,IAAI,EAAU,IAAI,CAAC,OAAO,CACtB,EAAQ,GAEZ,GAAI,EAAQ,OAAO,CAAC,MAAM,CAAG,EAAG,YAC5B,EAAQ,OAAO,CAAC,IAAI,IAAI,GAK5B,KAAO,EAAQ,SAAS,EAAE,CACtB,IAAM,EAAQ,EAAQ,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAChD,GAAI,EAAQ,EAAG,CAEX,EAAQ,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAO,KAAM,GAC9C,EAAQ,GACR,KACJ,CACA,EAAU,EAAQ,SAAS,AAC/B,CAGI,AAAC,GACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,EAEzC,CACA,UAAU,CAAI,CAAE,CACZ,IAAM,EAAU,IAAI,CAAC,OAAO,AAGxB,AAAsB,WAAtB,OAAO,EAAK,KAAK,EACjB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAG,CAAG,EAE9B,EAAK,QAAQ,CAAG,EAChB,IAAM,EAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAG3B,CAAC,SAAmC,KAAK,EAAI,EAAK,OAAO,CAAC,MAAM,AAAD,IAAO,GACtE,IAAI,CAAC,UAAU,CAAC,EAExB,CACJ,CACO,MAAM,GAET,IAAI,QAAS,CACT,OAAO,IAAI,CAAC,SAAS,AACzB,CAEA,IAAI,SAAU,CACV,OAAO,IAAI,CAAC,aAAa,AAC7B,CACA,IAAI,QAAS,CACT,MAAO,EACX,CACA,IAAI,SAAU,CACV,IAAI,EAAI,EACR,IAAM,EAAO,AAAgF,UAAhF,MAAQ,OAAC,GAAK,IAAI,CAAC,QAAQ,AAAD,EAA+B,KAAK,EAAI,EAAG,KAAK,AAAD,EAAkB,IAAI,CAAC,QAAQ,CAAG,MAAC,GAAK,IAAI,CAAC,SAAS,AAAD,EAA+B,KAAK,EAAI,EAAG,OAAO,CAC7L,GAAI,CAAC,EACD,MAAM,AAAIC,MAAM,2CAEpB,OAAO,CACX,CACA,IAAI,QAAQ,CAAK,CAAE,CACf,IAAI,CAAC,QAAQ,CAAG,CACpB,CAEA,IAAI,SAAU,CACV,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,IAAI,MAAO,CACP,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CAC7D,CACJ,CACO,MAAM,WAAwB,GACjC,IAAI,QAAS,CACT,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,IAAI,QAAS,CACT,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,IAAI,KAAM,CACN,OAAO,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,OAAO,AACtC,CACA,IAAI,QAAS,CACT,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,IAAI,WAAY,CACZ,OAAO,IAAI,CAAC,UAAU,AAC1B,CACA,IAAI,OAAQ,CACR,OAAO,IAAI,CAAC,MAAM,AACtB,CACA,YAAY,CAAM,CAAE,CAAM,CAAEH,CAAK,CAAE,CAAS,CAAE,EAAS,EAAK,CAAE,CAC1D,KAAK,GACL,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,MAAM,CAAGA,CAClB,CACJ,CACO,MAAM,WAA6B,GACtC,aAAc,CACV,KAAK,IAAIsB,WACT,IAAI,CAAC,OAAO,CAAG,IAAI,GAAiB,IAAI,CAC5C,CAEA,IAAI,UAAW,CACX,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,IAAI,QAAS,CACT,IAAI,EAAI,EACR,OAAO,MAAC,GAAK,MAAC,GAAK,IAAI,CAAC,kBAAkB,AAAD,EAA+B,KAAK,EAAI,EAAG,MAAM,AAAD,EAA+B,EAAK,CACjI,CACA,IAAI,QAAS,CACT,OAAO,IAAI,CAAC,GAAG,CAAG,IAAI,CAAC,MAAM,AACjC,CACA,IAAI,KAAM,CACN,IAAI,EAAI,EACR,OAAO,MAAC,GAAK,MAAC,GAAK,IAAI,CAAC,iBAAiB,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,AAAD,EAA+B,EAAK,CAC7H,CACA,IAAI,OAAQ,CACR,IAAM,EAAY,IAAI,CAAC,kBAAkB,CACnC,EAAW,IAAI,CAAC,iBAAiB,CACvC,GAAI,KAAa,EASb,MAAO,CAAE,MAAO,SAAe,CAAC,EAAG,GAAI,IAAK,SAAe,CAAC,EAAG,EAAG,EARlE,GAAI,AAAqB,SAArB,IAAI,CAAC,WAAW,CAAgB,CAChC,GAAM,CAAE,MAAO,CAAU,CAAE,CAAG,EACxB,CAAE,MAAO,CAAS,CAAE,CAAG,CAC7B,KAAI,CAAC,WAAW,CAAG,CAAE,MAAO,EAAW,KAAK,CAAE,IAAK,EAAU,GAAG,CAAC,IAAI,CAAG,EAAW,KAAK,CAAC,IAAI,CAAG,EAAW,KAAK,CAAG,EAAU,GAAG,AAAC,CACrI,CACA,OAAO,IAAI,CAAC,WAAW,AAK/B,CACA,IAAI,oBAAqB,CACrB,IAAK,IAAM,KAAS,IAAI,CAAC,OAAO,CAC5B,GAAI,CAAC,EAAM,MAAM,CACb,OAAO,EAGf,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,AAC1B,CACA,IAAI,mBAAoB,CACpB,IAAK,IAAI,EAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAG,EAAG,GAAK,EAAG,IAAK,CAC/C,IAAM,EAAQ,IAAI,CAAC,OAAO,CAAC,EAAE,CAC7B,GAAI,CAAC,EAAM,MAAM,CACb,OAAO,CAEf,CACA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAG,EAAE,AAChD,CACJ,CACA,MAAM,WAAyBpB,MAC3B,YAAY,CAAM,CAAE,CAChB,KAAK,GACL,IAAI,CAAC,MAAM,CAAG,EACdD,OAAO,cAAc,CAAC,IAAI,CAAE,GAAiB,SAAS,CAC1D,CACA,KAAK,GAAG,CAAK,CAAE,CAEX,OADA,IAAI,CAAC,UAAU,CAAC,GACT,KAAK,CAAC,QAAQ,EACzB,CACA,QAAQ,GAAG,CAAK,CAAE,CAEd,OADA,IAAI,CAAC,UAAU,CAAC,GACT,KAAK,CAAC,WAAW,EAC5B,CACA,OAAO,CAAK,CAAE,CAAK,CAAE,GAAG,CAAK,CAAE,CAE3B,OADA,IAAI,CAAC,UAAU,CAAC,GACT,KAAK,CAAC,OAAO,EAAO,KAAU,EACzC,CACA,WAAW,CAAK,CAAE,CACd,IAAK,IAAM,KAAQ,EACf,EAAK,SAAS,CAAG,IAAI,CAAC,MAAM,AAEpC,CACJ,CACO,MAAM,WAAwB,GACjC,IAAI,MAAO,CACP,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CACrD,CACA,IAAI,UAAW,CACX,OAAO,IAAI,CAAC,KAAK,AACrB,CACA,YAAY,CAAK,CAAE,CACf,KAAK,GACL,IAAI,CAAC,KAAK,CAAG,GACb,IAAI,CAAC,KAAK,CAAG,QAAqC,EAAQ,EAC9D,CACJ,CCtOO,IAAM,GAAiB+B,OAAO,YACrC,SAAS,GAAe,CAAI,EACxB,OAAO,EAAK,KAAK,GAAK,EAC1B,CAEA,IAAM,GAAiB,AAAC,GAAS,EAAK,QAAQ,CAD3B,KAC0C,EAAO,EADjD,GAEZ,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,gBAAgB,CAAG,IAAIH,IAC5B,IAAI,CAAC,QAAQ,CAAG,IAAIA,IACpB,IAAI,CAAC,KAAK,CAAG,EAAS,MAAM,CAAC,KAAK,CAClC,IAAMxB,EAAS,IAAI,CAAC,KAAK,CAAC,UAAU,CAC9B,EAAa,AAAmC,eAAnC,EAAS,gBAAgB,CAAC,IAAI,AACjD,KAAI,CAAC,OAAO,CAAG,IAAI,GAAkBA,EAAQJ,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,EAAS,MAAM,CAAC,YAAY,EAAG,CAAE,gBAAiB,EAAY,qBAAsB,EAAS,MAAM,CAAC,0BAA0B,AAAC,GAChN,CACA,aAAa,CAAG,CAAE,CAAO,CAAE,CACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAK,EAC7B,CACA,SAAS,CAAG,CAAE,CAAQ,CAAE,CACpB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAK,EACjC,CACA,KAAK,CAAG,CAAE,CAAQ,CAAE,CAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAK,EAC/B,CACA,WAAW,CAAG,CAAE,CAAQ,CAAE,CACtB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAK,EACrC,CACA,QAAQ,CAAI,CAAE,CACV,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC7B,CACA,aAAc,CACV,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,AACpC,CACA,IAAI,iBAAkB,CAClB,OAAO,IAAI,CAAC,gBAAgB,AAChC,CACA,cAAe,CACX,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,AAClC,CACA,UAAW,CACP,IAAI,CAAC,OAAO,CAAC,gBAAgB,EACjC,CACJ,CACO,MAAM,WAAsB,GAC/B,IAAI,SAAU,CACV,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,EAAE,AAC5C,CACA,YAAY,CAAQ,CAAE,CAClB,KAAK,CAAC,GACN,IAAI,CAAC,WAAW,CAAG,IAAI,GACvB,IAAI,CAAC,KAAK,CAAG,EAAE,CACf,IAAI,CAAC,aAAa,CAAG,IAAI4B,IACzB,IAAI,CAAC,MAAM,CAAG,EAAS,UAAU,CAAC,MAAM,CACxC,IAAI,CAAC,SAAS,CAAG,EAAS,MAAM,CAAC,cAAc,CAC/C,IAAI,CAAC,aAAa,CAAG,EAAS,MAAM,CAAC,aAAa,AACtD,CACA,KAAK,CAAI,CAAE,CAAI,CAAE,CACb,IAAM,EAAO,IAAI,CAAC,eAAe,CAAC,GAC5B,EAAa,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAe,EAAK,IAAI,EAAG,IAAI,CAAC,mBAAmB,CAAC,EAAM,GAAM,IAAI,CAAC,IAAI,GAKrH,OAJA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAK,IAAI,CAAE,GACzB,EAAK,KAAK,EACV,KAAI,CAAC,QAAQ,CAAG,CAAS,EAEtB,CACX,CACA,gBAAgB,CAAI,CAAE,CAClB,IAAI,EAAK,QAAQ,CAMZ,CAHA,GAAI,UAAe,GACpB,OAAO,GAGP,IAAM,EAAW,UAAoB,GACrC,OAAO,QAA2C,EAAW,EAAK,IAAI,AAC1E,CACJ,CACA,MAAM,CAAK,CAAE,EAAU,CAAC,CAAC,CAAE,CACvB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,GAC/B,IAAM,EAAc,IAAI,CAAC,WAAW,CAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAC3D,KAAI,CAAC,OAAO,CAAC,KAAK,CAAG,EAAY,MAAM,CACvC,IAAM,EAAa,EAAQ,IAAI,CAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAQ,IAAI,EAAI,IAAI,CAAC,QAAQ,CACjF,GAAI,CAAC,EACD,MAAM,AAAI1B,MAAM,EAAQ,IAAI,CAAG,CAAC,yBAAyB,EAAE,EAAQ,IAAI,CAAC,CAAC,CAAC,CAAG,2BAEjF,IAAM,EAAS,EAAW,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,GAI9C,OAHA,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAY,MAAM,EAClD,IAAI,CAAC,eAAe,CAAC,KAAK,GAC1B,IAAI,CAAC,WAAW,CAAG,OACZ,CACH,MAAO,EACP,YAAa,EAAY,MAAM,CAC/B,YAAa,EAAY,MAAM,CAC/B,aAAc,IAAI,CAAC,OAAO,CAAC,MAAM,AACrC,CACJ,CACA,oBAAoB,CAAK,CAAE,CAAc,CAAE,CACvC,OAAO,AAAC,IAEJ,IAQI,EARE,EAAa,CAAC,IAAI,CAAC,WAAW,IAAM,AAAU,SAAV,EAC1C,GAAI,EAAY,CACZ,IAAM,EAAO,CAAE,OAAM,EACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GACZ,IAAU,IACV,GAAK,KAAK,CAAG,EAAC,CAEtB,CAEA,GAAI,CACA,EAAS,EAAe,EAC5B,CACA,MAAOC,EAAK,CACR,EAAS,MACb,CAIA,OAHI,AAAW,SAAX,GAAwB,GACxB,GAAS,IAAI,CAAC,SAAS,EAAC,EAErB,CACX,CACJ,CACA,oBAAoB,CAAK,CAAE,CACvB,IAAM,EAAe,IAAI,CAAC,WAAW,CAAC,MAAM,CAC5C,GAAI,CAAC,EAAa,MAAM,CACpB,MAAO,EAAE,CAEb,IAAM,EAAS,EAAM,WAAW,CAChC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IAErC,GAAI,AADU,CAAY,CAAC,EAAE,CACnB,WAAW,CAAG,EACpB,OAAO,EAAa,MAAM,CAAC,EAAG,GAGtC,OAAO,EAAa,MAAM,CAAC,EAAG,EAAa,MAAM,CACrD,CACA,QAAQ,CAAG,CAAEC,CAAS,CAAE,CAAO,CAAE,CAC7B,IAAM,EAAQ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAKA,GAC5C,GAAI,CAAC,IAAI,CAAC,WAAW,IAAM,IAAI,CAAC,YAAY,CAAC,GAAQ,CACjD,IAAM,EAAe,IAAI,CAAC,mBAAmB,CAAC,GAC9C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAChC,IAAM,EAAW,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAO,GACjD,CAAE,YAAU,CAAE,YAAU,CAAE,CAAG,IAAI,CAAC,aAAa,CAAC,GAChD,EAAU,IAAI,CAAC,OAAO,CAC5B,GAAI,EAAY,CACZ,IAAM,EAAiB,UAAU,GAAW,EAAM,KAAK,CAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAM,KAAK,CAAE,GAC9F,IAAI,CAAC,MAAM,CAAC,EAAW,QAAQ,CAAE,EAAW,OAAO,CAAE,EAAgB,EAAU,EACnF,MACK,GAAI,GAAe,GAAU,CAC9B,IAAI,EAAO,EAAM,KAAK,AAClB,CAAC,UAAU,IACX,GAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAM,GAAU,QAAQ,EAAC,EAE3D,EAAQ,KAAK,EAAI,CACrB,CACJ,CACJ,CAOA,aAAa,CAAK,CAAE,CAChB,MAAO,CAAC,EAAM,oBAAoB,EAAI,CAACsB,MAAM,EAAM,WAAW,GAAK,AAA2B,UAA3B,OAAO,EAAM,SAAS,EAAiB,CAACA,MAAM,EAAM,SAAS,CACpI,CACA,QAAQ,CAAG,CAAE,CAAI,CAAE,CAAQ,CAAE,CAAO,CAAE,CAAI,CAAE,KACpC,CACA,CAAC,IAAI,CAAC,WAAW,IAAO,GAKxB,GAAU,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAO,EAEzD,IAAMD,EAAgB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAK,EAAM,EACtD,EAAC,IAAI,CAAC,WAAW,IAAM,GAAW,EAAQ,MAAM,CAAG,GACnD,IAAI,CAAC,wBAAwB,CAACA,EAAe,EAAS,EAE9D,CACA,yBAAyB,CAAM,CAAE,CAAO,CAAE,CAAO,CAAE,CAC/C,GAAM,CAAE,YAAU,CAAElB,WAAAA,CAAU,CAAE,CAAG,IAAI,CAAC,aAAa,CAAC,GACtD,GAAI,EACA,IAAI,CAAC,MAAM,CAAC,EAAW,QAAQ,CAAE,EAAW,OAAO,CAAE,EAAQ,EAASA,QAErE,GAAI,CAAC,EAAY,CAMlB,IAAM,EAAU,IAAI,CAAC,OAAO,CAC5B,GAAI,GAAe,GACf,EAAQ,KAAK,EAAI,EAAO,QAAQ,QAE/B,GAAI,AAAkB,UAAlB,OAAO,GAAuB,EAAQ,CAC3C,IAAM,EAAS,IAAI,CAAC,qBAAqB,CAAC,EAAQ,GAElD,IAAI,CAAC,KAAK,CAAC,GAAG,GACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAFC,EAGpB,CACJ,CACJ,CACA,OAAO,CAAK,CAAE,CAAM,CAAE,CAClB,GAAI,CAAC,IAAI,CAAC,WAAW,GAAI,CACrB,IAAI,EAAO,IAAI,CAAC,OAAO,AACnB,GAAO,OAAO,EAAI,EAAO,QAAQ,EACjC,EAAO,IAAI,CAAC,SAAS,GACrB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAK,QAAQ,EAEzC,AADa,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAC5C,OAAO,CAAC,IAAI,CAAC,EAAK,QAAQ,EAE/B,IAAI,CAAC,KAAK,CAAC,IAAI,CADC,CAAE,OAAM,GAExB,IAAI,CAAC,MAAM,CAAC,EAAO,QAAQ,CAAE,EAAO,OAAO,CAAE,EAAM,EAAK,QAAQ,CAAE,KAGlE,EAAK,KAAK,CAAG,CAErB,CACJ,CACA,WAAY,CACR,GAAI,IAAI,CAAC,WAAW,GAChB,OAEJ,IAAM,EAAM,IAAI,CAAC,OAAO,OAIxB,CAHA,UAAuB,GACvB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,GACV,GAAe,IACR,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAI,KAAK,CAAE,EAAI,QAAQ,GAGrD,UAA0B,IAAI,CAAC,aAAa,CAAE,GAE3C,EACX,CACA,cAAc,CAAO,CAAE,CACnB,GAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAU,CAClC,IAAM,EAAa,UAAmB,EAAS,KAAY,EAC3D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAS,CAC5B,WAAY,EACZ,WAAY,KAAa,UAAiB,EAAW,QAAQ,CACjE,EACJ,CACA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAClC,CACA,OAAO,CAAQ,CAAE,CAAO,CAAE,CAAK,CAAE,CAAO,CAAEA,CAAU,CAAE,CAClD,IACI,EADE,EAAM,IAAI,CAAC,OAAO,CAQxB,OALI,EADAA,GAAc,AAAiB,UAAjB,OAAO,EACd,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAK,EAAS,EAAS,GAGlD,EAEH,GACJ,IAAK,IACD,CAAG,CAAC,EAAQ,CAAG,EACf,KAEJ,KAAK,KACD,CAAG,CAAC,EAAQ,CAAG,GACf,KAEJ,KAAK,KACG,AAACN,MAAM,OAAO,CAAC,CAAG,CAAC,EAAQ,GAC3B,EAAG,CAAC,EAAQ,CAAG,EAAE,AAAD,EAEpB,CAAG,CAAC,EAAQ,CAAC,IAAI,CAAC,EAE1B,CACJ,CACA,sBAAsB,CAAM,CAAE,CAAM,CAAE,CAClC,IAAK,GAAM,CAAC,EAAM,EAAc,GAAID,OAAO,OAAO,CAAC,GAAS,CACxD,IAAM,EAAW,CAAM,CAAC,EAAK,AACzB,AAAa,UAAb,EACA,CAAM,CAAC,EAAK,CAAG,EAEVC,MAAM,OAAO,CAAC,IAAaA,MAAM,OAAO,CAAC,KAC9C,EAAc,IAAI,IAAI,GACtB,CAAM,CAAC,EAAK,CAAG,EAEvB,CAMA,IAAM,EAAgB,EAAO,QAAQ,CAKrC,OAJI,IACA,EAAc,OAAO,CAAG,OACxB,EAAO,QAAQ,CAAG,QAEf,CACX,CACA,IAAI,kBAAmB,CACnB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,AACxC,CACJ,CACO,MAAM,GACT,0BAA0B,CAAO,CAAE,CAC/B,OAAO,+BAAoD,CAAC,EAChE,CACA,8BAA8B,CAAO,CAAE,CACnC,OAAO,mCAAwD,CAAC,EACpE,CACA,wBAAwB,CAAO,CAAE,CAC7B,OAAO,6BAAkD,CAAC,EAC9D,CACA,sBAAsB,CAAO,CAAE,CAC3B,OAAO,2BAAgD,CAAC,EAC5D,CACJ,CACO,MAAM,WAA0C,GACnD,0BAA0B,CAAEE,SAAAA,CAAQ,CAAE,QAAM,CAAE,CAAE,CAC5C,IAAM,EAAcA,EAAS,KAAK,CAC5B,IAAMA,EAAS,KAAK,CAAG,IACvBA,EAAS,IAAI,CAAC,QAAQ,CAAC,OACnB,CAAC,SAAS,EAAEA,EAAS,IAAI,CAAC,SAAS,CAAC,EAAGA,EAAS,IAAI,CAAC,MAAM,CAAG,GAAG,CAAC,CAAC,CACnE,CAAC,eAAe,EAAEA,EAAS,IAAI,CAAC,CAAC,CAAC,CAC5C,MAAO,CAAC,UAAU,EAAE,EAAY,aAAa,EAAE,EAAO,KAAK,CAAC,GAAG,CAAC,AACpE,CACA,8BAA8B,CAAE,gBAAc,CAAE,CAAE,CAC9C,MAAO,CAAC,kCAAkC,EAAE,EAAe,KAAK,CAAC,GAAG,CAAC,AACzE,CACJ,CACO,MAAM,WAAgC,GACzC,aAAc,CACV,KAAK,IAAIkB,WACT,IAAI,CAAC,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC,YAAY,CAAG,EAAE,CACtB,IAAI,CAAC,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAAC,cAAc,CAAG,EACtB,IAAI,CAAC,SAAS,CAAG,CACrB,CACA,QAAS,CAET,CACA,WAAY,CAGZ,CACA,MAAM,CAAK,CAAE,CACT,IAAI,CAAC,UAAU,GACf,IAAMjB,EAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAO,CAAE,KAAM,SAAU,GAK5D,OAJA,IAAI,CAAC,MAAM,CAAGA,EAAO,MAAM,CAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,GAClC,IAAI,CAAC,eAAe,CAAC,KAAK,GACnB,CACH,OAAQ,IAAI,CAAC,MAAM,CACnB,aAAc,IAAI,IAAI,CAAC,gBAAgB,CAAC,CACxC,WAAY,IAAI,CAAC,cAAc,AACnC,CACJ,CACA,KAAK,CAAI,CAAE,CAAI,CAAE,CACb,IAAML,EAAa,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAe,EAAK,IAAI,EAAG,IAAI,CAAC,mBAAmB,CAAC,GAAM,IAAI,CAAC,IAAI,GAK/G,OAJA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAK,IAAI,CAAEA,GACzB,EAAK,KAAK,EACV,KAAI,CAAC,QAAQ,CAAGA,CAAS,EAEtBA,CACX,CACA,YAAa,CACT,IAAI,CAAC,YAAY,CAAG,EAAE,CACtB,IAAI,CAAC,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAAC,cAAc,CAAG,EACtB,IAAI,CAAC,SAAS,CAAG,CACrB,CACA,oBAAoB,CAAc,CAAE,CAChC,OAAO,AAAC,IACJ,IAAM,EAAO,IAAI,CAAC,aAAa,GAC/B,GAAI,CACA,EAAe,EACnB,QACQ,CACJ,IAAI,CAAC,cAAc,CAAC,EACxB,CACJ,CACJ,CACA,0BAA2B,CACvB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAC3C,CACA,eAAgB,CACZ,IAAM,EAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAErC,OADA,IAAI,CAAC,SAAS,CAAG,EACV,CACX,CACA,eAAe,CAAI,CAAE,CACjB,IAAI,CAAC,wBAAwB,GAC7B,IAAI,CAAC,SAAS,CAAG,CACrB,CACA,QAAQ,CAAG,CAAEK,CAAS,CAAE,CAAO,CAAE,CAC7B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAKA,GACzB,IAAI,CAAC,WAAW,KACjB,IAAI,CAAC,gBAAgB,CAAG,IAAI,IAAI,CAAC,YAAY,CAAE,EAAQ,CACvD,IAAI,CAAC,cAAc,CAAG,IAAI,CAAC,OAAO,CAAG,EAE7C,CACA,QAAQ,CAAG,CAAE,CAAI,CAAE,CAAQ,CAAE,CAAO,CAAE,CAAI,CAAE,CACxC,IAAI,CAAC,MAAM,CAAC,GACZ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAK,EAAM,GACpC,IAAI,CAAC,KAAK,CAAC,EACf,CACA,OAAOD,CAAO,CAAE,CACR,AAAC,IAAI,CAAC,WAAW,IACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAACA,EAE/B,CACA,MAAMA,CAAO,CAAE,CACX,GAAI,CAAC,IAAI,CAAC,WAAW,GAAI,CACrB,IAAM,EAAQ,IAAI,CAAC,YAAY,CAAC,WAAW,CAACA,EACxC,IAAS,GACT,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAEjC,CACJ,CACA,IAAI,SAAU,CACV,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,AAC/B,CACJ,CACA,IAAM,GAAgB,CAClB,gBAAiB,GACjB,qBAAsB,OACtB,gBAAiB,GACjB,qBAAsB,IAAI,EAC9B,CAKA,OAAM,WAA0B,KAAqB,CACjD,YAAY,CAAM,CAAE,CAAM,CAAE,CAExB,KAAK,CAAC,EAAQH,OAAO,MAAM,CAACA,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,IAAgB,CAAE,kBAAmB,AADrE,GAAU,iBAAkB,EAE9C,IAAI,KAAoB,CAAC,CAAE,aAAc,EAAO,YAAY,AAAC,GAC7D,IAAI,GAAwB,CAE1B,QAAS,EAAO,eAAe,CAAG,KAAQ,EAAI,MAClD,EAAG,GAAI,GACnB,CACA,IAAI,cAAe,CACf,OAAO,IAAI,CAAC,eAAe,AAC/B,CACA,YAAY,CAAI,CAAE,CAAI,CAAE,CACpB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAM,EAC3B,CACA,kBAAmB,CACf,IAAI,CAAC,mBAAmB,EAC5B,CACA,YAAY,CAAG,CAAEI,CAAS,CAAE,CACxB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAKA,EAC7B,CACA,YAAY,CAAG,CAAE,CAAI,CAAE,CAAI,CAAE,CACzB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAK,EAAM,CAC3B,KAAM,CAAC,EAAK,AAChB,EACJ,CACA,OAAO,CAAG,CAAE,CAAO,CAAE,CACjB,IAAI,CAAC,EAAE,CAAC,EAAK,EACjB,CACA,WAAW,CAAG,CAAE,CAAQ,CAAE,CACtB,IAAI,CAAC,MAAM,CAAC,EAAK,EACrB,CACA,SAAS,CAAG,CAAE,CAAQ,CAAE,CACpB,IAAI,CAAC,IAAI,CAAC,EAAK,EACnB,CACA,eAAe,CAAG,CAAE,CAAQ,CAAE,CAC1B,IAAI,CAAC,UAAU,CAAC,EAAK,EACzB,CACJ,C,4BCrdO,SAAS,GAAa,CAAO,CAAE,CAAM,CAAE,CAAM,EAOhD,OADA,AAGJ,SAAoB,CAAa,CAAE,CAAO,EACtC,IAAML,EAAY,UAAqB,EAAS,IAEhD,IAAK,IAAM,IADS,UAAO,EAAQ,KAAK,EAAE,MAAM,CAAC,KAAY,EAAE,MAAM,CAAC,GAAQA,EAAU,GAAG,CAAC,IAC5D,CAC5B,IAAM,EAAMC,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,GAAgB,CAAE,QAAS,EAAG,SAAU,EAAG,QAAS,EAAG,KAAM,EAAG,GAAI,CAAE,GAClH,EAAc,MAAM,CAAC,IAAI,CAAC,EAAM,AAGxC,SAAS,EAAa,CAAG,CAAE,CAAO,CAAE,EAAc,EAAK,EACnD,IAAI,EACJ,GAAI,UAAU,GACV,EAAS,AAmOjB,SAAsB,CAAG,CAAE,CAAO,EAC9B,IAAM,EAAM,EAAI,OAAO,GACjB,EAAQ,EAAI,MAAM,CAAC,EAAQ,KAAK,CAAC,CACvC,GAAI,CAAC,EACD,MAAM,AAAIE,MAAM,qCAAuC,EAAQ,KAAK,EAExE,MAAO,IAAM,EAAI,MAAM,CAAC,OAAO,CAAC,EAAK,EAAO,EAChD,EA1O8B,EAAK,QAE1B,GAAI,UAAS,GACd,EAAS,AA6BjB,SAAqB,CAAG,CAAE,CAAM,EAC5B,IAAM,EAAa,UAAY,GAC/B,MAAO,IAAM,EAAI,MAAM,CAAC,MAAM,CAAC,EAAY,EAC/C,EAhC6B,EAAK,QAEzB,GAAI,UAAa,GAClB,EAAS,EAAa,EAAK,EAAQ,QAAQ,OAE1C,GAAI,UAAiB,GACtB,EAAS,AA0LjB,SAAS,EAAoB,CAAG,CAAE,CAAQ,CAAE,EAAW,EAAS,QAAQ,EACpE,GAAK,EAWA,GAAI,UAAW,IAAa,UAAa,EAAS,IAAI,CAAC,GAAG,EAAG,CAE9D,IAAM,EAAO,EAAS,IAAI,CAAC,GAAG,CACxBK,EAAM,EAAI,OAAO,GACvB,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,OAAO,CAACA,EAAK,GAAQ,EAAK,GAAO,GAAO,EAAU,EAClF,MACK,GAAI,UAAW,IAAa,UAAe,EAAS,IAAI,CAAC,GAAG,EAAG,CAChE,IAAM,EAAM,EAAI,OAAO,GACjB,EAAe,GAAS,EAAK,EAAS,IAAI,CAAC,GAAG,CAAC,IAAI,EACzD,MAAO,IAAM,EAAI,MAAM,CAAC,OAAO,CAAC,EAAK,EAAc,EACvD,MACK,GAAI,UAAU,GAAW,CAC1B,IAAM,EAAM,EAAI,OAAO,GACjB,EAAU,GAAS,EAAK,EAAS,KAAK,EAC5C,MAAO,IAAM,EAAI,MAAM,CAAC,OAAO,CAAC,EAAK,EAAS,EAClD,MAEI,MAAM,AAAIL,MAAM,yCA5BL,EACX,GAAI,CAAC,EAAS,IAAI,CAAC,GAAG,CAClB,MAAM,AAAIA,MAAM,wCAA0C,EAAS,IAAI,CAAC,QAAQ,EAEpF,IAAM,EAAa,UAAmB,EAAS,IAAI,CAAC,GAAG,EACjD,EAAiB,QAA+C,KAAK,EAAI,EAAW,QAAQ,CAClG,GAAI,CAAC,EACD,MAAM,AAAIA,MAAM,4CAA8C,UAAY,EAAS,IAAI,CAAC,GAAG,GAE/F,OAAO,EAAoB,EAAK,EAAU,EAC9C,CAoBJ,EAzNqC,EAAK,QAEjC,GAAI,UAAW,GAChB,EAAS,AAwBjB,SAAuB,CAAG,CAAE,CAAQ,EAChC,IAAMH,EAAO,EAAS,IAAI,CAAC,GAAG,CAC9B,GAAI,UAAaA,GAAO,CACpB,IAAM,EAAM,EAAI,OAAO,GACjB,EAAWA,EAAK,QAAQ,CACxB,EAAY,EAAS,SAAS,CAAC,MAAM,CAAG,EAAI,AAe1D,SAAgC,CAAI,CAAE,CAAS,EAC3C,IAAM,EAAa,EAAU,GAAG,CAACI,GAAK,GAAeA,EAAE,KAAK,GAC5D,OAAO,AAAC,IACJ,IAAM,EAAW,CAAC,EAClB,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAW,MAAM,CAAEA,IAAK,CACxC,IAAM,EAAa,EAAK,UAAU,CAACA,EAAE,CAC/B,EAAY,CAAU,CAACA,EAAE,AAC/B,EAAQ,CAAC,EAAW,IAAI,CAAC,CAAG,EAAU,EAC1C,CACA,OAAO,CACX,CACJ,EA1BiFR,EAAM,EAAS,SAAS,EAAI,IAAO,EAAC,GAC7G,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,OAAO,CAAC,EAAK,GAAQ,EAAKA,GAAO,EAAU,EAAU,EAAU,GAC/F,CACK,GAAI,UAAeA,GAAO,CAC3B,IAAM,EAAM,EAAI,OAAO,GACjB,EAAS,GAAS,EAAKA,EAAK,IAAI,EACtC,MAAO,IAAM,EAAI,MAAM,CAAC,OAAO,CAAC,EAAK,EAAQ,EACjD,CACK,GAAKA,EAIN,SAAkBA,QAHlB,MAAM,IAAI,IAAiB,CAAC,EAAS,QAAQ,CAAE,CAAC,gBAAgB,EAAE,EAAS,IAAI,CAAC,QAAQ,CAAC,CAAC,CAKlG,EA3C+B,EAAK,QAE3B,GAAI,UAAe,GACpB,EAAS,AA8EjB,SAA2B,CAAG,CAAE,CAAY,EACxC,GAAI,AAAiC,IAAjC,EAAa,QAAQ,CAAC,MAAM,CAC5B,OAAO,EAAa,EAAK,EAAa,QAAQ,CAAC,EAAE,CAEhD,EACD,IAAM,EAAU,EAAE,CAClB,IAAK,IAAM,KAAW,EAAa,QAAQ,CAAE,CACzC,IAAM,EAAmB,CAGrB,IAAK,EAAa,EAAK,EAAS,GACpC,EACM,EAAQ,GAAkB,EAC5B,IACA,GAAiB,IAAI,CAAG,GAAe,EAAK,EAEhD,EAAQ,IAAI,CAAC,EACjB,CACA,IAAMQ,EAAM,EAAI,EAAE,GAClB,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,YAAY,CAACA,EAAK,EAAQ,GAAG,CAAC,IACtD,IAAM,EAAM,CACR,IAAK,IAAM,EAAO,GAAG,CAAC,EAC1B,EACM,EAAO,EAAO,IAAI,CAIxB,OAHI,GACA,GAAI,IAAI,CAAG,IAAM,EAAK,EAAI,EAEvB,CACX,GACJ,CACJ,EA5GmC,EAAK,QAE/B,GAAI,UAAiB,GACtB,EAAS,AA0GjB,SAA6B,CAAG,CAAE,CAAK,EACnC,GAAI,AAA0B,IAA1B,EAAM,QAAQ,CAAC,MAAM,CACrB,OAAO,EAAa,EAAK,EAAM,QAAQ,CAAC,EAAE,EAE9C,IAAM,EAAU,EAAE,CAClB,IAAK,IAAM,KAAW,EAAM,QAAQ,CAAE,CAClC,IAAM,EAAmB,CAGrB,IAAK,EAAa,EAAK,EAAS,GACpC,EACM,EAAQ,GAAkB,EAC5B,IACA,GAAiB,IAAI,CAAG,GAAe,EAAK,EAEhD,EAAQ,IAAI,CAAC,EACjB,CACA,IAAM,EAAQ,EAAI,EAAE,GACd,EAAS,CAAC,EAAU,KACtB,IAAM,EAAU,EAAQ,YAAY,GAAG,IAAI,CAAC,KAC5C,MAAO,CAAC,OAAO,EAAE,EAAS,CAAC,EAAE,EAAQ,CAAC,AAC1C,EAgCM,EAAU,GAAK,EAAK,GAAkB,GA/BvB,AAAC,GAAS,EAAI,MAAM,CAAC,YAAY,CAAC,EAAO,EAAQ,GAAG,CAAC,CAAC,EAAQ,KAC/E,IAAM,EAAM,CAAE,IAAK,IAAM,EAAK,EACxB,EAAS,EAAI,MAAM,AACzB,GAAI,GAAG,CAAG,KAEN,GADA,EAAO,GAAG,CAAC,GACP,CAAC,EAAO,WAAW,GAAI,CACvB,IAAM,EAAM,EAAO,EAAO,EACtB,CAAC,EAAO,eAAe,CAAC,GAAG,CAAC,IAE5B,EAAO,eAAe,CAAC,GAAG,CAAC,EAAK,EAAE,EAEtC,IAAM,EAAa,EAAO,eAAe,CAAC,GAAG,CAAC,EAC1C,AAAqF,UAA7E,SAA+C,KAAK,EAAI,CAAU,CAAC,EAAI,AAAD,GAE9E,EAAU,CAAC,EAAI,CAAG,EAAG,CAE7B,CACJ,EACA,IAAM,EAAO,EAAO,IAAI,CAWxB,OAVI,EACA,EAAI,IAAI,CAAG,IAAM,EAAK,GAGtB,EAAI,IAAI,CAAG,KACP,IAAM,EAAsB,EAAO,eAAe,CAAC,GAAG,CAAC,EAAO,EAAO,IAErE,MADc,CAAE,SAAiE,KAAK,EAAI,CAAmB,CAAC,EAAI,AAAD,CAErH,EAEG,CACX,IACkE,KAClE,OAAO,AAAC,IACJ,EAAQ,GACJ,AAAC,EAAI,MAAM,CAAC,WAAW,IACvB,EAAI,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,EAAO,EAAO,EAAI,MAAM,EAElE,CACJ,EAtKqC,EAAK,QAEjC,GAAI,UAAQ,GACb,EAAS,AAoKjB,SAAoB,CAAG,CAAE,CAAK,EAC1B,IAAM,EAAU,EAAM,QAAQ,CAAC,GAAG,CAAC,GAAK,EAAa,EAAK,IAC1D,OAAO,AAAC,GAAS,EAAQ,OAAO,CAAC,GAAU,EAAO,GACtD,EAvK4B,EAAK,QAExB,GAAI,UAAY,GAAU,CAC3B,IAAM,EAAM,EAAI,OAAO,GACvB,EAAS,IAAM,EAAI,MAAM,CAAC,OAAO,CAAC,EAAK,KAAG,CAAE,EAChD,MAEI,MAAM,IAAI,IAAiB,CAAC,EAAQ,QAAQ,CAAE,CAAC,yBAAyB,EAAE,EAAQ,KAAK,CAAC,CAAC,EAE7F,OAAO,GAAK,EAAK,EAAc,OAAY,GAAkB,GAAU,EAAQ,EAAQ,WAAW,CACtG,EArCqD,EAAK,EAAK,UAAU,EACrE,CACJ,EAf0B,CAClB,SACA,SACA,UAAW,IAAIqB,GACnB,EAC0B,GACnB,CACX,CAgFA,SAAS,GAAe,CAAS,EAC7B,GAAI,UAAc,GAAY,CAC1B,IAAM,EAAO,GAAe,EAAU,IAAI,EACpC7B,EAAQ,GAAe,EAAU,KAAK,EAC5C,OAAO,AAAC,GAAU,EAAK,IAASA,EAAM,EAC1C,CACK,GAAI,UAAc,GAAY,CAC/B,IAAM,EAAO,GAAe,EAAU,IAAI,EACpCA,EAAQ,GAAe,EAAU,KAAK,EAC5C,OAAO,AAAC,GAAU,EAAK,IAASA,EAAM,EAC1C,CACK,GAAI,UAAW,GAAY,CAC5B,IAAM,EAAQ,GAAe,EAAU,KAAK,EAC5C,OAAO,AAAC,GAAS,CAAC,EAAM,EAC5B,CACK,GAAI,UAAqB,GAAY,CACtC,IAAM,EAAO,EAAU,SAAS,CAAC,GAAG,CAAC,IAAI,CACzC,OAAO,AAAC,GAAS,AAAS,SAAT,GAAsB,AAAe,KAAf,CAAI,CAAC,EAAK,AACrD,CACK,GAAI,SAAiB,GAAY,CAClC,IAAM,EAAQ,EAAQ,EAAU,IAAI,CACpC,MAAO,IAAM,CACjB,CACA,SAAkB,EACtB,CAiGA,SAAS,GAAkBI,CAAO,EAC9B,GAAI,UAAQA,GACR,OAAOA,EAAQ,cAAc,AAGrC,CAyCA,SAAS,GAAK,CAAG,CAAE,CAAK,CAAE,CAAM,CAAE,CAAW,EACzC,IAAM,EAAO,GAAS,GAAe,GACrC,GAAI,CAAC,EACD,IAAI,EAcA,OAAO,MAdD,CACN,IAAM,EAAM,EAAI,EAAE,GAClB,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,YAAY,CAAC,EAAK,CAC1C,CACI,IAAK,IAAM,EAAO,GAClB,KAAM,IAAM,EAAK,EACrB,EACA,CACI,IAAK,YACL,KAAM,IAAM,CAAC,EAAK,EACtB,EACH,CACL,CAKJ,GAAI,AAAgB,MAAhB,EAAqB,CACrB,IAAM,EAAM,EAAI,IAAI,GACpB,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,IAAI,CAAC,EAAK,CAClC,IAAK,IAAM,EAAO,GAClB,KAAM,EAAO,IAAM,EAAK,GAAQ,MACpC,EACJ,CACK,GAAI,AAAgB,MAAhB,EAAqB,CAC1B,IAAM,EAAM,EAAI,IAAI,GACpB,IAAI,EAoBA,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,UAAU,CAAC,EAAK,CACxC,IAAK,IAAM,EAAO,EACtB,EAtBM,EACN,IAAM,EAAQ,EAAI,EAAE,GAKpB,OAAO,AAACK,GAAS,EAAI,MAAM,CAAC,YAAY,CAAC,EAAO,CAC5C,CACI,IAAK,IAAM,EAAI,MAAM,CAAC,UAAU,CAAC,EAAK,CAClC,IAAK,IAAM,EAAOA,EACtB,GACA,KAAM,IAAM,EAAKA,EACrB,EACA,CACI,IAAK,YACL,KAAM,IAAM,CAAC,EAAKA,EACtB,EACH,CACL,CAMJ,CACK,GAAI,AAAgB,MAAhB,EAAqB,CAC1B,IAAM,EAAM,EAAI,QAAQ,GACxB,OAAO,AAAC,GAAS,EAAI,MAAM,CAAC,QAAQ,CAAC,EAAK,CACtC,IAAK,IAAM,EAAO,GAClB,KAAM,EAAO,IAAM,EAAK,GAAQ,MACpC,EACJ,CAEI,SAAkB,EAE1B,CACA,SAAS,GAAQ,CAAG,CAAE,CAAO,EACzB,IAAM,EAAO,AAMjB,SAAqB,CAAG,CAAE,CAAO,EAC7B,GAAI,UAAa,GACb,OAAO,EAAQ,IAAI,AAKlB,EAHA,GAAI,EAAI,SAAS,CAAC,GAAG,CAAC,GACvB,OAAO,EAAI,SAAS,CAAC,GAAG,CAAC,GAGzB,IAAI,EAAO,EACP,EAAS,EAAK,UAAU,CACxB,EAAW,EAAQ,KAAK,CAC5B,KAAO,CAAC,UAAa,IACb,WAAQ,IAAW,UAAe,IAAW,UAAiB,EAAM,GAEpE,GAAW,AADG,EAAO,QAAQ,CAAC,OAAO,CAAC,GACrB,QAAQ,GAAK,IAAM,CAAO,EAE/C,EAAO,EACP,EAAS,EAAO,UAAU,CAK9B,OAFA,EAAW,AADE,EACG,IAAI,CAAG,IAAM,EAC7B,EAAI,SAAS,CAAC,GAAG,CAAC,EAAS,GACpB,CACX,CACJ,EA9B6B,EAAK,GACxB,EAAO,EAAI,MAAM,CAAC,OAAO,CAAC,GAChC,GAAI,CAAC,EACD,MAAM,AAAIN,MAAM,CAAC,MAAM,EAAE,EAAK,aAAa,CAAC,EAChD,OAAO,CACX,CA0BA,SAAS,GAAS,CAAG,CAAE,CAAI,EACvB,IAAM,EAAQ,EAAI,MAAM,CAAC,EAAK,CAC9B,GAAI,CAAC,EACD,MAAM,AAAIA,MAAM,CAAC,OAAO,EAAE,EAAK,aAAa,CAAC,EACjD,OAAO,CACX,C,mDCzVA,IAAI,GAAW,EAqBF,GAAqB6B,OAAO,sBAmBlC,eAAe,GAAkB,CAAK,EACzC,GAAI,IAAU,yBAAsB,CAEhC,OAEJ,IAAM,EAAUC,YAAY,GAAG,GAS/B,GARI,EAAU,IA7Ca,KA8CvB,GAAW,EACX,MA3DG,IAAIC,QAAQ,IAGX,AAAwB,aAAxB,OAAOC,aACPC,WAAW,EAAS,GAGpBD,aAAa,EAErB,GAsDI,GAAWF,YAAY,GAAG,IAE1B,EAAM,uBAAuB,CAC7B,MAAM,EAEd,CAKO,MAAM,GACT,aAAc,CACV,IAAI,CAAC,OAAO,CAAG,IAAIC,QAAQ,CAAC,EAAS,KACjC,IAAI,CAAC,OAAO,CAAG,AAAC,IACZ,EAAQ,GACD,IAAI,EAEf,IAAI,CAAC,MAAM,CAAG,AAAC9B,IACX,EAAOA,GACA,IAAI,CAEnB,EACJ,CACJ,Cb5FA,MAAM,GACF,YAAY,CAAG,CAAE,CAAU,CAAE,CAAO,CAAE,CAAO,CAAE,CAC3C,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,YAAY,CAAG,MACxB,CACA,IAAI,KAAM,CACN,OAAO,IAAI,CAAC,IAAI,AACpB,CACA,IAAI,YAAa,CACb,OAAO,IAAI,CAAC,WAAW,AAC3B,CACA,IAAI,SAAU,CACV,OAAO,IAAI,CAAC,QAAQ,AACxB,CACA,QAAQ,CAAK,CAAE,CACX,GAAI,EAAO,CACP,IAAM,EAAQ,IAAI,CAAC,QAAQ,CAAC,EAAM,KAAK,EACjC,EAAM,IAAI,CAAC,QAAQ,CAAC,EAAM,GAAG,EACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAO,EAC1C,CACA,OAAO,IAAI,CAAC,QAAQ,AACxB,CACA,OAAO,CAAO,CAAE,CAAO,CAAE,CACrB,IAAK,IAAM,KAAU,EACjB,GAAI,GAAiB,aAAa,CAAC,GAAS,CAExC,IAAM,EAAQ,GAAmB,EAAO,KAAK,EAEvC,EAAc,IAAI,CAAC,QAAQ,CAAC,EAAM,KAAK,EACvC,EAAY,IAAI,CAAC,QAAQ,CAAC,EAAM,GAAG,CACzC,KAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAG,GAAe,EAAO,IAAI,CAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,EAE/H,IAAM,EAAYe,KAAK,GAAG,CAAC,EAAM,KAAK,CAAC,IAAI,CAAE,GACvC,EAAUA,KAAK,GAAG,CAAC,EAAM,GAAG,CAAC,IAAI,CAAE,GACrC,EAAc,IAAI,CAAC,YAAY,CAC7B,EAAmB,GAAmB,EAAO,IAAI,CAAE,GAAO,GAChE,GAAI,EAAU,IAAc,EAAiB,MAAM,CAC/C,IAAK,IAAI,EAAI,EAAG,EAAM,EAAiB,MAAM,CAAE,EAAI,EAAK,IACpD,CAAW,CAAC,EAAI,EAAY,EAAE,CAAG,CAAgB,CAAC,EAAE,MAIpD,EAAiB,MAAM,CAAG,IAC1B,EAAY,MAAM,CAAC,EAAY,EAAG,EAAU,KAAc,GAG1D,IAAI,CAAC,YAAY,CAAG,EAAc,EAAY,KAAK,CAAC,EAAG,EAAY,GAAG,MAAM,CAAC,EAAkB,EAAY,KAAK,CAAC,EAAU,IAGnI,IAAM,EAAO,EAAO,IAAI,CAAC,MAAM,CAAI,GAAY,CAAU,EACzD,GAAI,AAAS,IAAT,EACA,IAAK,IAAI,EAAI,EAAY,EAAI,EAAiB,MAAM,CAAE,EAAM,EAAY,MAAM,CAAE,EAAI,EAAK,IACrF,CAAW,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAAG,CAG9C,MACK,GAAI,GAAiB,MAAM,CAAC,GAC7B,IAAI,CAAC,QAAQ,CAAG,EAAO,IAAI,CAC3B,IAAI,CAAC,YAAY,CAAG,YAGpB,MAAM,AAAIhB,MAAM,gCAGxB,KAAI,CAAC,QAAQ,CAAG,CACpB,CACA,gBAAiB,CAIb,OAHI,AAAsB,SAAtB,IAAI,CAAC,YAAY,EACjB,KAAI,CAAC,YAAY,CAAG,GAAmB,IAAI,CAAC,QAAQ,CAAE,GAAI,EAEvD,IAAI,CAAC,YAAY,AAC5B,CACA,WAAW,CAAM,CAAE,CACf,EAASgB,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,EAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAG,GAC1D,IAAM,EAAc,IAAI,CAAC,cAAc,GACnC,EAAM,EAAG,EAAO,EAAY,MAAM,CACtC,GAAI,AAAS,IAAT,EACA,MAAO,CAAE,KAAM,EAAG,UAAW,CAAO,EAExC,KAAO,EAAM,GAAM,CACf,IAAM,EAAMA,KAAK,KAAK,CAAC,AAAC,GAAM,CAAG,EAAK,EAClC,EAAW,CAAC,EAAI,CAAG,EACnB,EAAO,EAGP,EAAM,EAAM,CAEpB,CAGA,IAAM,EAAO,EAAM,EAEnB,OADA,EAAS,IAAI,CAAC,eAAe,CAAC,EAAQ,CAAW,CAAC,EAAK,EAChD,CAAE,OAAM,UAAW,EAAS,CAAW,CAAC,EAAK,AAAC,CACzD,CACA,SAAS,CAAQ,CAAE,CACf,IAAM,EAAc,IAAI,CAAC,cAAc,GACvC,GAAI,EAAS,IAAI,EAAI,EAAY,MAAM,CACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAE1B,GAAI,EAAS,IAAI,CAAG,EACrB,OAAO,EAEX,IAAM,EAAa,CAAW,CAAC,EAAS,IAAI,CAAC,CAC7C,GAAI,EAAS,SAAS,EAAI,EACtB,OAAO,EAEX,IAAMM,EAAiB,AAAC,EAAS,IAAI,CAAG,EAAI,EAAY,MAAM,CAAI,CAAW,CAAC,EAAS,IAAI,CAAG,EAAE,CAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CACjH,EAASN,KAAK,GAAG,CAAC,EAAa,EAAS,SAAS,CAAEM,GACzD,OAAO,IAAI,CAAC,eAAe,CAAC,EAAQ,EACxC,CACA,gBAAgB,CAAM,CAAE,CAAU,CAAE,CAChC,KAAO,EAAS,GAAc,GAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAS,KAClE,IAEJ,OAAO,CACX,CACA,IAAI,WAAY,CACZ,OAAO,IAAI,CAAC,cAAc,GAAG,MAAM,AACvC,CACA,OAAO,cAAcrB,CAAK,CAAE,CAExB,OAAO,MADWA,GAEd,AAA0B,UAA1B,OAAO,AAFOA,EAEG,IAAI,EAAiB,AAAoB,SAApB,AAFxBA,EAEkC,KAAK,EACpD,CAA0B,SAA1B,AAHaA,EAGH,WAAW,EAAkB,AAAiC,UAAjC,OAAO,AAHjCA,EAG2C,WAAW,AAAY,CACxF,CACA,OAAO,OAAOA,CAAK,CAAE,CAEjB,OAAO,MADWA,GAEd,AAA0B,UAA1B,OAAO,AAFOA,EAEG,IAAI,EAAiB,AAAoB,SAApB,AAFxBA,EAEkC,KAAK,EAAkB,AAA0B,SAA1B,AAFzDA,EAEmE,WAAW,AACpG,CACJ,CA+FA,SAAS,GAAmB,CAAI,CAAE,CAAa,CAAE,EAAa,CAAC,EAC3D,IAAM,EAAS,EAAgB,CAAC,EAAW,CAAG,EAAE,CAChD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CAClC,IAAM,EAAK,EAAK,UAAU,CAAC,GACvB,GAAM,KACF,AAAO,KAAP,GAA2C,EAAI,EAAI,EAAK,MAAM,EAAI,AAA2B,KAA3B,EAAK,UAAU,CAAC,EAAI,IACtF,IAEJ,EAAO,IAAI,CAAC,EAAa,EAAI,GAErC,CACA,OAAO,CACX,CACA,SAAS,GAAM,CAAI,EACf,OAAO,AAAS,KAAT,GAA6C,AAAS,KAAT,CACxD,CACA,SAAS,GAAmB,CAAK,EAC7B,IAAM,EAAQ,EAAM,KAAK,CACnB,EAAM,EAAM,GAAG,QACrB,AAAI,EAAM,IAAI,CAAG,EAAI,IAAI,EAAK,EAAM,IAAI,GAAK,EAAI,IAAI,EAAI,EAAM,SAAS,CAAG,EAAI,SAAS,CAC7E,CAAE,MAAO,EAAK,IAAK,CAAM,EAE7B,CACX,CACA,SAAS,GAAkB,CAAQ,EAC/B,IAAM,EAAQ,GAAmB,EAAS,KAAK,SAC/C,AAAI,IAAU,EAAS,KAAK,CACjB,CAAE,QAAS,EAAS,OAAO,CAAE,OAAM,EAEvC,CACX,CA/GI,CAZO,GA4DR,IAAiB,IAAe,CAAC,IAhDnB,MAAM,CAHnB,SAAgB,CAAG,CAAE,CAAU,CAAE,CAAO,CAAE,CAAO,EAC7C,OAAO,IAAI,GAAiB,EAAK,EAAY,EAAS,EAC1D,EAoBA,GAAa,MAAM,CATnB,SAAgB,CAAQ,CAAE,CAAO,CAAE,CAAO,EACtC,GAAI,aAAoB,GAEpB,OADA,EAAS,MAAM,CAAC,EAAS,GAClB,CAGP,OAAM,AAAID,MAAM,uEAExB,EA6BA,GAAa,UAAU,CA3BvB,SAAoB,CAAQ,CAAE,CAAK,EAC/B,IAAM,EAAO,EAAS,OAAO,GACvB,EAAc,AA2B5B,SAAS,EAAU,CAAI,CAAE,CAAO,EAC5B,GAAI,EAAK,MAAM,EAAI,EAEf,OAAO,EAEX,IAAM,EAAI,AAAC,EAAK,MAAM,CAAG,EAAK,EACxB,EAAO,EAAK,KAAK,CAAC,EAAG,GACrB,EAAQ,EAAK,KAAK,CAAC,GACzB,EAAU,EAAM,GAChB,EAAU,EAAO,GACjB,IAAI,EAAU,EACV,EAAW,EACX,EAAI,EACR,KAAO,EAAU,EAAK,MAAM,EAAI,EAAW,EAAM,MAAM,EAE/C,AAAO,GADC,EAAQ,CAAI,CAAC,EAAQ,CAAE,CAAK,CAAC,EAAS,EAG9C,CAAI,CAAC,IAAI,CAAG,CAAI,CAAC,IAAU,CAI3B,CAAI,CAAC,IAAI,CAAG,CAAK,CAAC,IAAW,CAGrC,KAAO,EAAU,EAAK,MAAM,EACxB,CAAI,CAAC,IAAI,CAAG,CAAI,CAAC,IAAU,CAE/B,KAAO,EAAW,EAAM,MAAM,EAC1B,CAAI,CAAC,IAAI,CAAG,CAAK,CAAC,IAAW,CAEjC,OAAO,CACX,EA1DsC,EAAM,GAAG,CAAC,IAAoB,CAAC,EAAG,KAC5D,IAAM,EAAO,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAG,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,QACpD,AAAI,AAAS,IAAT,EACO,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAG,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAErD,CACX,GACI,EAAqB,EACnB,EAAQ,EAAE,CAChB,IAAK,IAAM,KAAK,EAAa,CACzB,IAAM,EAAc,EAAS,QAAQ,CAAC,EAAE,KAAK,CAAC,KAAK,EACnD,GAAI,EAAc,EACd,MAAM,AAAIA,MAAM,mBAEX,GAAc,GACnB,EAAM,IAAI,CAAC,EAAK,SAAS,CAAC,EAAoB,IAE9C,EAAE,OAAO,CAAC,MAAM,EAChB,EAAM,IAAI,CAAC,EAAE,OAAO,EAExB,EAAqB,EAAS,QAAQ,CAAC,EAAE,KAAK,CAAC,GAAG,CACtD,CAEA,OADA,EAAM,IAAI,CAAC,EAAK,MAAM,CAAC,IAChB,EAAM,IAAI,CAAC,GACtB,E,eC3KA,EALO,GAyCR,IAAkB,IAAgB,CAAC,GApCrB,CAAC,GAAc,OAAU,CAAG,EAAE,CAAG,UAM9C,EAAa,CAAC,GAAc,MAAS,CAAG,EAAE,CAAG,SAK7C,EAAa,CAAC,GAAc,cAAiB,CAAG,EAAE,CAAG,iBAQrD,EAAa,CAAC,GAAc,cAAiB,CAAG,EAAE,CAAG,iBAKrD,EAAa,CAAC,GAAc,MAAS,CAAG,EAAE,CAAG,SAM7C,EAAa,CAAC,GAAc,iBAAoB,CAAG,EAAE,CAAG,oBAKxD,EAAa,CAAC,GAAc,SAAY,CAAG,EAAE,CAAG,WAE7C,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,eAAe,CAAG,EAAS,eAAe,CAC/C,IAAI,CAAC,aAAa,CAAG,EAAS,SAAS,CAAC,aAAa,CACrD,IAAI,CAAC,kBAAkB,CAAG,EAAS,SAAS,CAAC,kBAAkB,AACnE,CACA,MAAM,QAAQ,CAAG,CAAE,EAAoB,yBAAsB,CAAE,CAC3D,IAAM,EAAU,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GACvD,OAAO,IAAI,CAAC,WAAW,CAAC,EAAK,EAAS,EAC1C,CACA,iBAAiB,CAAY,CAAE,CAAG,CAAE,CAAK,CAAE,OAEvC,CADA,EAAM,QAAiC,EAAM,UAAS,CAAC,EAAa,GAAG,EACnE,uBAAoB,CAAC,IACd,IAAI,CAAC,WAAW,CAAC,EAAK,EAAc,GAGpC,IAAI,CAAC,MAAM,CAAC,EAAK,EAAc,EAE9C,CACA,WAAW,CAAI,CAAE,CAAG,CAAE,CAAK,CAAE,QACzB,AAAI,uBAAoB,CAAC,GACd,IAAI,CAAC,WAAW,CAAC,EAAK,EAAM,GAG5B,IAAI,CAAC,MAAM,CAAC,EAAK,EAAM,EAEtC,CACA,UAAU,CAAK,CAAE,CAAG,CAAE,CAClB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAK,CAAE,OAAQ,CAAM,EAC5C,CACA,OAAO,CAAG,CAAE,CAAO,CAAE,CAAO,CAAE,CAC1B,GAAI,AAAmB,UAAnB,OAAO,EAAsB,CAC7B,IAAM,EAAc,IAAI,CAAC,KAAK,CAAC,EAAK,EAAS,GAC7C,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAa,EAAK,OAAW,EACnE,CACK,GAAI,WAAY,EAAS,CAC1B,IAAM,EAAc,CAAE,MAAO,EAAQ,MAAM,CAAE,aAAc,EAAE,CAAE,YAAa,EAAE,AAAC,EAC/E,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAa,EACnD,CACK,CACD,IAAM,EAAc,IAAI,CAAC,KAAK,CAAC,EAAK,EAAQ,OAAO,GAAI,GACvD,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAa,EAAK,EACxD,CACJ,CACA,MAAM,YAAY,CAAG,CAAE,CAAO,CAAE,CAAW,CAAE,CACzC,GAAI,AAAmB,UAAnB,OAAO,EAAsB,CAC7B,IAAM,EAAc,MAAM,IAAI,CAAC,UAAU,CAAC,EAAK,EAAS,GACxD,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAa,EAAK,OAAW,EACnE,CACK,CACD,IAAM,EAAc,MAAM,IAAI,CAAC,UAAU,CAAC,EAAK,EAAQ,OAAO,GAAI,GAClE,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAa,EAAK,EACxD,CACJ,CAYA,sBAAsB,CAAW,CAAE,CAAG,CAAE,CAAY,CAAE,CAAI,CAAE,CACxD,IAAI,EACJ,GAAI,EACA,EAAW,CACP,cACA,MACA,MAAO,GAAc,MAAM,CAC3B,WAAY,EAAE,CACd,cACJ,MAEC,CACD,IAAM,EAAqB,IAAI,CAAC,wBAAwB,CAAC,EAAK,GAC9D,EAAW,CACP,cACA,MACA,MAAO,GAAc,MAAM,CAC3B,WAAY,EAAE,CACd,IAAI,cAAe,CACf,OAAO,GACX,CACJ,CACJ,CAEA,OADA,EAAY,KAAK,CAAC,SAAS,CAAG,EACvB,CACX,CACA,MAAM,OAAO,CAAQ,CAAE,CAAiB,CAAE,CACtC,IAAI,EAAI,EAER,IAAM,EAAU,MAAC,GAAK,EAAS,WAAW,CAAC,KAAK,CAAC,QAAQ,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,QAAQ,CAC1G,EAAe,MAAC,GAAK,IAAI,CAAC,aAAa,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,CAAC,EAAS,GAAG,CAAC,QAAQ,IAC1G,EAAO,EAAe,EAAa,OAAO,GAAK,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAS,GAAG,EACxG,GAAI,EACAF,OAAO,cAAc,CAAC,EAAU,eAAgB,CAC5C,MAAO,CACX,OAEC,CACD,IAAMI,EAAqB,IAAI,CAAC,wBAAwB,CAAC,EAAS,GAAG,CAAE,GACvEJ,OAAO,cAAc,CAAC,EAAU,eAAgB,CAC5C,IAAKI,CACT,EACJ,CAQA,OALI,IAAY,IACZ,EAAS,WAAW,CAAG,MAAM,IAAI,CAAC,UAAU,CAAC,EAAS,GAAG,CAAE,EAAM,GACjE,EAAS,WAAW,CAAC,KAAK,CAAC,SAAS,CAAG,GAE3C,EAAS,KAAK,CAAG,GAAc,MAAM,CAC9B,CACX,CACA,MAAM,CAAG,CAAEA,CAAI,CAAE,CAAO,CAAE,CAEtB,OAAO,AADU,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAClC,MAAM,CAAC,aAAa,CAAC,KAAK,CAACA,EAAM,EACrD,CACA,WAAW,CAAG,CAAEA,CAAI,CAAE,CAAiB,CAAE,CAErC,OAAO,AADU,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAClC,MAAM,CAAC,WAAW,CAAC,KAAK,CAACA,EAAM,EACnD,CACA,yBAAyB,CAAG,CAAEA,CAAI,CAAE,CAChC,IACI,EADE,EAAkB,IAAI,CAAC,eAAe,CAE5C,MAAO,IACI,QAAyC,EAAW,EAAU,SAAmB,CAAC,EAAI,QAAQ,GAAI,EAAgB,WAAW,CAAC,GAAK,gBAAgB,CAAC,UAAU,CAAE,EAAGA,MAAAA,EAAmCA,EAAO,GAE5N,CACJ,CACO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,WAAW,CAAG,IAAIwB,IACvB,IAAI,CAAC,sBAAsB,CAAG,EAAS,SAAS,CAAC,sBAAsB,CACvE,IAAI,CAAC,eAAe,CAAG,EAAS,eAAe,AACnD,CACA,IAAI,KAAM,CACN,MAAO,UAAO,IAAI,CAAC,WAAW,CAAC,MAAM,GACzC,CACA,YAAY,CAAQ,CAAE,CAClB,IAAM,EAAY,EAAS,GAAG,CAAC,QAAQ,GACvC,GAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GACrB,MAAM,AAAI1B,MAAM,CAAC,yBAAyB,EAAE,EAAU,qBAAqB,CAAC,EAEhF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAW,EACpC,CACA,YAAY,CAAG,CAAE,CACb,IAAM,EAAY,EAAI,QAAQ,GAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAChC,CACA,MAAM,oBAAoB,CAAG,CAAE,CAAiB,CAAE,CAC9C,IAAI,EAAW,IAAI,CAAC,WAAW,CAAC,UAC5B,IAGJ,EAAW,MAAM,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAK,GAC1D,IAAI,CAAC,WAAW,CAAC,IAHN,CAKf,CACA,eAAe,CAAG,CAAEE,CAAI,CAAE,CAAiB,CAAE,CACzC,GAAI,EACA,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAACA,EAAM,EAAK,GAAmB,IAAI,CAAC,IAC7E,IAAI,CAAC,WAAW,CAAC,GACV,GAGV,EACD,IAAM,EAAW,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAACA,EAAM,GAE9D,OADA,IAAI,CAAC,WAAW,CAAC,GACV,CACX,CACJ,CACA,YAAY,CAAG,CAAE,CACb,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAI,QAAQ,GAC5C,CACA,mBAAmB,CAAG,CAAE,CACpB,IAAM,EAAY,EAAI,QAAQ,GACxB,EAAa,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAQxC,OAPI,IAEA,AADe,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAK,UAAU,CAAC,MAAM,CAC/D,MAAM,CAAC,GACd,EAAW,KAAK,CAAG,GAAc,OAAO,CACxC,EAAW,iBAAiB,CAAG,OAC/B,EAAW,WAAW,CAAG,QAEtB,CACX,CACA,eAAe,CAAG,CAAE,CAChB,IAAM,EAAY,EAAI,QAAQ,GACxB,EAAa,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAKxC,OAJI,IACA,EAAW,KAAK,CAAG,GAAc,OAAO,CACxC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAErB,CACX,CACJ,Ca7PA,IAAM,GAAgB2B,OAAO,gBACtB,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,UAAU,CAAG,EAAS,MAAM,CAAC,aAAa,CAC/C,IAAI,CAAC,gBAAgB,CAAG,IAAM,EAAS,MAAM,CAAC,SAAS,CAAC,gBAAgB,CACxE,IAAI,CAAC,aAAa,CAAG,EAAS,UAAU,CAAC,aAAa,CACtD,IAAI,CAAC,cAAc,CAAG,EAAS,SAAS,CAAC,cAAc,AAC3D,CACA,MAAM,KAAK,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACvD,IAAK,IAAM,IAAQ,UAAU,EAAS,WAAW,CAAC,KAAK,EACnD,MAAM,GAAkB,GACxB,UAAiB,GAAM,OAAO,CAAC,GAAO,IAAI,CAAC,MAAM,CAAC,EAAK,GAE/D,CACA,OAAO,CAAO,CAAE,CAAQ,CAAE,CACtB,IAAI,EACJ,IAAM,EAAM,EAAQ,SAAS,CAE7B,GAAI,AAAa,SAAb,EAAI,IAAI,CAAgB,CACxB,EAAI,IAAI,CAAG,GACX,GAAI,CACA,IAAM,EAAc,IAAI,CAAC,YAAY,CAAC,GACtC,GAAI,UAAe,GACf,EAAI,IAAI,CAAG,OAIX,GADA,EAAI,gBAAgB,CAAG,EACnB,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,EAAY,WAAW,EAAG,CAE9D,IAAM,EAAa,IAAI,CAAC,WAAW,CAAC,EACpC,GAAI,IAAI,CAAG,QAA+C,EAAa,IAAI,CAAC,kBAAkB,CAAC,EAAS,EAC5G,MAGI,EAAI,IAAI,CAAG,MAGvB,CACA,MAAO,EAAK,CACRT,QAAQ,KAAK,CAAC,CAAC,gDAAgD,EAAE,EAAI,QAAQ,CAAC,EAAE,CAAC,CAAE,GACnF,IAAM,EAAe,MAAC,GAAK,EAAI,OAAO,AAAD,EAA+B,EAAKjB,OAAO,EAChF,GAAI,IAAI,CAAGL,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,GAAU,CAAE,QAAS,CAAC,gDAAgD,EAAE,EAAI,QAAQ,CAAC,GAAG,EAAE,EAAa,CAAC,AAAC,EACxJ,CAKA,EAAS,UAAU,CAAC,IAAI,CAAC,EAC7B,CACJ,CACA,OAAO,CAAQ,CAAE,CACb,IAAK,IAAM,KAAO,EAAS,UAAU,CACjC,OAAO,EAAI,IAAI,CACf,OAAO,EAAI,gBAAgB,AAE/B,GAAS,UAAU,CAAG,EAAE,AAC5B,CACA,aAAa,CAAO,CAAE,CAElB,IAAM,EAAc,AADN,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAChB,UAAU,CAAC,EAAQ,SAAS,CAAC,QAAQ,EAC/D,OAAO,QAAiD,EAAc,IAAI,CAAC,kBAAkB,CAAC,EAClG,CACA,eAAe,CAAI,CAAE,CAAQ,CAAED,CAAO,CAAE,CAAO,CAAE,CAG7C,IAAM,EAAS,IAAI,CACb,EAAY,CACd,SAAUA,EACV,SAAU,EACV,IAAI,KAAM,CACN,IAAI,EACJ,GAAI,UAAU,IAAI,CAAC,IAAI,EAEnB,OAAO,IAAI,CAAC,IAAI,CAEf,GAAI,UAAqB,IAAI,CAAC,gBAAgB,EAAG,CAElD,IAAM,EAAa,EAAO,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAC3D,KAAI,CAAC,IAAI,CAAG,QAA+C,EAAa,EAAO,kBAAkB,CAAC,CAAE,YAAW,UAAW,EAAM,UAAS,EAAG,IAAI,CAAC,gBAAgB,CACrK,MACK,GAAI,AAAc,SAAd,IAAI,CAAC,IAAI,CAAgB,CAE9B,IAAI,CAAC,IAAI,CAAG,GACZ,IAAM,EAAW,UAAa,GAAM,SAAS,CACvC,EAAU,EAAO,aAAa,CAAC,CAAE,YAAW,UAAW,EAAM,UAAS,GAC5E,GAAI,EAAQ,KAAK,EAAI,GAAY,EAAS,KAAK,CAAG,iBAA4B,CAE1E,OAAO,IAAI,CAAC,IAAI,CAAG,MAEvB,KAAI,CAAC,IAAI,CAAG,MAAC,GAAK,EAAQ,IAAI,AAAD,EAA+B,EAAK,EAAQ,KAAK,CAC9E,IAAI,CAAC,gBAAgB,CAAG,EAAQ,KAAK,CACrC,SAAoD,EAAS,UAAU,CAAC,IAAI,CAAC,IAAI,CACrF,MACK,GAAI,IAAI,CAAC,IAAI,GAAK,GACnB,MAAM,AAAIG,MAAM,CAAC,sCAAsC,EAAE,EAAO,cAAc,CAAC,cAAc,CAAC,GAAM,CAAC,EAAE,EAAS,UAAU,EAAE,EAAQ,EAAE,CAAC,EAE3I,MAAO,UAAU,IAAI,CAAC,IAAI,EAAI,IAAI,CAAC,IAAI,CAAG,MAC9C,EACA,IAAI,kBAAmB,CACnB,OAAO,IAAI,CAAC,gBAAgB,AAChC,EACA,IAAI,OAAQ,CACR,MAAO,UAAe,IAAI,CAAC,IAAI,EAAI,IAAI,CAAC,IAAI,CAAG,MACnD,CACJ,EACA,OAAO,CACX,CACA,cAAc,CAAO,CAAE,CACnB,IAAI,EACJ,GAAI,CACA,IAAM,EAAc,IAAI,CAAC,YAAY,CAAC,GACtC,GAAI,UAAe,GACf,MAAO,CAAE,MAAO,CAAY,EAEhC,IAAM,EAAa,IAAI,CAAC,WAAW,CAAC,GACpC,GAAI,EACA,MAAO,CAAE,KAAM,EAAY,MAAO,CAAY,EAG9C,MAAO,CACH,MAAO,EACP,MAAO,IAAI,CAAC,kBAAkB,CAAC,EAAS,EAC5C,CAER,CACA,MAAO,EAAK,CACRoB,QAAQ,KAAK,CAAC,CAAC,gDAAgD,EAAE,EAAQ,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAE,GACjG,IAAM,EAAe,MAAC,GAAK,EAAI,OAAO,AAAD,EAA+B,EAAKjB,OAAO,GAChF,MAAO,CACH,MAAOL,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,GAAU,CAAE,QAAS,CAAC,gDAAgD,EAAE,EAAQ,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAa,CAAC,AAAC,EAClK,CACJ,CACJ,CACA,YAAY,CAAe,CAAE,CACzB,GAAI,EAAgB,IAAI,CACpB,OAAO,EAAgB,IAAI,CAE/B,IAAM,EAAM,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,EAAgB,WAAW,EAC3E,GAAK,EAGL,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAI,WAAW,CAAC,KAAK,CAAE,EAAgB,IAAI,CACrF,CACA,mBAAmB,CAAO,CAAEI,CAAiB,CAAE,CAG3C,IAAM,EAAW,UAAa,EAAQ,SAAS,EAAE,SAAS,AACtD,IAAY,EAAS,KAAK,CAAG,iBAA4B,EACzD,AAA6F,EAAS,GAAQ,CAElH,IAAM,EAAgB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GACvD,OAAOJ,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,GAAU,CAAE,QAAS,CAAC,+BAA+B,EAAE,EAAc,QAAQ,EAAE,EAAQ,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAEI,kBAAAA,CAAkB,EAC5K,CACJ,CC1JO,MAAM,GACT,QAAQ,CAAI,CAAE,CACV,GAJG,AAAqB,UAArB,OAAO,AAIE,EAJG,IAAI,CAKf,OAAO,EAAK,IAAI,AAGxB,CACA,YAAY,CAAI,CAAE,CACd,MAAO,UAAoB,EAAK,QAAQ,CAAE,OAC9C,CACJ,CbVI,CADO,GA8BR,IAAa,IAAW,CAAC,IA7Bf,QAAQ,CAAG,aAAc,CAClC,GAAS,OAAO,CAAG,YAAa,CAChC,GAAS,OAAO,CAAG,YAAa,CAChC,GAAS,QAAQ,CAAG,aAAc,CAClC,GAAS,WAAW,CAAG,gBAAiB,CAIxC,GAAS,MAAM,CAHf,SAAgB,CAAC,CAAE,CAAC,EAChB,MAAO,AAAC,SAA6B,KAAK,EAAI,EAAE,QAAQ,EAAC,IAAQ,SAA6B,KAAK,EAAI,EAAE,QAAQ,EAAC,CACtH,EAiBA,GAAS,QAAQ,CAfjB,SAAkB,CAAI,CAAEA,CAAE,EACtB,IAAM,EAAW,AAAgB,UAAhB,OAAO,EAAoB,EAAO,EAAK,IAAI,CACtD,EAAS,AAAc,UAAd,OAAOA,EAAkBA,EAAKA,EAAG,IAAI,CAC9C,EAAY,EAAS,KAAK,CAAC,KAAK,MAAM,CAACD,GAAKA,EAAE,MAAM,CAAG,GACvD,EAAU,EAAO,KAAK,CAAC,KAAK,MAAM,CAACA,GAAKA,EAAE,MAAM,CAAG,GACrD,EAAI,EACR,KAAO,EAAI,EAAU,MAAM,EACnB,CAAS,CAAC,EAAE,GAAK,CAAO,CAAC,EAAE,CADN,KAO7B,MAAO,AAFU,MAAM,MAAM,CAAC,EAAU,MAAM,CAAG,GAClC,EAAQ,KAAK,CAAC,GAAG,IAAI,CAAC,IAEzC,EAKA,GAAS,SAAS,CAHlB,SAAmB,CAAG,EAClB,OAAO,UAAS,CAAC,EAAI,QAAQ,IAAI,QAAQ,EAC7C,CczBG,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,YAAY,CAAG,EAAS,UAAU,CAAC,YAAY,CACpD,IAAI,CAAC,KAAK,CAAG,EAAS,MAAM,CAAC,SAAS,CAAC,YAAY,CACnD,IAAI,CAAC,WAAW,CAAG,EAAS,SAAS,CAAC,cAAc,AACxD,CACA,gBAAgB,CAAa,CAAE,CAC3B,GAAI,EAAe,CACf,IAAM,EAAa,UAAe,GAC5B,EAAW,EAAc,OAAO,CACtC,GAAI,GAAc,EAAU,CACxB,IAAM,EAAY,CAAQ,CAAC,EAAW,OAAO,CAAC,CAC9C,GAAI,UAAY,GACZ,OAAO,EAAU,GAAG,CAEnB,GAAIF,MAAM,OAAO,CAAC,GACnB,KAAK,IAAM,KAAO,EACd,GAAI,UAAY,IAAQ,EAAI,QAAQ,EAC7B,EAAI,QAAQ,CAAC,MAAM,EAAI,EAAc,MAAM,EAC3C,EAAI,QAAQ,CAAC,GAAG,EAAI,EAAc,GAAG,CACxC,OAAO,EAAI,GAAG,AAEtB,CAER,CACA,GAAI,EAAU,CACV,IAAM,EAAW,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAE/C,GAAI,GAAa,KAAa,GAAiB,UAAY,EAAe,EAAQ,EAC9E,OAAO,CAEf,CACJ,CAEJ,CACA,oBAAoB,CAAa,CAAE,CAC/B,IAAM,EAAU,IAAI,CAAC,eAAe,CAAC,GACrC,GAAI,QAAyC,KAAK,EAAI,EAAQ,QAAQ,CAAE,CACpE,IAAM,EAAa,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GACjD,OAAO,QAA+C,EAAa,EAAQ,QAAQ,AACvF,CAEJ,CACA,eAAe,CAAU,CAAE,CAAO,CAAE,CAChC,IAAMF,EAAO,EAAE,CACf,GAAI,EAAQ,kBAAkB,CAAE,CAC5B,IAAM,EAAM,IAAI,CAAC,kBAAkB,CAAC,EAChC,IACAA,EAAK,IAAI,CAAC,EAElB,CACA,IAAI,EAAkB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAY,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAK/F,OAJI,EAAQ,WAAW,EACnB,GAAkB,EAAgB,MAAM,CAAC,GAAO,SAAe,CAAC,EAAI,SAAS,CAAE,EAAQ,WAAW,EAAC,EAEvGA,EAAK,IAAI,IAAI,GACN,UAAOA,EAClB,CACA,mBAAmB,CAAU,CAAE,CAC3B,IAAM,EAAW,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAC/C,GAAI,EAAU,CACV,IAAM,EAAM,UAAY,GAClB,EAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAC7C,MAAO,CACH,UAAW,EAAI,GAAG,CAClB,WAAY,EACZ,UAAW,EAAI,GAAG,CAClB,WAAY,EACZ,QAAS,UAAkB,GAC3B,MAAO,EACX,CACJ,CAEJ,CACJ,CC5EO,MAAM,GACT,YAAYI,CAAQ,CAAE,CAElB,GADA,IAAI,CAAC,GAAG,CAAG,IAAIyB,IACXzB,EACA,IAAK,GAAM,CAAC,EAAK,EAAM,GAAIA,EACvB,IAAI,CAAC,GAAG,CAAC,EAAK,EAG1B,CAIA,IAAI,MAAO,CACP,OAAO,SAAa,CAAC,UAAO,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,GAAK,EAAE,MAAM,EACpE,CAIA,OAAQ,CACJ,IAAI,CAAC,GAAG,CAAC,KAAK,EAClB,CASA,OAAO,CAAG,CAAE,CAAK,CAAE,CACf,GAAI,AAAU,SAAV,EACA,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAEtB,EACD,IAAM,EAAS,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAC5B,GAAI,EAAQ,CACR,IAAM,EAAQ,EAAO,OAAO,CAAC,GAC7B,GAAI,GAAS,EAOT,OANI,AAAkB,IAAlB,EAAO,MAAM,CACb,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAGhB,EAAO,MAAM,CAAC,EAAO,GAElB,EAEf,CACA,MAAO,EACX,CACJ,CAQA,IAAI,CAAG,CAAE,CACL,IAAI,EACJ,OAAO,MAAC,GAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,EAA+B,EAAK,EAAE,AACvE,CAMA,IAAI,CAAG,CAAE,CAAK,CAAE,CACZ,GAAI,AAAU,SAAV,EACA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAEnB,EACD,IAAM,EAAS,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAC5B,EAAI,GACO,EAAO,OAAO,CAAC,IAAU,CAGxC,CACJ,CAIA,IAAI,CAAG,CAAE,CAAK,CAAE,CAOZ,OANI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GACb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAK,IAAI,CAAC,GAGvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAK,CAAC,EAAM,EAEtB,IAAI,AACf,CAIA,OAAO,CAAG,CAAE,CAAM,CAAE,CAOhB,OANI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GACb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAK,IAAI,IAAI,GAG1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAKF,MAAM,IAAI,CAAC,IAE1B,IAAI,AACf,CAIA,QAAQ,CAAU,CAAE,CAChB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAO,IAAQ,EAAM,OAAO,CAAC,GAAS,EAAW,EAAO,EAAK,IAAI,GACvF,CAIA,CAAC8B,OAAO,QAAQ,CAAC,EAAG,CAChB,OAAO,IAAI,CAAC,OAAO,GAAG,QAAQ,EAClC,CAIA,SAAU,CACN,MAAO,UAAO,IAAI,CAAC,GAAG,CAAC,OAAO,IACzB,OAAO,CAAC,CAAC,CAAC,EAAK,EAAM,GAAK,EAAM,GAAG,CAAC,GAAS,CAAC,EAAK,EAAM,EAClE,CAIA,MAAO,CACH,MAAO,UAAO,IAAI,CAAC,GAAG,CAAC,IAAI,GAC/B,CAIA,QAAS,CACL,MAAO,UAAO,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,IAAI,EACzC,CAIA,qBAAsB,CAClB,MAAO,UAAO,IAAI,CAAC,GAAG,CAAC,OAAO,GAClC,CACJ,CACO,MAAM,GACT,IAAI,MAAO,CACP,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,AACxB,CACA,YAAY5B,CAAQ,CAAE,CAGlB,GAFA,IAAI,CAAC,GAAG,CAAG,IAAIyB,IACf,IAAI,CAAC,OAAO,CAAG,IAAIA,IACfzB,EACA,IAAK,GAAM,CAAC,EAAK,EAAM,GAAIA,EACvB,IAAI,CAAC,GAAG,CAAC,EAAK,EAG1B,CACA,OAAQ,CACJ,IAAI,CAAC,GAAG,CAAC,KAAK,GACd,IAAI,CAAC,OAAO,CAAC,KAAK,EACtB,CACA,IAAI,CAAG,CAAE,CAAK,CAAE,CAGZ,OAFA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAK,GAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAO,GACjB,IAAI,AACf,CACA,IAAI,CAAG,CAAE,CACL,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EACxB,CACA,OAAO,CAAK,CAAE,CACV,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAC5B,CACA,OAAO,CAAG,CAAE,CACR,IAAM,EAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAC3B,AAAc,SAAV,IACA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GACb,GAGf,CACJ,CCtKO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,YAAY,CAAG,EAAS,UAAU,CAAC,YAAY,CACpD,IAAI,CAAC,YAAY,CAAG,EAAS,SAAS,CAAC,0BAA0B,AACrE,CACA,MAAM,eAAe,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACjE,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAS,WAAW,CAAC,KAAK,CAAE,EAAU,OAAW,EACvF,CAaA,MAAM,sBAAsB,CAAU,CAAE,CAAQ,CAAE,EAAW,KAAc,CAAE,EAAc,yBAAsB,CAAE,CAC/G,IAAM,EAAU,EAAE,CAElB,IAAK,IAAM,KADX,IAAI,CAAC,UAAU,CAAC,EAAY,EAAS,GAClB,EAAS,IACxB,MAAM,GAAkB,GACxB,IAAI,CAAC,UAAU,CAAC,EAAM,EAAS,GAEnC,OAAO,CACX,CAKA,WAAW,CAAI,CAAE,CAAO,CAAE,CAAQ,CAAE,CAChC,IAAMqB,EAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EACnCA,CAAAA,GACA,EAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAMA,EAAM,GAErE,CACA,MAAM,mBAAmB,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACrE,IAAMzB,EAAW,EAAS,WAAW,CAAC,KAAK,CACrC,EAAS,IAAI,GAEnB,IAAK,IAAM,IAAQ,UAAkBA,GACjC,MAAM,GAAkB,GACxB,IAAI,CAAC,WAAW,CAAC,EAAM,EAAU,GAErC,OAAO,CACX,CAMA,YAAY,CAAI,CAAE,CAAQ,CAAE,CAAM,CAAE,CAChC,IAAM,EAAY,EAAK,UAAU,CACjC,GAAI,EAAW,CACX,IAAM,EAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EACnC,IACA,EAAO,GAAG,CAAC,EAAW,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAM,EAAM,GAE9E,CACJ,CACJ,CCxEO,MAAM,GACT,YAAYI,CAAQ,CAAE,CAAU,CAAE,CAAO,CAAE,CACvC,IAAI,CACJ,KAAI,CAAC,QAAQ,CAAGA,EAChB,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,eAAe,CAAG,MAAC,GAAK,QAAyC,KAAK,EAAI,EAAQ,eAAe,AAAD,GAA+B,CACxI,CACA,gBAAiB,QACb,AAAI,IAAI,CAAC,UAAU,CACR,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,IAGnD,IAAI,CAAC,QAAQ,AAE5B,CACA,WAAW,CAAI,CAAE,CACb,IAAM,EAAQ,IAAI,CAAC,eAAe,CAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAK,EAAE,IAAI,CAAC,WAAW,KAAO,EAAK,WAAW,IACjE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAK,EAAE,IAAI,GAAK,UACzC,AAAI,IAGA,IAAI,CAAC,UAAU,CACR,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAG1C,CACJ,CACO,MAAM,GACT,YAAYA,CAAQ,CAAE,CAAU,CAAE,CAAO,CAAE,CACvC,IAAI,EAGJ,IAAK,IAAM,KAFX,IAAI,CAAC,QAAQ,CAAG,IAAIyB,IACpB,IAAI,CAAC,eAAe,CAAG,MAAC,GAAK,QAAyC,KAAK,EAAI,EAAQ,eAAe,AAAD,GAA+B,EAC9GzB,GAAU,CAC5B,IAAM,EAAO,IAAI,CAAC,eAAe,CAC3B,EAAQ,IAAI,CAAC,WAAW,GACxB,EAAQ,IAAI,CAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAM,EAC5B,CACA,IAAI,CAAC,UAAU,CAAG,CACtB,CACA,WAAW,CAAI,CAAE,CACb,IAAM,EAAY,IAAI,CAAC,eAAe,CAAG,EAAK,WAAW,GAAK,EACxD,EAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAChC,AAAI,IAGA,IAAI,CAAC,UAAU,CACR,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAG1C,CACA,gBAAiB,CACb,IAAIA,EAAgB,UAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,IAI/C,OAHI,IAAI,CAAC,UAAU,EACfA,CAAAA,EAAgBA,EAAc,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,GAAE,EAElEA,CACX,CACJ,CCjEO,MAAM,GACT,aAAc,CACV,IAAI,CAAC,SAAS,CAAG,EAAE,CACnB,IAAI,CAAC,UAAU,CAAG,EACtB,CACA,UAAU,CAAU,CAAE,CAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACxB,CACA,SAAU,CACN,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,KAAK,GACV,IAAI,CAAC,UAAU,CAAG,GAClB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAc,EAAW,OAAO,GAC3D,CACA,iBAAkB,CACd,GAAI,IAAI,CAAC,UAAU,CACf,MAAM,AAAID,MAAM,uCAExB,CACJ,CACO,MAAM,WAAoB,GAC7B,aAAc,CACV,KAAK,IAAImB,WACT,IAAI,CAAC,KAAK,CAAG,IAAIO,GACrB,CACA,IAAI,CAAG,CAAE,CAEL,OADA,IAAI,CAAC,eAAe,GACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAC1B,CACA,IAAI,CAAG,CAAE,CAAK,CAAE,CACZ,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAK,EACxB,CACA,IAAI,CAAG,CAAE,CAAQ,CAAE,CAEf,GADA,IAAI,CAAC,eAAe,GAChB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GACf,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAErB,GAAI,EAAU,CACf,IAAM,EAAQ,IAEd,OADA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAK,GACb,CACX,CAIJ,CACA,OAAO,CAAG,CAAE,CAER,OADA,IAAI,CAAC,eAAe,GACb,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAC7B,CACA,OAAQ,CACJ,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,KAAK,CAAC,KAAK,EACpB,CACJ,CACO,MAAM,WAAqB,GAC9B,YAAY,CAAS,CAAE,CACnB,KAAK,GACL,IAAI,CAAC,KAAK,CAAG,IAAIA,IACjB,IAAI,CAAC,SAAS,CAAG,QAA6C,EAAa,GAAS,CACxF,CACA,IAAI,CAAU,CAAE,CAAG,CAAE,CAEjB,OADA,IAAI,CAAC,eAAe,GACb,IAAI,CAAC,eAAe,CAAC,GAAY,GAAG,CAAC,EAChD,CACA,IAAI,CAAU,CAAE,CAAG,CAAE,CAAK,CAAE,CACxB,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,eAAe,CAAC,GAAY,GAAG,CAAC,EAAK,EAC9C,CACA,IAAI,CAAU,CAAE,CAAG,CAAE,CAAQ,CAAE,CAC3B,IAAI,CAAC,eAAe,GACpB,IAAM,EAAe,IAAI,CAAC,eAAe,CAAC,GAC1C,GAAI,EAAa,GAAG,CAAC,GACjB,OAAO,EAAa,GAAG,CAAC,GAEvB,GAAI,EAAU,CACf,IAAM,EAAQ,IAEd,OADA,EAAa,GAAG,CAAC,EAAK,GACf,CACX,CAIJ,CACA,OAAO,CAAU,CAAE,CAAG,CAAE,CAEpB,OADA,IAAI,CAAC,eAAe,GACb,IAAI,CAAC,eAAe,CAAC,GAAY,MAAM,CAAC,EACnD,CACA,MAAM,CAAU,CAAE,CAEd,GADA,IAAI,CAAC,eAAe,GAChB,EAAY,CACZ,IAAM,EAAS,IAAI,CAAC,SAAS,CAAC,GAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EACtB,MAEI,IAAI,CAAC,KAAK,CAAC,KAAK,EAExB,CACA,gBAAgB,CAAU,CAAE,CACxB,IAAM,EAAS,IAAI,CAAC,SAAS,CAAC,GAC1B,EAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAKnC,OAJK,IACD,EAAgB,IAAIA,IACpB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAQ,IAEpB,CACX,CACJ,CA4CO,MAAM,WAAuB,GAShC,YAAY,CAAc,CAAE,CAAK,CAAE,CAC/B,KAAK,GACD,GACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAe,SAAS,CAAC,eAAe,CAAC,YAAY,CAAC,EAAO,KAC7E,IAAI,CAAC,KAAK,EACd,IACA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAe,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAU,KACzE,EAAQ,MAAM,CAAG,GACjB,IAAI,CAAC,KAAK,EAElB,KAGA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAe,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,KAClE,IAAI,CAAC,KAAK,EACd,GAER,CACJ,CC/KO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,UAAU,CAAG,EAAS,MAAM,CAAC,aAAa,CAC/C,IAAI,CAAC,YAAY,CAAG,EAAS,UAAU,CAAC,YAAY,CACpD,IAAI,CAAC,YAAY,CAAG,EAAS,SAAS,CAAC,0BAA0B,CACjE,IAAI,CAAC,YAAY,CAAG,EAAS,MAAM,CAAC,SAAS,CAAC,YAAY,CAC1D,IAAI,CAAC,gBAAgB,CAAG,IAAI,GAAe,EAAS,MAAM,CAC9D,CACA,SAAS,CAAO,CAAE,CACd,IAAM,EAAS,EAAE,CACX7B,EAAgB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GACjD,EAAc,UAAY,EAAQ,SAAS,EAAE,iBAAiB,CACpE,GAAI,EAAa,CACb,IAAI,EAAc,EAAQ,SAAS,CACnC,EAAG,CACC,IAAM,EAAkB,EAAY,GAAG,CAAC,EACpC,GAAgB,MAAM,CAAG,GACzB,EAAO,IAAI,CAAC,UAAO,GAAiB,MAAM,CAAC,GAAQ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAK,IAAI,CAAEA,KAE5F,EAAc,EAAY,UAAU,AACxC,OAAS,EAAa,AAC1B,CACA,IAAI,EAAS,IAAI,CAAC,cAAc,CAACA,EAAe,GAChD,IAAK,IAAI,EAAI,EAAO,MAAM,CAAG,EAAG,GAAK,EAAG,IACpC,EAAS,IAAI,CAAC,WAAW,CAAC,CAAM,CAAC,EAAE,CAAE,GAEzC,OAAO,CACX,CAIA,YAAYI,CAAQ,CAAE,CAAU,CAAE,CAAO,CAAE,CACvC,OAAO,IAAI,GAAY,UAAOA,GAAW,EAAY,EACzD,CAKA,oBAAoBA,CAAQ,CAAE,CAAU,CAAE,CAAO,CAAE,CAQ/C,OAAO,IAAI,GAPD,UAAOA,GAAU,GAAG,CAACA,IAC3B,IAAM,EAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAACA,GACvC,GAAI,EACA,OAAO,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAACA,EAAG,EAGtD,GAAG,WAAW,GACY,EAAY,EAC1C,CAIA,eAAe,CAAa,CAAE,CAAQ,CAAE,CACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAe,IAAM,IAAI,GAAS,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IACrG,CACJ,CCnDA,SAAS,GAAwB,CAAG,EAChC,MAAO,AAAe,UAAf,OAAO,GAAoB,CAAC,CAAC,GAAQ,UAAU,GAAO,WAAY,CAAE,CAC/E,CACO,MAAM,GACT,YAAY,CAAQ,CAAE,CAElB,IAAI,CAAC,gBAAgB,CAAG,IAAIU,IAAI,CAAC,aAAc,qBAAsB,kBAAmB,YAAa,WAAW,EAChH,IAAI,CAAC,gBAAgB,CAAG,EAAS,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAClE,IAAI,CAAC,cAAc,CAAG,EAAS,SAAS,CAAC,cAAc,CACvD,IAAI,CAAC,YAAY,CAAG,EAAS,UAAU,CAAC,YAAY,CACpD,IAAI,CAAC,eAAe,CAAG,EAAS,aAAa,CAAC,eAAe,AACjE,CACA,UAAU,CAAI,CAAE,CAAO,CAAE,CACrB,IAAM,EAAmB,QAAyC,EAAU,CAAC,EACvE,EAAmB,QAAyC,KAAK,EAAI,EAAQ,QAAQ,CACrF,EAAkB,CAAC,EAAK,IAAU,IAAI,CAAC,QAAQ,CAAC,EAAK,EAAO,GAC5D,EAAW,EAAmB,CAAC,EAAK,IAAU,EAAiB,EAAK,EAAO,GAAmB,EACpG,GAAI,CAEA,OADA,IAAI,CAAC,eAAe,CAAG,UAAY,GAC5BgB,KAAK,SAAS,CAAC,EAAM,EAAU,QAAyC,KAAK,EAAI,EAAQ,KAAK,CACzG,QACQ,CACJ,IAAI,CAAC,eAAe,CAAG,MAC3B,CACJ,CACA,YAAY,CAAO,CAAE,CAAO,CAAE,CAE1B,IAAM9B,EAAO8B,KAAK,KAAK,CAAC,GAExB,OADA,IAAI,CAAC,QAAQ,CAAC9B,EAAMA,EAFO,QAAyC,EAAU,CAAC,GAGxEA,CACX,CACA,SAAS,CAAG,CAAE,CAAK,CAAE,CAAEA,QAAAA,CAAO,CAAE,YAAU,CAAE,aAAW,CAAE,UAAQ,CAAE,cAAY,CAAE,CAAE,CAC/E,IAAI,EAAI,EAAI,EAAI,EAChB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAGzB,GAAI,UAAY,GAAQ,CACzB,IAAM,EAAW,EAAM,GAAG,CACpB,EAAWA,EAAU,EAAM,QAAQ,CAAG,OAC5C,IAAI,EAkBA,MAAO,CACH,OAAQ,MAAC,GAAK,MAAC,GAAK,EAAM,KAAK,AAAD,EAA+B,KAAK,EAAI,EAAG,OAAO,AAAD,EAA+B,EAAK,8BACnH,UACJ,CArBU,EACV,IAAM,EAAiB,UAAY,GAC/B,EAAY,EACZ,KAAI,CAAC,eAAe,EAAI,IAAI,CAAC,eAAe,GAAK,IAE7C,EADA,EACY,EAAa,EAAe,GAAG,CAAE,GAGjC,EAAe,GAAG,CAAC,QAAQ,IAG/C,IAAM,EAAa,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GACtD,MAAO,CACH,KAAM,CAAC,EAAE,EAAU,CAAC,EAAE,EAAW,CAAC,CAClC,UACJ,CACJ,CAOJ,CACK,IAAI,UAAU,GAuBf,OAAO,CAvBgB,EACvB,IAAI,EAYJ,GAXI,IACA,EAAU,IAAI,CAAC,iCAAiC,CAACC,OAAO,MAAM,CAAC,CAAC,EAAG,IAC/D,AAAC,EAAC,GAAO,EAAM,SAAS,AAAD,GAAO,SAAyC,KAAK,EAAI,EAAQ,WAAW,AAAD,GAElG,GAAQ,WAAW,CAAC,WAAW,CAAG,MAAC,GAAK,IAAI,CAAC,eAAe,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,CAAC,QAAQ,EAAC,GAGvH,GAAc,CAAC,IACf,SAAoD,GAAUA,OAAO,MAAM,CAAC,CAAC,EAAG,EAAK,EACrF,EAAQ,WAAW,CAAG,MAAC,GAAK,EAAM,QAAQ,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,EAExF,EAAU,CACV,SAAoD,GAAUA,OAAO,MAAM,CAAC,CAAC,EAAG,EAAK,EACrF,IAAM,EAAU,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAC5C,IACA,GAAQ,QAAQ,CAAG,EAAQ,OAAO,CAAC,MAAO,GAAE,CAEpD,CACA,OAAO,QAAyC,EAAU,CAC9D,EAIJ,CACA,kCAAkC,CAAI,CAAE,CACpC,IAAM,EAAwB,GAAY,EACtC,OAAQ,EAAQ,MAAM,CACtB,IAAK,EAAQ,GAAG,CAChB,OAAQ,EAAQ,MAAM,CACtB,MAAO,EAAQ,KAAK,AACxB,GACA,GAAI,EAAK,QAAQ,CAAE,CAEf,IAAM,EAAc,AADD,GAAK,WAAW,CAAG,EAAsB,EAAK,QAAQ,GAC1C,WAAW,CAAG,CAAC,EAO9C,OANAA,OAAO,IAAI,CAAC,GAAM,MAAM,CAAC,GAAO,CAAC,EAAI,UAAU,CAAC,MAAM,OAAO,CAAC,IAC1D,IAAM,EAAsB,UAAqB,EAAK,QAAQ,CAAE,GAAK,GAAG,CAAC,EACrE,AAA+B,KAA/B,EAAoB,MAAM,EAC1B,EAAW,CAAC,EAAI,CAAG,CAAkB,CAE7C,GACO,CACX,CAEJ,CACA,SAAS,CAAI,CAAE,CAAI,CAAE,CAAO,CAAE,CAAS,CAAE,CAAiB,CAAE,CAAc,CAAE,CACxE,IAAK,GAAM,CAAC,EAAcO,EAAK,GAAIP,OAAO,OAAO,CAAC,GAC9C,GAAIC,MAAM,OAAO,CAACM,GACd,IAAK,IAAI,EAAQ,EAAG,EAAQA,EAAK,MAAM,CAAE,IAAS,CAC9C,IAAM,EAAUA,CAAI,CAAC,EAAM,CACvB,GAAwB,GACxBA,CAAI,CAAC,EAAM,CAAG,IAAI,CAAC,eAAe,CAAC,EAAM,EAAc,EAAM,EAAS,GAEjE,UAAU,IACf,IAAI,CAAC,QAAQ,CAAC,EAAS,EAAM,EAAS,EAAM,EAAc,EAElE,MAEK,GAAwBA,GAC7B,CAAI,CAAC,EAAa,CAAG,IAAI,CAAC,eAAe,CAAC,EAAM,EAAc,EAAMA,EAAM,GAErE,UAAUA,IACf,IAAI,CAAC,QAAQ,CAACA,EAAM,EAAM,EAAS,EAAM,EAIjD,CADgB,EACR,UAAU,CAAG,EACrB,AAFgB,EAER,kBAAkB,CAAG,EAC7B,AAHgB,EAGR,eAAe,CAAG,CAC9B,CACA,gBAAgB,CAAS,CAAE,CAAQ,CAAER,CAAI,CAAE,CAAS,CAAE,CAAO,CAAE,CAC3D,IAAI,EAAU,EAAU,QAAQ,CAC5B,EAAQ,EAAU,MAAM,CAC5B,GAAI,EAAU,IAAI,CAAE,CAChB,IAAM,EAAM,IAAI,CAAC,UAAU,CAACA,EAAM,EAAU,IAAI,CAAE,EAAQ,YAAY,EACtE,GAAI,UAAU,GAIV,OAHI,AAAC,GACD,GAAU,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAG,EAEpC,CACH,SAAU,QAAyC,EAAU,GAC7D,KACJ,EAGA,EAAQ,CAEhB,CACA,GAAI,EAAO,CACP,IAAMA,EAAM,CACR,SAAU,QAAyC,EAAU,EACjE,EAOA,OANAA,EAAI,KAAK,CAAG,CACR,YACA,WACA,QAAS,EACT,UAAWA,CACf,EACOA,CACX,CAIJ,CACA,WAAW,CAAI,CAAE,CAAG,CAAE,CAAY,CAAE,CAChC,GAAI,CACA,IAAM,EAAgB,EAAI,OAAO,CAAC,KAClC,GAAI,AAAkB,IAAlB,EAAqB,CACrB,IAAM,EAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAM,EAAI,SAAS,CAAC,IAChE,GAAI,CAAC,EACD,MAAO,2BAA6B,EAExC,OAAO,CACX,CACA,GAAI,EAAgB,EAAG,CACnB,IAAM,EAAc,EAAe,EAAa,GAAO,UAAS,CAAC,GAC3D,EAAW,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,GACnD,GAAI,CAAC,EACD,MAAO,oCAAsC,EAEjD,OAAO,EAAS,WAAW,CAAC,KAAK,AACrC,CACA,IAAM,EAAc,EAAe,EAAa,EAAI,SAAS,CAAC,EAAG,IAAkB,UAAS,CAAC,EAAI,SAAS,CAAC,EAAG,IACxG,EAAW,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,GACnD,GAAI,CAAC,EACD,MAAO,oCAAsC,EAEjD,GAAI,IAAkB,EAAI,MAAM,CAAG,EAC/B,OAAO,EAAS,WAAW,CAAC,KAAK,CAErC,IAAM,EAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAS,WAAW,CAAC,KAAK,CAAE,EAAI,SAAS,CAAC,EAAgB,IACtG,GAAI,CAAC,EACD,MAAO,0BAA4B,EAEvC,OAAO,CACX,CACA,MAAOI,EAAK,CACR,OAAOE,OAAOF,EAClB,CACJ,CACJ,CC/MO,MAAM,GAIT,IAAI,KAAM,CACN,OAAO,IAAI,CAAC,gBAAgB,AAChC,CACA,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,aAAa,CAAG,IAAIyB,IACzB,IAAI,CAAC,gBAAgB,CAAG,IAAIA,IAC5B,IAAI,CAAC,aAAa,CAAG,QAA2C,KAAK,EAAI,EAAS,SAAS,CAAC,aAAa,AAC7G,CACA,SAAS,CAAQ,CAAE,CACf,IAAM,EAAO,EAAS,gBAAgB,CACtC,IAAK,IAAM,KAAO,EAAK,cAAc,CAC7B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAC1B,AAAgG,EAAK,UAAe,CAExH,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAK,GAEnC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAK,UAAU,CAAE,GACpC,AAA4B,IAA5B,IAAI,CAAC,aAAa,CAAC,IAAI,CACvB,IAAI,CAAC,SAAS,CAAG,EAGjB,IAAI,CAAC,SAAS,CAAG,MAEzB,CACA,YAAY,CAAG,CAAE,CACb,IAAI,EAAI,EACR,GAAI,AAAmB,SAAnB,IAAI,CAAC,SAAS,CACd,OAAO,IAAI,CAAC,SAAS,CAEzB,GAAI,AAA4B,IAA5B,IAAI,CAAC,aAAa,CAAC,IAAI,CACvB,MAAM,AAAI1B,MAAM,yFAEpB,IAAM,EAAa,MAAC,GAAK,MAAC,GAAK,IAAI,CAAC,aAAa,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,CAAC,EAAG,EAA+B,KAAK,EAAI,EAAG,UAAU,CACvJ,GAAI,AAAe,SAAf,EAA0B,CAC1B,IAAM,EAAW,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GACxC,GAAI,EACA,OAAO,CAEf,CACA,IAAM,EAAM,UAAgB,CAAC,GACvB,EAAW,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAC3C,GAAI,CAAC,EACD,GAAI,EACA,MAAM,AAAIA,MAAM,CAAC,6DAA6D,EAAE,EAAI,gBAAgB,EAAE,EAAW,EAAE,CAAC,OAGpH,MAAM,AAAIA,MAAM,CAAC,6DAA6D,EAAE,EAAI,EAAE,CAAC,EAG/F,OAAO,CACX,CACA,YAAY,CAAG,CAAE,CACb,GAAI,CAEA,OADA,IAAI,CAAC,WAAW,CAAC,GACV,EACX,CACA,MAAO,EAAI,CACP,MAAO,EACX,CACJ,CACA,IAAI,KAAM,CACN,OAAOD,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAC/C,CACJ,CnB3DI,AACD,KAAuB,IAAqB,CAAC,EAAC,EAD1B,GAAG,CAAG,CAAC,OAAQ,OAAQ,WAAW,AAKlD,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,OAAO,CAAG,IAAI,GACnB,IAAI,CAAC,aAAa,CAAG,EAAE,CACvB,IAAI,CAAC,YAAY,CAAG,EAAE,CACtB,IAAI,CAAC,UAAU,CAAG,EAAS,MAAM,CAAC,aAAa,AACnD,CASA,SAAS,CAAY,CAAEG,EAAU,IAAI,CAAE,EAAW,MAAM,CAAE,CACtD,GAAI,AAAa,aAAb,EACA,MAAM,AAAIF,MAAM,6EAEpB,IAAK,GAAM,CAAC,EAAM,EAAG,GAAIF,OAAO,OAAO,CAAC,GAEpC,GAAIC,MAAM,OAAO,CADC,GAEd,IAAK,IAAM,KAFG,EAEiB,CAC3B,IAAM,EAAQ,CACV,MAAO,IAAI,CAAC,uBAAuB,CAAC,EAAOG,GAC3C,UACJ,EACA,IAAI,CAAC,QAAQ,CAAC,EAAM,EACxB,MAEC,GAAI,AAAqB,YAArB,OAVS,EAUwB,CACtC,IAAMD,EAAQ,CACV,MAAO,IAAI,CAAC,uBAAuB,CAZzB,EAYqCC,GAC/C,UACJ,EACA,IAAI,CAAC,QAAQ,CAAC,EAAMD,EACxB,KAEI,SAlBc,EAqB1B,CACA,wBAAwB,CAAK,CAAEC,CAAO,CAAE,CACpC,OAAO,MAAO,EAAM,EAAQ,KACxB,MAAM,IAAI,CAAC,eAAe,CAAC,IAAM,EAAM,IAAI,CAACA,EAAS,EAAM,EAAQ,GAAc,sCAAuC,EAAQ,EACpI,CACJ,CACA,MAAM,gBAAgB,CAAa,CAAE,CAAc,CAAE,CAAM,CAAEoB,CAAI,CAAE,CAC/D,GAAI,CACA,MAAM,GACV,CACA,MAAO,EAAK,CACR,GSzBD,ATyB0B,ISzBlB,GT0BH,MAAM,EAEVF,QAAQ,KAAK,CAAC,CAAC,EAAE,EAAe,CAAC,CAAC,CAAE,GAChC,aAAepB,OAAS,EAAI,KAAK,EACjCoB,QAAQ,KAAK,CAAC,EAAI,KAAK,EAE3B,IAAM,EAAiB,aAAepB,MAAQ,EAAI,OAAO,CAAGG,OAAO,GACnE,EAAO,QAAS,CAAC,EAAE,EAAe,EAAE,EAAE,EAAe,CAAC,CAAE,CAAEmB,KAAAA,CAAK,EACnE,CACJ,CACA,SAAS,CAAI,CAAE,CAAK,CAAE,CAClB,GAAI,AAAS,YAAT,EAAoB,YACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAW,GAGhC,IAAK,IAAM,KAAW,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GACjD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAS,EAElC,CACA,UAAU,CAAI,CAAE,CAAU,CAAE,CACxB,IAAI,EAAS,UAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAChC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAI7B,OAHI,GACA,GAAS,EAAO,MAAM,CAACrB,GAAS,EAAW,QAAQ,CAACA,EAAM,QAAQ,EAAC,EAEhE,EAAO,GAAG,CAACA,GAASA,EAAM,KAAK,CAC1C,CAiBA,uBAAuB,CAAW,CAAEC,EAAU,IAAI,CAAE,CAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAa,oDAAqDA,GAC5H,CAiBA,sBAAsB,CAAU,CAAEA,EAAU,IAAI,CAAE,CAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAY,uDAAwDA,GAC7H,CACA,yBAAyB,CAAK,CAAE,CAAc,CAAE,CAAO,CAAE,CACrD,OAAO,MAAO,EAAU,EAAQ,EAAY,KACxC,MAAM,IAAI,CAAC,eAAe,CAAC,IAAM,EAAM,IAAI,CAAC,EAAS,EAAU,EAAQ,EAAY,GAAc,EAAgB,EAAQ,EAC7H,CACJ,CACA,IAAI,cAAe,CACf,OAAO,IAAI,CAAC,aAAa,AAC7B,CACA,IAAI,aAAc,CACd,OAAO,IAAI,CAAC,YAAY,AAC5B,CACJ,CD5IO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,kBAAkB,CAAG,EAAS,UAAU,CAAC,kBAAkB,CAChE,IAAI,CAAC,QAAQ,CAAG,EAAS,gBAAgB,AAC7C,CACA,MAAM,iBAAiB,CAAQ,CAAE,EAAU,CAAC,CAAC,CAAE,EAAc,yBAAsB,CAAE,CACjF,IAAM,EAAc,EAAS,WAAW,CAClC,EAAc,EAAE,CAEtB,IADA,MAAM,GAAkB,GACpB,CAAC,EAAQ,UAAU,EAAI,EAAQ,UAAU,CAAC,QAAQ,CAAC,eACnD,IAAI,CAAC,mBAAmB,CAAC,EAAa,EAAa,GAC/C,EAAQ,qBAAqB,EAAI,EAAY,IAAI,CAAC,IAAO,IAAI,EAAI,MAAO,AAAC,OAAC,GAAK,EAAE,IAAI,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,AAAD,IAAO,GAAkB,WAAW,AAAE,KAG5K,IAAI,CAAC,oBAAoB,CAAC,EAAa,EAAa,GAChD,EAAQ,sBAAsB,EAAI,EAAY,IAAI,CAAC,IAAO,IAAI,EAAI,MAAO,AAAC,OAAC,GAAK,EAAE,IAAI,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,AAAD,IAAO,GAAkB,YAAY,AAAE,MAG9K,IAAI,CAAC,oBAAoB,CAAC,EAAU,EAAa,GAC7C,EAAQ,sBAAsB,EAAI,EAAY,IAAI,CAAC,IAAO,IAAI,EAAI,MAAO,AAAC,OAAC,GAAK,EAAE,IAAI,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,AAAD,IAAO,GAAkB,YAAY,AAAE,KAP1K,OAAO,EAYf,GAAI,CACA,EAAY,IAAI,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,EAAY,KAAK,CAAE,EAAS,GAC3E,CACA,MAAOD,EAAK,CACR,GUUD,AVV0BA,IUUlB,GVTH,MAAMA,EAEVmB,QAAQ,KAAK,CAAC,uCAAwCnB,EAC1D,CAEA,OADA,MAAM,GAAkB,GACjB,CACX,CACA,oBAAoB,CAAW,CAAE,CAAW,CAAE,CAAQ,CAAE,CACpD,IAAI,EAAI,EAAI,EAEZ,IAAK,IAAM,IADc,IAAI,EAAY,WAAW,IAAK,MAAC,GAAK,MAAC,GAAK,EAAY,WAAW,AAAD,EAA+B,KAAK,EAAI,EAAG,WAAW,AAAD,EAA+B,EAAK,EAAE,CAAC,CACvI,CAC5C,IAAM,EAAW,MAAC,GAAK,EAAgB,QAAQ,AAAD,EAA+B,EAAK,QAC5E,EAAa,CACf,SAAU,GAAqB,GAC/B,MAAO,CACH,MAAO,CACH,KAAM,EAAgB,IAAI,CAAG,EAC7B,UAAW,EAAgB,MAAM,CAAG,CACxC,EACA,IAAK,CACD,KAAM,EAAgB,IAAI,CAAG,EAC7B,UAAW,EAAgB,MAAM,CAAG,EAAgB,MAAM,CAAG,CACjE,CACJ,EACA,QAAS,EAAgB,OAAO,CAChC,KAAM,AA2Jf,SAA0B,CAAQ,EACrC,OAAQ,GACJ,IAAK,QACD,MClND,CAAE,KDkNqB,GAAkB,WAAW,AClN7C,CDmNV,KAAK,UACD,MCpND,CAAE,KDoNqB,GAAkB,aAAa,ACpN/C,CDqNV,KAAK,OACD,MCtND,CAAE,KDsNqB,GAAkB,UAAU,ACtN5C,CDuNV,KAAK,OACD,MCxND,CAAE,KDwNqB,GAAkB,UAAU,ACxN5C,CDyNV,SACI,MAAM,AAAID,MAAM,gCAAkC,EAC1D,CACJ,EAxKuC,GACvB,OAAQ,IAAI,CAAC,SAAS,EAC1B,EACA,EAAY,IAAI,CAAC,EACrB,CACJ,CACA,qBAAqB,CAAW,CAAE,CAAW,CAAE,CAAQ,CAAE,CACrD,IAAK,IAAM,KAAe,EAAY,YAAY,CAAE,CAChD,IAAI,EAIJ,GAAIwB,MAAM,EAAY,KAAK,CAAC,WAAW,EAGnC,IAAI,kBAAmB,EAAa,CAChC,IAAMtB,EAAQ,EAAY,aAAa,CACvC,GAAKsB,MAAMtB,EAAM,WAAW,EAIvB,CAGD,IAAM,EAAW,CAAE,KAAM,EAAG,UAAW,CAAE,EACzC,EAAQ,CAAE,MAAO,EAAU,IAAK,CAAS,CAC7C,KAT+B,CAC3B,IAAM,EAAW,CAAE,KAAMA,EAAM,OAAO,CAAG,EAAG,UAAWA,EAAM,SAAS,AAAC,EACvE,EAAQ,CAAE,MAAO,EAAU,IAAK,CAAS,CAC7C,CAOJ,OAGA,EAAQ,UAAa,EAAY,KAAK,EAE1C,GAAI,EAAO,CACP,IAAM,EAAa,CACf,SAAU,GAAqB,SAC/B,QACA,QAAS,EAAY,OAAO,CAC5B,KCzFT,CAAE,KDyF4B,GAAkB,YAAY,ACzFrD,ED0FE,OAAQ,IAAI,CAAC,SAAS,EAC1B,EACA,EAAY,IAAI,CAAC,EACrB,CACJ,CACJ,CACA,qBAAqB,CAAQ,CAAE,CAAW,CAAE,CAAQ,CAAE,CAClD,IAAK,IAAML,KAAa,EAAS,UAAU,CAAE,CACzC,IAAM,EAAeA,EAAU,KAAK,CACpC,GAAI,EAAc,CACd,IAAM,EAAO,CACT,KAAM,EAAa,SAAS,CAC5B,SAAU,EAAa,QAAQ,CAC/B,MAAO,EAAa,KAAK,CACzB,KAAM,CACF,KAAM,GAAkB,YAAY,CACpC,cAAe,EAAa,SAAS,CAAC,KAAK,CAC3C,SAAU,EAAa,QAAQ,CAC/B,QAAS,EAAa,SAAS,CAAC,QAAQ,AAC5C,CACJ,EACA,EAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAS,EAAa,OAAO,CAAE,GACtE,CACJ,CACJ,CACA,MAAM,YAAY,CAAQ,CAAE,CAAO,CAAE,EAAc,yBAAsB,CAAE,CACvE,IAAM,EAAkB,EAAE,CACpB,EAAW,CAAC,EAAU,EAAS,KACjC,EAAgB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAU,EAAS,GAC9D,EAIA,OAHA,MAAM,IAAI,CAAC,iBAAiB,CAAC,EAAU,EAAS,EAAU,GAC1D,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAU,EAAS,EAAU,GACzD,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAU,EAAS,EAAU,GAClD,CACX,CACA,MAAM,kBAAkB,CAAQ,CAAE,CAAO,CAAE,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACvF,IAAI,EAEJ,IAAK,IAAM,KADU,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAErD,MAAM,GAAkB,GACxB,MAAM,EAAY,EAAU,EAAU,MAAC,GAAK,EAAQ,UAAU,AAAD,EAA+B,EAAK,EAAE,CAAE,EAE7G,CACA,MAAM,iBAAiB,CAAQ,CAAE,CAAO,CAAE,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACtF,MAAMkC,QAAQ,GAAG,CAAC,UAAU,GAAU,GAAG,CAAC,MAAO,IAG7C,IAAK,IAAM,KAFX,MAAM,GAAkB,GACT,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAK,KAAK,CAAE,EAAQ,UAAU,GAE3E,MAAM,EAAM,EAAM,EAAU,EAEpC,GACJ,CACA,MAAM,iBAAiB,CAAQ,CAAE,CAAO,CAAE,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACtF,IAAI,EAEJ,IAAK,IAAM,KADS,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAEnD,MAAM,GAAkB,GACxB,MAAM,EAAW,EAAU,EAAU,MAAC,GAAK,EAAQ,UAAU,AAAD,EAA+B,EAAK,EAAE,CAAE,EAE5G,CACA,aAAa,CAAQ,CAAE,CAAO,CAAE,CAAI,CAAE,KAiBP,MAI3B,EApBA,MAAO,CACH,UACA,MAeR,AAAI,CAD2B,EAdG,GAezB,KAAK,CACH,EAAK,KAAK,EAGjB,AAAyB,UAAzB,OAAO,EAAK,QAAQ,CACpB,EAAU,UAAoB,EAAK,IAAI,CAAC,QAAQ,CAAE,EAAK,QAAQ,CAAE,EAAK,KAAK,EAEtE,AAAwB,UAAxB,OAAO,EAAK,OAAO,EACxB,GAAU,UAAmB,EAAK,IAAI,CAAC,QAAQ,CAAE,EAAK,OAAO,CAAE,EAAK,KAAK,GAE7E,SAAoD,GAAU,EAAK,IAAI,CAAC,QAAQ,AAAD,EAC1E,GAME,EAAQ,KAAK,CALT,CACH,MAAO,CAAE,KAAM,EAAG,UAAW,CAAE,EAC/B,IAAK,CAAE,KAAM,EAAG,UAAW,CAAE,CACjC,EA7BI,SAAU,GAAqB,GAC/B,KAAM,EAAK,IAAI,CACf,gBAAiB,EAAK,eAAe,CACrC,KAAM,EAAK,IAAI,CACf,mBAAoB,EAAK,kBAAkB,CAC3C,KAAM,EAAK,IAAI,CACf,OAAQ,IAAI,CAAC,SAAS,EAC1B,CACJ,CACA,WAAY,CACR,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,AACnC,CACJ,CA2BO,SAAS,GAAqB,CAAQ,EACzC,OAAQ,GACJ,IAAK,QACD,OAAO,CACX,KAAK,UACD,OAAO,CACX,KAAK,OACD,OAAO,CACX,KAAK,OACD,OAAO,CACX,SACI,MAAM,AAAI/B,MAAM,gCAAkC,EAC1D,CACJ,CAiBI,CADO,GAOR,IAAsB,IAAoB,CAAC,IANxB,WAAW,CAAG,eAChC,GAAkB,aAAa,CAAG,iBAClC,GAAkB,UAAU,CAAG,cAC/B,GAAkB,UAAU,CAAG,cAC/B,GAAkB,YAAY,CAAG,gBACjC,GAAkB,YAAY,CAAG,eqBtO9B,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,cAAc,CAAG,EAAS,SAAS,CAAC,cAAc,CACvD,IAAI,CAAC,YAAY,CAAG,EAAS,UAAU,CAAC,YAAY,AACxD,CACA,kBAAkB,CAAI,CAAE,CAAI,CAAE,CAAQ,CAAE,CACpC,IAMIsB,EANE,EAAM,QAA2C,EAAW,UAAY,EAC9E,UAA2C,GAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAI,EAChF,IAAM,EAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GAChD,GAAI,CAAC,EACD,MAAM,AAAItB,MAAM,CAAC,aAAa,EAAE,EAAK,aAAa,CAAC,EAIvD,MAAO,CACH,OACA,OACA,IAAI,aAAc,CAJY,IAAI,EAK9B,OALyCsB,MAAAA,EAAyDA,EAAmBA,EAAkB,UAAkB,MAAC,GAAK,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAI,EAA+B,EAAK,EAAK,QAAQ,CAMtP,EACA,iBAAkB,UAAkB,EAAK,QAAQ,EACjD,KAAM,EAAK,KAAK,CAChB,YAAa,EAAI,GAAG,CACpB,MACJ,CACJ,CACJ,CACO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,WAAW,CAAG,EAAS,SAAS,CAAC,cAAc,AACxD,CACA,MAAM,mBAAmB,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACrE,IAAM,EAAQ,EAAE,CACV,EAAW,EAAS,WAAW,CAAC,KAAK,CAC3C,IAAK,IAAM,IAAW,UAAU,GAC5B,MAAM,GAAkB,GACxB,UAAiB,GAAS,MAAM,CAAC,GAAW,CAAC,UAAe,IAAU,OAAO,CAAC,IAE1E,IAAM,EAAc,IAAI,CAAC,iBAAiB,CAAC,EACvC,IACA,EAAM,IAAI,CAAC,EAEnB,GAEJ,OAAO,CACX,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAMpB,EAAkB,EAAQ,SAAS,CAAC,gBAAgB,CACpDL,EAAa,EAAQ,SAAS,CAAC,QAAQ,CAC7C,GAAI,CAACK,GAAmB,CAACL,EACrB,OAEJ,IAAM,EAAS,UAAY,EAAQ,SAAS,EAAE,GAAG,CACjD,MAAO,CACH,UAAW,EACX,WAAY,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAQ,SAAS,EAC7D,UAAWK,EAAgB,WAAW,CACtC,WAAYA,EAAgB,IAAI,CAChC,QAAS,UAAkBL,GAC3B,MAAO,SAAe,CAACK,EAAgB,WAAW,CAAE,EACxD,CACJ,CACJ,CCpEO,MAAM,GACT,aAAc,CACV,IAAI,CAAC,gBAAgB,CAAG,IACxB,IAAI,CAAC,cAAc,CAAG,GAC1B,CACA,eAAe,CAAI,CAAE,CACjB,GAAI,EAAK,UAAU,CAAE,CACjB,IAAM,EAAgB,IAAI,CAAC,cAAc,CAAC,EAAK,UAAU,EACnD,EAAa,IAAI,CAAC,cAAc,CAAC,GAEvC,OADiB,EAAgB,IAAI,CAAC,gBAAgB,CAAG,CAE7D,CACA,MAAO,EACX,CACA,eAAe,CAAE,oBAAkB,CAAE,iBAAe,CAAE,CAAE,CACpD,GAAI,CAAC,EACD,MAAM,AAAIF,MAAM,oDAEpB,AAAI,AAAoB,SAApB,EACO,EAAqB,IAAI,CAAC,cAAc,CAAG,EAE/C,CACX,CACA,WAAW,CAAI,CAAE,CAAI,CAAE,CAEnB,OAAO,AADU,EAAK,KAAK,CAAC,IAAI,CAAC,gBAAgB,EACjC,MAAM,CAAC,CAAC,EAAe,KACnC,GAAI,CAAC,GAAiB,AAAwB,IAAxB,EAAa,MAAM,CACrC,OAAO,EAEX,IAAM,EAAgB,EAAa,OAAO,CAAC,IAAI,CAAC,cAAc,EAC9D,GAAI,EAAgB,EAAG,CACnB,IAAM,EAAW,EAAa,SAAS,CAAC,EAAG,GACrC,EAAaQ,SAAS,EAAa,SAAS,CAAC,EAAgB,IAC7DF,EAAQ,CAAa,CAAC,EAAS,CACrC,OAAOA,MAAAA,EAAqC,KAAK,EAAIA,CAAK,CAAC,EAAW,AAC1E,CACA,OAAO,CAAa,CAAC,EAAa,AACtC,EAAG,EACP,CACJ,C,eClCO,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,MAAM,CAAG,IAAI,GAClB,IAAI,CAAC,QAAQ,CAAG,CAAC,EACjB,IAAI,CAAC,eAAe,CAAG,GACvB,IAAI,CAAC,mCAAmC,CAAG,IAAI,UAAO,CACtD,IAAI,CAAC,eAAe,CAAG,EAAS,eAAe,AACnD,CACA,IAAI,OAAQ,CACR,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,AAC9B,CACA,WAAW,CAAM,CAAE,CACf,IAAI,EAAI,CACR,KAAI,CAAC,eAAe,CAAG,MAAC,GAAK,MAAC,GAAK,EAAO,YAAY,CAAC,SAAS,AAAD,EAA+B,KAAK,EAAI,EAAG,aAAa,AAAD,GAA+B,CACzJ,CACA,MAAM,YAAY,CAAM,CAAE,CACtB,GAAI,IAAI,CAAC,eAAe,CAAE,CACtB,GAAI,EAAO,QAAQ,CAAE,CAGjB,IAAM,EAAY,IAAI,CAAC,eAAe,CAAC,GAAG,CAC1C,EAAO,QAAQ,CAAC,CAEZ,QAAS,EAAU,GAAG,CAAC,GAAQ,IAAI,CAAC,aAAa,CAAC,EAAK,gBAAgB,CAAC,UAAU,EACtF,EACJ,CACA,GAAI,EAAO,kBAAkB,CAAE,CAG3B,IAAM,EAAiB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,GAAS,EAEzD,QAAS,IAAI,CAAC,aAAa,CAAC,EAAK,gBAAgB,CAAC,UAAU,CAChE,IAEM,EAAU,MAAM,EAAO,kBAAkB,CAAC,GAChD,EAAe,OAAO,CAAC,CAAC,EAAM,KAC1B,IAAI,CAAC,0BAA0B,CAAC,EAAK,OAAO,CAAE,CAAO,CAAC,EAAI,CAC9D,EACJ,CACJ,CACA,IAAI,CAAC,MAAM,CAAC,OAAO,EACvB,CAOA,oBAAoB,CAAM,CAAE,CACnB,EAAO,QAAQ,EAGpBR,OAAO,IAAI,CAAC,EAAO,QAAQ,EAAE,OAAO,CAAC,IACjC,IAAM,EAAgB,EAAO,QAAQ,CAAC,EAAQ,CAC9C,IAAI,CAAC,0BAA0B,CAAC,EAAS,GACzC,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,CAAE,UAAS,eAAc,EAC3E,EACJ,CACA,2BAA2B,CAAO,CAAE,CAAa,CAAE,CAC/C,IAAI,CAAC,QAAQ,CAAC,EAAQ,CAAG,CAC7B,CAOA,MAAM,iBAAiB,CAAQ,CAAE,CAAa,CAAE,CAC5C,MAAM,IAAI,CAAC,KAAK,CAChB,IAAM,EAAc,IAAI,CAAC,aAAa,CAAC,GACvC,GAAI,IAAI,CAAC,QAAQ,CAAC,EAAY,CAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAY,CAAC,EAAc,AAExD,CACA,cAAc,CAAU,CAAE,CACtB,MAAO,CAAC,EAAE,EAAW,CAAC,AAC1B,CACA,IAAI,8BAA+B,CAC/B,OAAO,IAAI,CAAC,mCAAmC,CAAC,KAAK,AACzD,CACJ,CrB9EI,AACD,KAAe,IAAa,CAAC,EAAC,EADlB,MAAM,CALjB,SAAgB,CAAQ,EACpB,MAAO,CACH,QAAS,SAAY,MAAM,GAC/B,CACJ,CsBCG,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,kBAAkB,CAAG,CAEtB,WAAY,CACR,WAAY,CAAC,WAAY,OAAO,AACpC,CACJ,EACA,IAAI,CAAC,eAAe,CAAG,EAAE,CACzB,IAAI,CAAC,mBAAmB,CAAG,IAAI,GAC/B,IAAI,CAAC,sBAAsB,CAAG,IAAI,GAClC,IAAI,CAAC,UAAU,CAAG,IAAI4B,IACtB,IAAI,CAAC,oBAAoB,CAAG,IAAIA,IAChC,IAAI,CAAC,YAAY,CAAG,UAAqB,CACzC,IAAI,CAAC,gBAAgB,CAAG,EAAS,SAAS,CAAC,gBAAgB,CAC3D,IAAI,CAAC,sBAAsB,CAAG,EAAS,SAAS,CAAC,sBAAsB,CACvE,IAAI,CAAC,aAAa,CAAG,EAAS,SAAS,CAAC,aAAa,CACrD,IAAI,CAAC,YAAY,CAAG,EAAS,SAAS,CAAC,YAAY,CACnD,IAAI,CAAC,eAAe,CAAG,EAAS,eAAe,AACnD,CACA,MAAM,MAAM,CAAS,CAAE,EAAU,CAAC,CAAC,CAAE,EAAc,yBAAsB,CAAE,CACvE,IAAI,EAAI,EACR,IAAK,IAAM,KAAY,EAAW,CAC9B,IAAM,EAAM,EAAS,GAAG,CAAC,QAAQ,GACjC,GAAI,EAAS,KAAK,GAAK,YAAuB,CAC1C,IAAI,AAA8B,WAA9B,OAAO,EAAQ,UAAU,EAAkB,EAAQ,UAAU,CAE7D,EAAS,KAAK,CAAG,oBAA+B,CAChD,EAAS,WAAW,CAAG,OACvB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAEtB,GAAI,AAA8B,UAA9B,OAAO,EAAQ,UAAU,CAAe,CAC7C,IAAM,EAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GACjC,EAAqB,MAAC,GAAK,QAA+C,KAAK,EAAI,EAAW,MAAM,AAAD,EAA+B,KAAK,EAAI,EAAG,gBAAgB,CACpK,GAAI,EAAoB,CAIpB,IAAM,EAAa,AADG,OAAC,GAAK,EAAQ,UAAU,CAAC,UAAU,AAAD,EAA+B,EAAK,MAAsB,AAAtB,EAC3D,MAAM,CAAC,GAAK,CAAC,EAAmB,QAAQ,CAAC,GACtE,GAAW,MAAM,CAAG,IACpB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAK,CACrB,UAAW,GACX,QAAS,CACL,WAAY5B,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAG,EAAQ,UAAU,EAAG,CAAE,YAAW,EAClF,EACA,OAAQ,EAAW,MAAM,AAC7B,GACA,EAAS,KAAK,CAAG,oBAA+B,CAExD,CACJ,OAIA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAE/B,CACA,IAAI,CAAC,YAAY,CAAG,UAAqB,CACzC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAU,GAAG,CAACG,GAAKA,EAAE,GAAG,EAAG,EAAE,EACnD,MAAM,IAAI,CAAC,cAAc,CAAC,EAAW,EAAS,EAClD,CACA,MAAM,OAAO,CAAO,CAAE,CAAO,CAAE,EAAc,yBAAsB,CAAE,CAGjE,IAAK,IAAM,KAFX,IAAI,CAAC,YAAY,CAAG,UAAqB,CAEhB,GACrB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GACrC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAW,QAAQ,IAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAG7B,IAAK,IAAM,KAAc,EAAS,CAE9B,GAAI,CADgB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,GAC3C,CAId,IAAM,EAAc,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAE,MAAO,SAAU,EAAG,EAChF,GAAY,KAAK,CAAG,UAAqB,CACzC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EACtC,CACA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAW,QAAQ,GAC9C,CAEA,IAAM,EAAiB,UAAO,GAAS,MAAM,CAAC,GAAS,GAAG,CAAC,GAAO,EAAI,QAAQ,IAAI,KAAK,GACvF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CACpB,MAAM,CAAC,GAAO,CAAC,EAAe,GAAG,CAAC,EAAI,GAAG,CAAC,QAAQ,KAAO,IAAI,CAAC,YAAY,CAAC,EAAK,IAChF,OAAO,CAAC,IAET,AADe,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAI,GAAG,EAAE,UAAU,CAAC,MAAM,CACnE,MAAM,CAAC,GACd,EAAI,KAAK,CAAGe,KAAK,GAAG,CAAC,EAAI,KAAK,CAAE,iBAA4B,EAC5D,EAAI,WAAW,CAAG,MACtB,GAEA,MAAM,IAAI,CAAC,UAAU,CAAC,EAAS,GAE/B,MAAM,GAAkB,GAExB,IAAM,EAAmB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAChE,MAAM,CAAC,IACR,IAAI,EAEJ,OAAO,EAAI,KAAK,CAAG,SAAoB,EAEhC,CAAE,OAAC,GAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAI,GAAG,CAAC,QAAQ,GAAE,EAA+B,KAAK,EAAI,EAAG,SAAS,AAAD,CAC5G,GACK,OAAO,GACZ,OAAM,IAAI,CAAC,cAAc,CAAC,EAAkB,IAAI,CAAC,kBAAkB,CAAE,EACzE,CACA,MAAM,WAAW,CAAO,CAAE,CAAO,CAAE,CAC/B,MAAMe,QAAQ,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAY,EAAS,EAAS,IAC7E,CAQA,cAAc,CAAS,CAAE,CACrB,IAAI,EAAO,EACPlC,EAAQ,EAAU,MAAM,CAAG,EAC/B,KAAO,EAAOA,GAAO,CACjB,KAAO,EAAO,EAAU,MAAM,EAAI,IAAI,CAAC,eAAe,CAAC,CAAS,CAAC,EAAK,GAClE,IAEJ,KAAOA,GAAS,GAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAS,CAACA,EAAM,GACvDA,GAEA,GAAOA,GACP,EAAC,CAAS,CAAC,EAAK,CAAE,CAAS,CAACA,EAAM,CAAC,CAAG,CAAC,CAAS,CAACA,EAAM,CAAE,CAAS,CAAC,EAAK,CAAC,AAAD,CAEhF,CACA,OAAO,CACX,CACA,gBAAgB,CAAG,CAAE,CACjB,IAAI,EACJ,MAAO,EAAQ,OAAC,GAAK,IAAI,CAAC,aAAa,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,CAAC,EAAI,GAAG,EAChG,CAIA,aAAa,CAAQ,CAAE,CAAW,CAAE,OAEhC,EAAI,EAAS,UAAU,CAAC,IAAI,CAAC,GAAO,AAAc,SAAd,EAAI,KAAK,GAItC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAU,EAClD,CACA,SAAS,CAAQ,CAAE,CAEf,OADA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GACnB,SAAiB,CAAC,KACrB,IAAM,EAAQ,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EACvC,IAAS,GACT,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAO,EAE3C,EACJ,CAUA,MAAM,eAAe,CAAS,CAAE,CAAO,CAAE,CAAW,CAAE,CAClD,IAAI,CAAC,YAAY,CAAC,EAAW,GAE7B,MAAM,IAAI,CAAC,aAAa,CAAC,EAAW,SAAoB,CAAE,EAAa,GAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,EAAK,IAEtH,MAAM,IAAI,CAAC,aAAa,CAAC,EAAW,iBAA4B,CAAE,EAAa,GAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAK,IAE3H,MAAM,IAAI,CAAC,aAAa,CAAC,EAAW,iBAA4B,CAAE,EAAa,MAAO,IAClF,IAAM,EAAmB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAI,GAAG,EAAE,UAAU,CAAC,gBAAgB,AAC9F,GAAI,iBAAiB,CAAG,MAAM,EAAiB,kBAAkB,CAAC,EAAK,EAC3E,GAEA,MAAM,IAAI,CAAC,aAAa,CAAC,EAAW,SAAoB,CAAE,EAAa,GAE5D,AADQ,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAI,GAAG,EAAE,UAAU,CAAC,MAAM,CAC5D,IAAI,CAAC,EAAK,IAG5B,MAAM,IAAI,CAAC,aAAa,CAAC,EAAW,oBAA+B,CAAE,EAAa,GAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAK,IAEjI,IAAM,EAAgB,EAAU,MAAM,CAAC,GAAO,IAAI,CAAC,cAAc,CAAC,IAGlE,IAAK,IAAM,KAFX,MAAM,IAAI,CAAC,aAAa,CAAC,EAAe,YAAuB,CAAE,EAAa,GAAO,IAAI,CAAC,QAAQ,CAAC,EAAK,IAEtF,GAAW,CACzB,IAAM,EAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAI,GAAG,CAAC,QAAQ,GAC9C,IACA,GAAM,SAAS,CAAG,EAAG,CAE7B,CACJ,CAOA,aAAa,CAAS,CAAE,CAAO,CAAE,CAC7B,IAAK,IAAM,KAAO,EAAW,CACzB,IAAM,EAAM,EAAI,GAAG,CAAC,QAAQ,GACtB,EAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAI9B,GAAC,GAAS,EAAM,SAAS,AAAD,GACxB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAK,CACrB,UAAW,GACX,UACA,OAAQ,QAAqC,KAAK,EAAI,EAAM,MAAM,AACtE,EAER,CACJ,CAWA,MAAM,cAAc,CAAS,CAAEK,CAAW,CAAE,CAAW,CAAE,CAAQ,CAAE,CAE/D,IAAK,IAAM,KADM,EAAU,MAAM,CAAC,GAAO,EAAI,KAAK,CAAGA,GAEjD,MAAM,GAAkB,GACxB,MAAM,EAAS,GACf,EAAS,KAAK,CAAGA,EACjB,MAAM,IAAI,CAAC,mBAAmB,CAAC,EAAUA,EAAa,GAK1D,IAAM,EAAkB,EAAU,MAAM,CAAC,GAAO,EAAI,KAAK,GAAKA,EAC9D,OAAM,IAAI,CAAC,gBAAgB,CAAC,EAAiBA,EAAa,GAC1D,IAAI,CAAC,YAAY,CAAGA,CACxB,CACA,aAAa,CAAW,CAAE,CAAQ,CAAE,CAEhC,OADA,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAa,GACnC,SAAiB,CAAC,KACrB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAa,EACjD,EACJ,CACA,gBAAgB,CAAW,CAAE,CAAQ,CAAE,CAEnC,OADA,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,EAAa,GACtC,SAAiB,CAAC,KACrB,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,EAAa,EACpD,EACJ,CACA,UAAU,CAAK,CAAE,CAAU,CAAE,CAAW,CAAE,CACtC,IAAI,EAQJ,GAPI,GAAc,SAAU,EACxB,EAAM,EAGN,EAAc,EAElB,SAAgE,GAAc,yBAAsB,AAAtB,EAC1E,EAAK,CACL,IAAM,EAAW,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,GACnD,GAAI,GAAY,EAAS,KAAK,CAAG,EAC7B,OAAO6B,QAAQ,OAAO,CAAC,EAE/B,QACA,AAAI,IAAI,CAAC,YAAY,EAAI,EACdA,QAAQ,OAAO,CAAC,QAElB,EAAY,uBAAuB,CACjCA,QAAQ,MAAM,CAAC,IAEnB,IAAIA,QAAQ,CAAC,EAAS,KACzB,IAAM,EAAkB,IAAI,CAAC,YAAY,CAAC,EAAO,KAG7C,GAFA,EAAgB,OAAO,GACvB,EAAiB,OAAO,GACpB,EAAK,CACL,IAAM,EAAW,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,GACnD,EAAQ,QAA2C,KAAK,EAAI,EAAS,GAAG,CAC5E,MAEI,EAAQ,OAEhB,GACM,EAAmB,EAAY,uBAAuB,CAAC,KACzD,EAAgB,OAAO,GACvB,EAAiB,OAAO,GACxB,EAAO,GACX,EACJ,EACJ,CACA,MAAM,oBAAoB,CAAQ,CAAE,CAAK,CAAE,CAAW,CAAE,CAGpD,IAAK,IAAM,KADW,AADJ,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,GAClB,KAAK,GAEjC,GAAI,CACA,MAAM,EAAS,EAAU,EAC7B,CACA,MAAO9B,EAAK,CAGR,Gd5QL,Ac4Q+BA,Id5QvB,Gc6QC,MAAMA,CAEd,CAER,CACA,MAAM,iBAAiB,CAAS,CAAE,CAAK,CAAE,CAAW,CAAE,CAClD,GAAI,AAAqB,IAArB,EAAU,MAAM,CAMpB,IAAK,IAAM,KADW,AADJ,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,GACf,KAAK,GAEjC,MAAM,GAAkB,GACxB,MAAM,EAAS,EAAW,EAElC,CAMA,eAAe,CAAQ,CAAE,CACrB,MAAO,EAAQ,IAAI,CAAC,eAAe,CAAC,GAAU,UAAU,AAC5D,CAKA,MAAM,SAAS,CAAQ,CAAE,CAAW,CAAE,CAClC,IAAQ,EACR,IAAM,EAAY,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAS,GAAG,EAAE,UAAU,CAAC,iBAAiB,CACvF,EAAoB,IAAI,CAAC,eAAe,CAAC,GAAU,UAAU,CAC7D,EAAU,AAA6B,UAA7B,OAAO,EAAiC,EAAoB,OACtE,EAAc,MAAM,EAAU,gBAAgB,CAAC,EAAU,EAAS,EACpE,GAAS,WAAW,CACpB,EAAS,WAAW,CAAC,IAAI,IAAI,GAG7B,EAAS,WAAW,CAAG,EAG3B,IAAM,EAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAS,GAAG,CAAC,QAAQ,IACvD,GAAI,EAAO,CACP,MAAM,EAAM,MAAM,EAAoC,GAAM,MAAM,CAAG,CAAC,GACtE,IAAM,EAAgB,MAAC,GAAK,QAAyC,KAAK,EAAI,EAAQ,UAAU,AAAD,EAA+B,EAAK,MAAsB,AACrJ,GAAM,MAAM,CAAC,gBAAgB,CAC7B,EAAM,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAGtC,EAAM,MAAM,CAAC,gBAAgB,CAAG,IAAI,EAAc,AAE1D,CACJ,CACA,gBAAgB,CAAQ,CAAE,CACtB,IAAI,EAAI,EACR,OAAO,MAAC,GAAK,MAAC,GAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAS,GAAG,CAAC,QAAQ,GAAE,EAA+B,KAAK,EAAI,EAAG,OAAO,AAAD,EAA+B,EAAK,CAAC,CACxJ,CACJ,CC9WO,MAAM,GACT,YAAY,CAAQ,CAAE,CAKlB,IAAI,CAAC,WAAW,CAAG,IAAIyB,IAKvB,IAAI,CAAC,iBAAiB,CAAG,IAAI,GAM7B,IAAI,CAAC,cAAc,CAAG,IAAIA,IAC1B,IAAI,CAAC,SAAS,CAAG,EAAS,SAAS,CAAC,gBAAgB,CACpD,IAAI,CAAC,eAAe,CAAG,EAAS,eAAe,CAC/C,IAAI,CAAC,aAAa,CAAG,EAAS,aAAa,AAC/C,CACA,kBAAkB,CAAU,CAAE,CAAW,CAAE,CACvC,IAAM,EAAe,UAAY,GAAY,GAAG,CAC1C,EAAS,EAAE,CAQjB,OAPA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IACxB,EAAQ,OAAO,CAAC,IACR,SAAe,CAAC,EAAS,SAAS,CAAE,IAAiB,EAAS,UAAU,GAAK,GAC7E,EAAO,IAAI,CAAC,EAEpB,EACJ,GACO,UAAO,EAClB,CACA,YAAY,CAAQ,CAAE,CAAI,CAAE,CACxB,IAAI,EAAe,UAAO,IAAI,CAAC,WAAW,CAAC,IAAI,IAI/C,OAHI,GACA,GAAe,EAAa,MAAM,CAAC,GAAO,CAAC,GAAQ,EAAK,GAAG,CAAC,GAAI,EAE7D,EACF,GAAG,CAAC,GAAO,IAAI,CAAC,mBAAmB,CAAC,EAAK,IACzC,IAAI,EACb,CACA,oBAAoB,CAAG,CAAE,CAAQ,CAAE,CAC/B,IAAI,SACJ,AAAK,EAGgB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAK,EAAU,KAC3D,IAAI,EAEJ,MAAO,AADqB,OAAC,GAAK,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAG,EAA+B,EAAK,EAAE,AAAD,EACpE,MAAM,CAACzB,GAAK,IAAI,CAAC,aAAa,CAAC,SAAS,CAACA,EAAE,IAAI,CAAE,GAChF,GANW,MAAC,GAAK,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAG,EAA+B,EAAK,EAAE,AAQnF,CACA,OAAO,CAAG,CAAE,CACR,IAAM,EAAY,EAAI,QAAQ,GAC9B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GACxB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAC7B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAC/B,CACA,MAAM,cAAc,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CAChE,IAAM,EAAW,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAS,GAAG,EACxD,EAAU,MAAM,EAAS,UAAU,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAU,GAC9E,EAAM,EAAS,GAAG,CAAC,QAAQ,GACjC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAK,GAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EACjC,CACA,MAAM,iBAAiB,CAAQ,CAAE,EAAc,yBAAsB,CAAE,CACnE,IAAM,EAAW,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAS,GAAG,EACxD,EAAY,MAAM,EAAS,SAAS,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,EAAU,GACrG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAS,GAAG,CAAC,QAAQ,GAAI,EACrD,CACA,WAAW,CAAQ,CAAE,CAAW,CAAE,CAC9B,IAAMJ,EAAa,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAS,GAAG,CAAC,QAAQ,UAChE,CAAI,CAACA,GAGEA,EAAW,IAAI,CAAC,GAAO,CAAC,EAAI,KAAK,EAAI,EAAY,GAAG,CAAC,EAAI,SAAS,CAAC,QAAQ,IACtF,CACJ,CClFO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,mBAAmB,CAAG,CAAC,EAC5B,IAAI,CAAC,MAAM,CAAG,IAAI,GAClB,IAAI,CAAC,eAAe,CAAG,EAAS,eAAe,CAC/C,IAAI,CAAC,gBAAgB,CAAG,EAAS,SAAS,CAAC,gBAAgB,CAC3D,IAAI,CAAC,eAAe,CAAG,EAAS,SAAS,CAAC,eAAe,CACzD,IAAI,CAAC,kBAAkB,CAAG,EAAS,SAAS,CAAC,kBAAkB,CAC/D,IAAI,CAAC,KAAK,CAAG,EAAS,SAAS,CAAC,aAAa,AACjD,CACA,IAAI,OAAQ,CACR,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,AAC9B,CACA,IAAI,kBAAmB,CACnB,OAAO,IAAI,CAAC,OAAO,AACvB,CACA,WAAW,CAAM,CAAE,CACf,IAAI,CACJ,KAAI,CAAC,OAAO,CAAG,MAAC,GAAK,EAAO,gBAAgB,AAAD,EAA+B,EAAK,MACnF,CACA,YAAY,CAAO,CAAE,CAGjB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAW,IAAI,EAAI,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAC,GAAK,IAAI,CAAC,OAAO,AAAD,EAA+B,EAAK,EAAE,CAAE,EAAQ,EAChJ,CACA,MAAM,oBAAoB,CAAO,CAAE,EAAc,yBAAsB,CAAE,CACrE,IAAM,EAAY,MAAM,IAAI,CAAC,cAAc,CAAC,EAG5C,OAAM,GAAkB,GACxB,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAW,IAAI,CAAC,mBAAmB,CAAE,EAC1E,CAKA,MAAM,eAAe,CAAO,CAAE,CAC1B,IAAM,EAAiB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAACI,GAAKA,EAAE,gBAAgB,CAAC,cAAc,EACxF,EAAY,EAAE,CACd,EAAY,AAAC,IACf,EAAU,IAAI,CAAC,GACX,AAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAS,GAAG,GAC/C,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAE1C,EAQA,OAJA,MAAM,IAAI,CAAC,uBAAuB,CAAC,EAAS,GAC5C,MAAM8B,QAAQ,GAAG,CAAC,EAAQ,GAAG,CAAC,GAAM,CAAC,EAAI,IAAI,CAAC,aAAa,CAAC,GAAI,EAC3D,GAAG,CAAC,MAAO9B,GAAU,IAAI,CAAC,cAAc,IAAIA,EAAO,EAAgB,KACxE,IAAI,CAAC,MAAM,CAAC,OAAO,GACZ,CACX,CAMA,wBAAwB,CAAQ,CAAE,CAAU,CAAE,CAC1C,OAAO8B,QAAQ,OAAO,EAC1B,CAMA,cAAc,CAAe,CAAE,CAC3B,OAAO,UAAS,CAAC,EAAgB,GAAG,CACxC,CAKA,MAAM,eAAe,CAAe,CAAE,CAAU,CAAE,CAAc,CAAE,CAAS,CAAE,CACzE,IAAM,EAAU,MAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,EAC5D,OAAMA,QAAQ,GAAG,CAAC,EAAQ,GAAG,CAAC,MAAO,IAC7B,IAAI,CAAC,YAAY,CAAC,EAAiB,EAAO,KACtC,EAAM,WAAW,CACjB,MAAM,IAAI,CAAC,cAAc,CAAC,EAAiB,EAAM,GAAG,CAAE,EAAgB,GAEjE,EAAM,MAAM,EAEjB,EADiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAM,GAAG,GAItF,GACJ,CAIA,aAAa,CAAgB,CAAE,CAAK,CAAE,CAAc,CAAE,CAClD,IAAMT,EAAO,WAAiB,CAAC,EAAM,GAAG,EACxC,GAAIA,EAAK,UAAU,CAAC,KAChB,MAAO,GAEX,GAAI,EAAM,WAAW,CACjB,MAAOA,AAAS,iBAATA,GAA2BA,AAAS,QAATA,EAEjC,GAAI,EAAM,MAAM,CAAE,CACnB,IAAMrB,EAAU,UAAgB,CAAC,EAAM,GAAG,EAC1C,OAAO,EAAe,QAAQ,CAACA,EACnC,CACA,MAAO,EACX,CACJ,CC3GO,MAAM,GACT,iCAAiC,CAAQ,CAAE,CAAW,CAAE,CAAM,CAAE,CAAI,CAAE,CAAM,CAAE,CAC1E,OAAO,sCAA0D,CAAC,EAAU,EAAa,EAAQ,EAAM,EAC3G,CACA,iCAAiC,CAAK,CAAE,CACpC,OAAO,sCAA0D,CAAC,EACtE,CACJ,CACO,IAAM,GAA2B,CAAE,KAAM,MAAO,CAChD,OAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,oBAAoB,CAAG,EAAS,MAAM,CAAC,yBAAyB,CACrE,IAAI,CAAC,YAAY,CAAG,EAAS,MAAM,CAAC,YAAY,CAChD,IAAMC,EAAS,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAS,OAAO,CAAE,CAC3D,gBAAiB,EAAS,gBAAgB,CAAC,eAAe,AAC9D,EACA,KAAI,CAAC,UAAU,CAAG,IAAI,CAAC,qBAAqB,CAACA,GAC7C,IAAM,EAAc,GAAsBA,GAAUJ,OAAO,MAAM,CAACI,GAAUA,EACtE,EAAa,AAAmC,eAAnC,EAAS,gBAAgB,CAAC,IAAI,AACjD,KAAI,CAAC,eAAe,CAAG,IAAI,KAAe,CAAC,EAAa,CACpD,iBAAkB,OAClB,gBAAiB,EACjB,qBAAsB,IAAI,CAAC,oBAAoB,AACnD,EACJ,CACA,IAAI,YAAa,CACb,OAAO,IAAI,CAAC,UAAU,AAC1B,CACA,SAAS,CAAI,CAAE,EAAW,EAAwB,CAAE,CAChD,IAAI,EAAI,EAAI,EACZ,IAAM,EAAmB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GACvD,MAAO,CACH,OAAQ,EAAiB,MAAM,CAC/B,OAAQ,EAAiB,MAAM,CAC/B,OAAQ,MAAC,GAAK,EAAiB,MAAM,CAAC,MAAM,AAAD,EAA+B,EAAK,EAAE,CACjF,OAAQ,MAAC,GAAK,AAAC,GAAK,IAAI,CAAC,YAAY,AAAD,EAAG,iBAAiB,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,EAAI,EAC/G,CACJ,CACA,sBAAsB,CAAW,CAAE,CAC/B,GAAI,GAAsB,GACtB,OAAO,EACX,IAAMA,EAAS,GAA4B,GAAeJ,OAAO,MAAM,CAAC,EAAY,KAAK,EAAE,IAAI,GAAK,EAC9FD,EAAM,CAAC,EAEb,OADAK,EAAO,OAAO,CAAC,GAASL,CAAG,CAAC,EAAM,IAAI,CAAC,CAAG,GACnCA,CACX,CACJ,CAUO,SAAS,GAA4B,CAAe,EACvD,OAAO,GAAmB,UAAW,GAAmB,gBAAiB,CAC7E,CAIO,SAAS,GAAsB,CAAe,EACjD,MAAO,CAZAE,CAAAA,MAAM,OAAO,CAYK,IAZiB,CAA2B,IAA3B,AAYjB,EAZiC,MAAM,EAAU,SAAU,AAY3D,CAZ0E,CAAC,EAAE,AAAD,CAAC,GAYzD,CAAC,GAA4B,EAC9E,CCvBA,SAAS,GAAS,CAAI,EASlB,MADc,CANV,AAAgB,UAAhB,OAAO,EACG,EAGA,EAAK,IAAI,EAED,KAAK,CAAC,KAAc,CAE9C,CACA,IAAM,GAAW,kCACX,GAAiB,iDAqIjB,GAAqB,KACrB,GAAqB,OAC3B,SAAS,GAAe,CAAI,CAAE,CAAK,EAC/B,IAAM,EAAQ,EAAK,SAAS,CAAC,GAAO,KAAK,CAAC,WAC1C,AAAI,EACO,EAAQ,EAAM,KAAK,CAGnB,EAAK,MAAM,AAE1B,CAmDA,SAAS,GAAe,CAAO,EAC3B,IAAIG,EAAQ,EAAQ,MAAM,CAAC,EAAQ,KAAK,CAAC,CACnC,EAAaA,EACf,EAAYA,EACV,EAAQ,EAAE,CAChB,KAAOA,GAASA,AAAe,UAAfA,EAAM,IAAI,EAAgBA,AAAe,QAAfA,EAAM,IAAI,OAO9B,EANlB,EAAM,IAAI,CAQd,AAAI,AAAe,eAAf,AADU,CADQ,EANU,GAOV,MAAM,CAAC,EAAQ,KAAK,CAAC,CACjC,IAAI,CACH,GAAc,EAAS,IAGvB,GAAe,IAXtB,EAAYA,EACZA,EAAQ,EAAQ,MAAM,CAAC,EAAQ,KAAK,CAAC,CAEzC,OAAO,IAAI,GAAc,EAAO,SAAY,CAAC,EAAW,KAAK,CAAC,KAAK,CAAE,EAAU,KAAK,CAAC,GAAG,EAC5F,CAUA,SAAS,GAAc,CAAO,CAAE,CAAM,EAClC,IAAM,EAAW,EAAQ,MAAM,CAAC,EAAQ,KAAK,GAAG,CAC1CoB,EAAO,EAAS,OAAO,CAAC,SAAS,CAAC,GAClC,EAAY,EAAQ,MAAM,CAAC,EAAQ,KAAK,CAAC,CAC/C,GAAI,AAAC,SAA6C,KAAK,EAAI,EAAU,IAAI,AAAD,IAAO,OAC3E,GAAI,EAAQ,CACR,IAAM,EAAU,GAAe,GAC/B,OAAO,IAAI,GAAaA,EAAM,IAAI,GAAc,CAAC,EAAQ,CAAE,EAAQ,KAAK,EAAG,EAAQ,SAAY,CAAC,EAAS,KAAK,CAAC,KAAK,CAAE,EAAQ,KAAK,CAAC,GAAG,EAC3I,KACK,CACD,IAAM,EAAU,GAAe,GAC/B,OAAO,IAAI,GAAaA,EAAM,EAAS,EAAQ,SAAY,CAAC,EAAS,KAAK,CAAC,KAAK,CAAE,EAAQ,KAAK,CAAC,GAAG,EACvG,CAEC,CACD,IAAM,EAAQ,EAAS,KAAK,CAC5B,OAAO,IAAI,GAAaA,EAAM,IAAI,GAAc,EAAE,CAAE,GAAQ,EAAQ,EACxE,CACJ,CACA,SAAS,GAAe,CAAO,EAC3B,IAAMpB,EAAQ,EAAQ,MAAM,CAAC,EAAQ,KAAK,GAAG,CAC7C,OAAO,IAAI,GAAcA,EAAM,OAAO,CAAEA,EAAM,KAAK,CACvD,CACA,SAAS,GAAiB,CAAO,EAC7B,GAAI,CAAC,EACD,OAAO,GAAiB,CACpB,MAAO,MACP,IAAK,KACL,KAAM,GACV,GAEJ,GAAM,CAAE,OAAK,CAAE,KAAG,CAAE,MAAI,CAAE,CAAG,EAC7B,MAAO,CACH,MAAO,GAAgB,EAAO,IAC9B,IAAK,GAAgB,EAAK,IAC1B,KAAM,GAAgB,EAAM,GAChC,CACJ,CACA,SAAS,GAAgB,CAAM,CAAE,CAAK,EAClC,GAAI,AAAkB,UAAlB,OAAO,GAAuB,AAAkB,UAAlB,OAAO,EAUrC,OAAO,CAVmD,EAC1D,IAAM,EAAU,AAAkB,UAAlB,OAAO,EAAsB,UAAa,GAAU,EAAO,MAAM,QACjF,AAAI,EACO,AAAIU,OAAO,CAAC,KAAK,EAAE,EAAQ,CAAC,EAG5B,AAAIA,OAAO,CAAC,IAAI,EAAE,EAAQ,KAAK,CAAC,CAE/C,CAIJ,CACA,MAAM,GACF,YAAYX,CAAQ,CAAE,CAAK,CAAE,CACzB,IAAI,CAAC,QAAQ,CAAGA,EAChB,IAAI,CAAC,KAAK,CAAG,CACjB,CACA,OAAO,CAAI,CAAE,CACT,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAK,EAAE,IAAI,GAAK,EAClD,CACA,QAAQ,CAAI,CAAE,CACV,OAAO,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,GAAK,EAAE,IAAI,GAAK,EACpD,CACA,YAAa,CACT,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,AAACA,GAAM,SAAUA,EACjD,CACA,UAAW,CACP,IAAI,EAAQ,GACZ,IAAK,IAAM,KAAW,IAAI,CAAC,QAAQ,CAC/B,GAAI,AAAiB,IAAjB,EAAM,MAAM,CACZ,EAAQ,EAAQ,QAAQ,OAEvB,CACD,IAAM,EAAO,EAAQ,QAAQ,GAC7B,GAAS,GAAa,GAAS,CACnC,CAEJ,OAAO,EAAM,IAAI,EACrB,CACA,WAAW,CAAO,CAAE,CAChB,IAAI,EAAQ,GACZ,IAAK,IAAM,KAAW,IAAI,CAAC,QAAQ,CAC/B,GAAI,AAAiB,IAAjB,EAAM,MAAM,CACZ,EAAQ,EAAQ,UAAU,CAAC,OAE1B,CACD,IAAM,EAAO,EAAQ,UAAU,CAAC,GAChC,GAAS,GAAa,GAAS,CACnC,CAEJ,OAAO,EAAM,IAAI,EACrB,CACJ,CACA,MAAM,GACF,YAAY,CAAI,CAAE,CAAO,CAAE,CAAM,CAAE,CAAK,CAAE,CACtC,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,MAAM,CAAG,EACd,IAAI,CAAC,KAAK,CAAG,CACjB,CACA,UAAW,CACP,IAAI,EAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CACpB,EAAU,IAAI,CAAC,OAAO,CAAC,QAAQ,SAOrC,CANI,AAAgC,IAAhC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAC3B,EAAO,CAAC,EAAE,EAAK,CAAC,EAAE,EAAQ,CAAC,CAEtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAG,GACnC,GAAO,CAAC,EAAE;AAAO,EAAE,EAAQ,CAAC,AAAD,EAE3B,IAAI,CAAC,MAAM,EAEJ,CAAC,CAAC,EAAE,EAAK,CAAC,CAAC,CAGX,CAEf,CACA,WAAW,CAAO,CAAE,CAChB,IAAI,EAAI,EACR,OAAO,MAAC,GAAK,MAAC,GAAK,QAAyC,KAAK,EAAI,EAAQ,SAAS,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,EAAS,IAAI,GAA+B,EAAK,IAAI,CAAC,iBAAiB,CAAC,EACjN,CACA,kBAAkB,CAAO,CAAE,CACvB,IAAM,EAAU,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GACxC,GAAI,IAAI,CAAC,MAAM,CAAE,CACb,IAAMJ,EAAW,AA+B7B,SAAyB,CAAG,CAAE,CAAO,CAAE,CAAO,EAC1C,IAAI,EAAI,EACR,GAAI,AAAQ,cAAR,GAAuB,AAAQ,aAAR,GAAsB,AAAQ,SAAR,EAAgB,CAC7D,IAAM,EAAQ,EAAQ,OAAO,CAAC,KAC1B,EAAU,EACd,GAAI,EAAQ,EAAG,CACX,IAAM,EAAe,GAAe,EAAS,GAC7C,EAAU,EAAQ,SAAS,CAAC,GAC5B,EAAU,EAAQ,SAAS,CAAC,EAAG,EACnC,CAMA,MALI,CAAQ,aAAR,GAAuB,AAAQ,SAAR,GAAkB,AAAiB,SAAjB,EAAQ,IAAI,AAAW,GAEhE,GAAU,CAAC,EAAE,EAAE,EAAQ,EAAE,CAAC,AAAD,EAER,MAAC,GAAK,MAAC,GAAK,EAAQ,UAAU,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,EAAS,EAAS,EAAO,EAA+B,EAAK,AAKvK,SAA2B,CAAO,CAAE,CAAO,EACvC,GAAI,CAEA,OADA,UAAS,CAAC,EAAS,IACZ,CAAC,CAAC,EAAE,EAAQ,EAAE,EAAE,EAAQ,CAAC,CAAC,AACrC,CACA,MAAO,EAAI,CACP,OAAO,CACX,CACJ,EAbyL,EAAS,EAE9L,CAEJ,EAjD6C,IAAI,CAAC,IAAI,CAAE,EAAS,QAAyC,EAAU,CAAC,GACzG,GAAI,AAAoB,UAApB,OAAOA,EACP,OAAOA,CAEf,CACA,IAAI,EAAS,EACT,CAAC,SAAyC,KAAK,EAAI,EAAQ,GAAG,AAAD,IAAO,UAAY,AAAC,SAAyC,KAAK,EAAI,EAAQ,GAAG,AAAD,IAAO,OACpJ,EAAS,IAEJ,AAAC,SAAyC,KAAK,EAAI,EAAQ,GAAG,AAAD,IAAO,OACzE,EAAS,KAEJ,AAAC,SAAyC,KAAK,EAAI,EAAQ,GAAG,AAAD,IAAO,eACzE,GAAS,KAAI,EAEjB,IAAI,EAAO,CAAC,EAAE,EAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAO,CAAC,OAO5C,CANI,AAAgC,IAAhC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAC3B,EAAO,CAAC,EAAE,EAAK,GAAG,EAAE,EAAQ,CAAC,CAExB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAG,GACnC,GAAO,CAAC,EAAE;AAAO,EAAE,EAAQ,CAAC,AAAD,EAE3B,IAAI,CAAC,MAAM,EAEJ,CAAC,CAAC,EAAE,EAAK,CAAC,CAAC,CAGX,CAEf,CACJ,CA6BA,MAAM,GACF,YAAY,CAAK,CAAE,CAAK,CAAE,CACtB,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,KAAK,CAAG,CACjB,CACA,UAAW,CACP,IAAI,EAAO,GACX,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,IAAK,CAC1C,IAAM,EAAS,IAAI,CAAC,OAAO,CAAC,EAAE,CACxByB,EAAO,IAAI,CAAC,OAAO,CAAC,EAAI,EAAE,CAChC,GAAQ,EAAO,QAAQ,GACnBA,GAAQA,EAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAG,EAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EACvD,IAAQ,IAAG,CAEnB,CACA,OAAO,CACX,CACA,WAAW,CAAO,CAAE,CAChB,IAAIpB,EAAO,GACX,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,IAAK,CAC1C,IAAM,EAAS,IAAI,CAAC,OAAO,CAAC,EAAE,CACxB,EAAO,IAAI,CAAC,OAAO,CAAC,EAAI,EAAE,CAChCA,GAAQ,EAAO,UAAU,CAAC,GACtB,GAAQ,EAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAG,EAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EACvDA,CAAAA,GAAQ,IAAG,CAEnB,CACA,OAAOA,CACX,CACJ,CACA,MAAM,GACF,YAAY,CAAI,CAAE,CAAK,CAAE,CACrB,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,CAAG,CACjB,CACA,UAAW,CACP,OAAO,IAAI,CAAC,IAAI,AACpB,CACA,YAAa,CACT,OAAO,IAAI,CAAC,IAAI,AACpB,CACJ,CACA,SAAS,GAAa,CAAI,SACtB,AAAI,EAAK,QAAQ,CAAC,MACP,KAGA,MAEf,CCnfO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,YAAY,CAAG,EAAS,MAAM,CAAC,SAAS,CAAC,YAAY,CAC1D,IAAI,CAAC,eAAe,CAAG,EAAS,aAAa,CAAC,eAAe,AACjE,CACA,iBAAiB,CAAI,CAAE,CACnB,IAAM,EAAU,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,GAChD,GAAI,GAAW,ADqBhB,SAAiB,CAAI,CAAE,CAAO,EACjC,IAAM,EAAoB,GADA,QAEpB,EAAQ,GAAS,GACvB,GAAI,AAAiB,IAAjB,EAAM,MAAM,CACZ,MAAO,GAEX,IAAM,EAAQ,CAAK,CAAC,EAAE,CAChB,EAAO,CAAK,CAAC,EAAM,MAAM,CAAG,EAAE,CAC9B,EAAa,EAAkB,KAAK,CACpC,EAAY,EAAkB,GAAG,CACvC,MAAO,EAAQ,SAA+C,KAAK,EAAI,EAAW,IAAI,CAAC,EAAK,GAAM,EAAQ,SAA6C,KAAK,EAAI,EAAU,IAAI,CAAC,EAAI,CACvL,EChC+B,GAEnB,KDRe,MACnB,EACA,ECMI,MAAO,CDLX,AAAgB,UAAhB,OAHmB,ECOgB,IDHnC,EAJyB,OAKzB,EALgC,SAQhC,EAAW,EAAK,KAAK,CAAC,KAAK,CAC3B,EATyB,QAWzB,AAAC,GACD,GAAW,SAAe,CAAC,EAAG,EAAC,EAS5B,AAsLX,SAA2B,CAAO,EAC9B,IAAI,EAAI,EAAI,EAAI,EAChB,IAAM,EAAgB,SAAe,CAAC,EAAQ,QAAQ,CAAC,IAAI,CAAE,EAAQ,QAAQ,CAAC,SAAS,EACvF,GAAI,AAA0B,IAA1B,EAAQ,MAAM,CAAC,MAAM,CACrB,OAAO,IAAI,GAAiB,EAAE,CAAE,SAAY,CAAC,EAAe,IAEhE,IAAM,EAAW,EAAE,CACnB,KAAO,EAAQ,KAAK,CAAG,EAAQ,MAAM,CAAC,MAAM,EAAE,CAC1C,IAAM,EAAU,AASxB,SAA2B,CAAO,CAAE,CAAI,EACpC,IAAM,EAAO,EAAQ,MAAM,CAAC,EAAQ,KAAK,CAAC,OAC1C,AAAI,AAAc,QAAd,EAAK,IAAI,CACF,GAAc,EAAS,IAE7B,AAAI,AAAc,SAAd,EAAK,IAAI,EAAe,AAAc,eAAd,EAAK,IAAI,CAC/B,GAAe,IAGtB,AAKR,SAAyB,CAAK,CAAE,CAAO,EACnC,GAAI,EAAS,CACT,IAAM,EAAO,IAAI,GAAc,GAAI,EAAM,KAAK,CAC1C,aAAa,EACb,EAAQ,OAAO,CAAC,IAAI,CAAC,GAGrB,EAAQ,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAErC,CACJ,EAfwB,EAAM,QACtB,EAAQ,KAAK,GAGrB,EAtB0C,EAAS,CAAQ,CAAC,EAAS,MAAM,CAAG,EAAE,CACpE,IACA,EAAS,IAAI,CAAC,EAEtB,CACA,IAAM,EAAQ,MAAC,GAAK,MAAC,GAAK,CAAQ,CAAC,EAAE,AAAD,EAA+B,KAAK,EAAI,EAAG,KAAK,CAAC,KAAK,AAAD,EAA+B,EAAK,EACvH,EAAM,MAAC,GAAK,MAAC,GAAK,CAAQ,CAAC,EAAS,MAAM,CAAG,EAAE,AAAD,EAA+B,KAAK,EAAI,EAAG,KAAK,CAAC,GAAG,AAAD,EAA+B,EAAK,EAC3I,OAAO,IAAI,GAAiB,EAAU,SAAY,CAAC,EAAO,GAC9D,EAtM6B,CACrB,MAAO,EACP,OAPW,AAoCnB,SAAkB,CAAO,EACrB,IAAI,EAAI,EAAI,EACZ,IAAM,EAAS,EAAE,CACb,EAAc,EAAQ,QAAQ,CAAC,IAAI,CACnC,EAAmB,EAAQ,QAAQ,CAAC,SAAS,CACjD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,KAAK,CAAC,MAAM,CAAE,IAAK,CAC3C,IAAM,EAAQ,AAAM,IAAN,EACR,EAAO,IAAM,EAAQ,KAAK,CAAC,MAAM,CAAG,EACtC,EAAO,EAAQ,KAAK,CAAC,EAAE,CACvB,EAAQ,EACZ,GAAI,GAAS,EAAQ,OAAO,CAAC,KAAK,CAAE,CAChC,IAAM,EAAQ,MAAC,GAAK,EAAQ,OAAO,CAAC,KAAK,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,EACpF,IACA,GAAQ,EAAM,KAAK,CAAG,CAAK,CAAC,EAAE,CAAC,MAAM,AAAD,CAE5C,KACK,CACD,IAAM,EAAQ,MAAC,GAAK,EAAQ,OAAO,CAAC,IAAI,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,EACnF,IACA,GAAQ,EAAM,KAAK,CAAG,CAAK,CAAC,EAAE,CAAC,MAAM,AAAD,CAE5C,CACA,GAAI,EAAM,CACN,IAAM,EAAQ,MAAC,GAAK,EAAQ,OAAO,CAAC,GAAG,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,CAAC,EAClF,IACA,GAAO,EAAK,SAAS,CAAC,EAAG,EAAM,KAAK,EAE5C,CAGA,GAAI,AADkB,GADtB,EAAO,EAAK,SAAS,CAAC,EAAG,AAmHjC,SAAuB,CAAI,EACvB,IAAM,EAAQ,EAAK,KAAK,CAAC,IACzB,GAAI,GAAS,AAAuB,UAAvB,OAAO,EAAM,KAAK,CAC3B,OAAO,EAAM,KAAK,AAG1B,EAzH+C,IACI,IACtB,EAAK,MAAM,CAE5B,IAAI,EAAO,MAAM,CAAG,EAAG,CACnB,IAAM,EAAW,SAAe,CAAC,EAAa,GAC9C,EAAO,IAAI,CAAC,CACR,KAAM,QACN,QAAS,GACT,MAAO,SAAY,CAAC,EAAU,EAClC,EACJ,MAEC,CACD,GAAS,SAAS,CAAG,EACrB,IAAM,EAAW,GAAS,IAAI,CAAC,GAC/B,GAAI,EAAU,CACV,IAAM,EAAY,CAAQ,CAAC,EAAE,CACvB,EAAQ,CAAQ,CAAC,EAAE,CACnB,EAAQ,SAAe,CAAC,EAAa,EAAmB,GACxD,EAAM,SAAe,CAAC,EAAa,EAAmB,EAAQ,EAAU,MAAM,EACpF,EAAO,IAAI,CAAC,CACR,KAAM,MACN,QAAS,EACT,MAAO,SAAY,CAAC,EAAO,EAC/B,GACA,GAAS,EAAU,MAAM,CACzB,EAAQ,GAAe,EAAM,EACjC,CACA,GAAI,EAAQ,EAAK,MAAM,CAAE,CACrB,IAAM,EAAO,EAAK,SAAS,CAAC,GACtB,EAAmBH,MAAM,IAAI,CAAC,EAAK,QAAQ,CAAC,KAClD,EAAO,IAAI,IAAI,AAY/B,SAA2B,CAAI,CAAE,CAAI,CAAE,CAAS,CAAE,CAAc,EAC5D,IAAM,EAAS,EAAE,CACjB,GAAI,AAAgB,IAAhB,EAAK,MAAM,CAAQ,CACnB,IAAM,EAAQ,SAAe,CAAC,EAAW,GACnC,EAAM,SAAe,CAAC,EAAW,EAAiB,EAAK,MAAM,EACnE,EAAO,IAAI,CAAC,CACR,KAAM,OACN,QAAS,EACT,MAAO,SAAY,CAAC,EAAO,EAC/B,EACJ,KACK,CACD,IAAI,EAAY,EAChB,IAAK,IAAM,KAAS,EAAM,CACtB,IAAM,EAAa,EAAM,KAAK,CACxB,EAAe,EAAK,SAAS,CAAC,EAAW,EAC3C,GAAa,MAAM,CAAG,GACtB,EAAO,IAAI,CAAC,CACR,KAAM,OACN,QAAS,EAAK,SAAS,CAAC,EAAW,GACnC,MAAO,SAAY,CAAC,SAAe,CAAC,EAAW,EAAY,GAAiB,SAAe,CAAC,EAAW,EAAa,GACxH,GAEJ,IAAI,EAAS,EAAa,MAAM,CAAG,EAC7B,EAAU,CAAK,CAAC,EAAE,CAOxB,GANA,EAAO,IAAI,CAAC,CACR,KAAM,aACN,QAAS,EACT,MAAO,SAAY,CAAC,SAAe,CAAC,EAAW,EAAY,EAAS,GAAiB,SAAe,CAAC,EAAW,EAAY,EAAS,EAAQ,MAAM,CAAG,GAC1J,GACA,GAAU,EAAQ,MAAM,CACpB,AAAiB,IAAjB,EAAM,MAAM,CAAQ,CACpB,GAAU,CAAK,CAAC,EAAE,CAAC,MAAM,CACzB,IAAM,EAAQ,CAAK,CAAC,EAAE,CACtB,EAAO,IAAI,CAAC,CACR,KAAM,OACN,QAAS,EACT,MAAO,SAAY,CAAC,SAAe,CAAC,EAAW,EAAY,EAAS,GAAiB,SAAe,CAAC,EAAW,EAAY,EAAS,EAAM,MAAM,CAAG,GACxJ,EACJ,MAEI,EAAO,IAAI,CAAC,CACR,KAAM,OACN,QAAS,GACT,MAAO,SAAY,CAAC,SAAe,CAAC,EAAW,EAAY,EAAS,GAAiB,SAAe,CAAC,EAAW,EAAY,EAAS,GACzI,GAEJ,EAAY,EAAa,CAAK,CAAC,EAAE,CAAC,MAAM,AAC5C,CACA,IAAM,EAAa,EAAK,SAAS,CAAC,EAC9B,GAAW,MAAM,CAAG,GACpB,EAAO,IAAI,CAAC,CACR,KAAM,OACN,QAAS,EACT,MAAO,SAAY,CAAC,SAAe,CAAC,EAAW,EAAY,GAAiB,SAAe,CAAC,EAAW,EAAY,EAAiB,EAAW,MAAM,EACzJ,EAER,CACA,OAAO,CACX,EAvEiD,EAAkB,EAAM,EAAa,EAAmB,GAC7F,CACJ,CACA,IACA,EAAmB,CACvB,QAEA,AAAI,EAAO,MAAM,CAAG,GAAK,AAAmC,UAAnC,CAAM,CAAC,EAAO,MAAM,CAAG,EAAE,CAAC,IAAI,CAC5C,EAAO,KAAK,CAAC,EAAG,IAEpB,CACX,EA3G4B,CACpB,MAHU,GAAS,GAInB,WACA,QAJsB,GAAiB,EAK3C,GAII,UACJ,ICjB2B,UAAU,CAAC,CAC1B,WAAY,CAAC,EAAM,IACR,IAAI,CAAC,yBAAyB,CAAC,EAAM,EAAM,GAEtD,UAAW,AAACG,GACD,IAAI,CAAC,wBAAwB,CAAC,EAAMA,EAEnD,EAAE,CAGV,CACA,0BAA0B,CAAI,CAAE,CAAI,CAAE,CAAO,CAAE,CAC3C,IAAI,EACJ,IAAM,EAAc,MAAC,GAAK,IAAI,CAAC,2BAA2B,CAAC,EAAM,EAAI,EAA+B,EAAK,IAAI,CAAC,qBAAqB,CAAC,EAAM,GAC1I,GAAI,GAAe,EAAY,WAAW,CAAE,CACxC,IAAM,EAAO,EAAY,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAG,EAClD,EAAY,EAAY,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAG,EAC5D,EAAM,EAAY,WAAW,CAAC,IAAI,CAAC,CAAE,SAAU,CAAC,CAAC,EAAE,EAAK,CAAC,EAAE,EAAU,CAAC,AAAC,GAC7E,MAAO,CAAC,CAAC,EAAE,EAAQ,EAAE,EAAE,EAAI,QAAQ,GAAG,CAAC,CAAC,AAC5C,CAIJ,CACA,yBAAyB,CAAK,CAAE,CAAI,CAAE,CAGtC,CACA,4BAA4B,CAAI,CAAE,CAAI,CAAE,CAEpC,IAAM,EAAc,AADH,UAAY,GACA,iBAAiB,CAC9C,GAAI,CAAC,EACD,OAEJ,IAAI,EAAc,EAClB,EAAG,CAEC,IAAM,EAAc,AADI,EAAY,GAAG,CAAC,GACJ,IAAI,CAACD,GAAKA,EAAE,IAAI,GAAK,GACzD,GAAI,EACA,OAAO,EAEX,EAAc,EAAY,UAAU,AACxC,OAAS,EAAa,AAE1B,CACA,sBAAsB,CAAI,CAAE,CAAI,CAAE,CAE9B,OADoB,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAACA,GAAKA,EAAE,IAAI,GAAK,EAE7E,CACJ,CC1DO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,aAAa,CAAG,IAAM,EAAS,MAAM,CAAC,aAAa,AAC5D,CACA,WAAW,CAAI,CAAE,CACb,IAAI,QACJ,AXHG,AAAyB,UAAzB,OAAO,AWGe,EXHV,QAAQ,CWIZ,EAAK,QAAQ,CAEjB,MAAC,GAAK,UAAgB,EAAK,QAAQ,CAAE,IAAI,CAAC,aAAa,GAAG,qBAAqB,GAA+B,KAAK,EAAI,EAAG,IAAI,AACzI,CACJ,CCLO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,UAAU,CAAG,EAAS,MAAM,CAAC,aAAa,AACnD,CACA,MAAM,CAAI,CAAE,CAAY,CAAE,CACtB,OAAO8B,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GACjD,CACJ,CCbO,MAAM,GACT,aAAc,CACV,IAAI,CAAC,mBAAmB,CAAG,IAAI,0BAAuB,CACtD,IAAI,CAAC,UAAU,CAAG,EAAE,CACpB,IAAI,CAAC,SAAS,CAAG,EAAE,CACnB,IAAI,CAAC,IAAI,CAAG,EAChB,CACA,MAAM,CAAM,CAAE,CACV,IAAI,CAAC,WAAW,GAChB,IAAM7B,GtBYV,GAAW4B,YAAY,GAAG,GACnB,IAAI,0BAAuB,EsBX9B,OADA,IAAI,CAAC,mBAAmB,CAAG5B,EACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAE,EAAQA,EAAY,KAAK,CAClE,CACA,KAAK,CAAM,CAAE,CACT,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAE,EACxC,CACA,QAAQ,CAAK,CAAE,CAAM,CAAE,EAAoB,yBAAsB,CAAE,CAC/D,IAAM,EAAW,IAAI,GAQrB,OAFA,EAAM,IAAI,CALI,CACV,SACA,WACA,mBACJ,GAEA,IAAI,CAAC,oBAAoB,GAClB,EAAS,OAAO,AAC3B,CACA,MAAM,sBAAuB,CACzB,GAAI,CAAC,IAAI,CAAC,IAAI,CACV,OAEJ,IAAMD,EAAU,EAAE,CAClB,GAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAG,EAEzBA,EAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,SAEjC,IAAI,KAAI,CAAC,SAAS,CAAC,MAAM,CAAG,GAK7B,OAHAA,EAAQ,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAKlE,IAAI,CAAC,IAAI,CAAG,GACZ,MAAM8B,QAAQ,GAAG,CAAC9B,EAAQ,GAAG,CAAC,MAAO,CAAE,QAAM,CAAE,UAAQ,CAAE,mBAAiB,CAAE,IACxE,GAAI,CAEA,IAAM,EAAS,MAAM8B,QAAQ,OAAO,GAAG,IAAI,CAAC,IAAM,EAAO,IACzD,EAAS,OAAO,CAAC,EACrB,CACA,MAAO9B,EAAK,CtBRb,AsBS8BA,ItBTtB,GsBWC,EAAS,OAAO,CAAC,QAGjB,EAAS,MAAM,CAACA,EAExB,CACJ,IACA,IAAI,CAAC,IAAI,CAAG,GACZ,IAAI,CAAC,oBAAoB,EAC7B,CACA,aAAc,CACV,IAAI,CAAC,mBAAmB,CAAC,MAAM,EACnC,CACJ,CC9DO,MAAM,GACT,YAAY,CAAQ,CAAE,CAClB,IAAI,CAAC,mBAAmB,CAAG,IAAI,GAC/B,IAAI,CAAC,cAAc,CAAG,IAAI,GAC1B,IAAI,CAAC,OAAO,CAAG,EAAS,OAAO,CAC/B,IAAI,CAAC,KAAK,CAAG,EAAS,MAAM,CAAC,KAAK,CAClC,IAAI,CAAC,MAAM,CAAG,EAAS,UAAU,CAAC,MAAM,AAC5C,CACA,UAAU,CAAM,CAAE,CACd,MAAO,CACH,YAAa,EAAO,WAAW,CAC/B,YAAa,EAAO,WAAW,CAAG,IAAI,CAAC,oBAAoB,CAAC,EAAO,WAAW,EAAI,OAGlF,aAAc,EAAO,YAAY,CAAC,GAAG,CAACA,GAAMH,OAAO,MAAM,CAACA,OAAO,MAAM,CAAC,CAAC,EAAGG,GAAI,CAAE,QAASA,EAAE,OAAO,AAAC,IACrG,MAAO,IAAI,CAAC,gBAAgB,CAAC,EAAO,KAAK,CAAE,IAAI,CAAC,uBAAuB,CAAC,EAAO,KAAK,EACxF,CACJ,CACA,qBAAqB,CAAW,CAAE,CAE9B,OAAO,CACX,CACA,wBAAwB,CAAI,CAAE,CAC1B,IAAM,EAAW,IAAIyB,IACf,EAAW,IAAIA,IACrB,IAAK,IAAM,IAAW,UAAU,GAC5B,EAAS,GAAG,CAAC,EAAS,CAAC,GAE3B,GAAI,EAAK,QAAQ,CACb,IAAK,IAAM,IAAW,UAAU,EAAK,QAAQ,EACzC,EAAS,GAAG,CAAC,EAAS,CAAC,GAG/B,MAAO,CACH,WACA,UACJ,CACJ,CACA,iBAAiB,CAAI,CAAE,CAAO,CAAE,CAC5B,IAAM,EAAM,EAAQ,QAAQ,CAAC,GAAG,CAAC,GAOjC,IAAK,GAAM,CAACJ,EAAM,EAAM,GANxB,EAAI,KAAK,CAAG,EAAK,KAAK,CACtB,EAAI,eAAe,CAAG,EAAK,eAAe,CAC1C,EAAI,kBAAkB,CAAG,EAAK,kBAAkB,CAC5C,AAAkB,SAAlB,EAAK,QAAQ,EACb,GAAI,QAAQ,CAAG,IAAI,CAAC,gBAAgB,CAAC,EAAK,QAAQ,CAAE,EAAO,EAEnCxB,OAAO,OAAO,CAAC,IACvC,IAAIwB,EAAK,UAAU,CAAC,KAGpB,GAAIvB,MAAM,OAAO,CAAC,GAAQ,CACtB,IAAM,EAAM,EAAE,CAEd,IAAK,IAAM,KADX,CAAG,CAACuB,EAAK,CAAG,EACO,GACX,UAAU,GACV,EAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAM,IAEhC,UAAY,GACjB,EAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAM,IAGvC,EAAI,IAAI,CAAC,EAGrB,KACS,UAAU,GACf,CAAG,CAACA,EAAK,CAAG,IAAI,CAAC,gBAAgB,CAAC,EAAO,GAEpC,UAAY,GACjB,CAAG,CAACA,EAAK,CAAG,IAAI,CAAC,kBAAkB,CAAC,EAAO,GAEtC,AAAU,SAAV,GACL,EAAG,CAACA,EAAK,CAAG,CAAI,EAGxB,OAAO,CACX,CACA,mBAAmB,CAAS,CAAE,CAAO,CAAE,CACnC,IAAM,EAAM,CAAC,EAKb,OAJA,EAAI,QAAQ,CAAG,EAAU,QAAQ,CAC7B,EAAU,QAAQ,EAClB,GAAI,QAAQ,CAAG,EAAQ,QAAQ,CAAC,GAAG,CAAC,EAAU,QAAQ,GAEnD,CACX,CACA,iBAAiB,CAAI,CAAE,CAAO,CAAE,CAC5B,IAAM,EAAU,EAAQ,QAAQ,CAAC,GAAG,CAAC,GAsBrC,MArBI,UAAc,GACd,EAAQ,QAAQ,CAAG,EAAK,QAAQ,CAIhC,EAAQ,aAAa,CAAG,IAAI,CAAC,mBAAmB,CAAC,EAAK,aAAa,EAEvE,EAAQ,MAAM,CAAG,EAAK,MAAM,CAC5B,EAAQ,OAAO,CAAG,EAAQ,QAAQ,CAAC,GAAG,CAAC,EAAK,OAAO,EAC/C,UAAmB,GACnB,EAAQ,OAAO,CAAG,EAAK,OAAO,CAAC,GAAG,CAAC,GAAS,IAAI,CAAC,gBAAgB,CAAC,EAAO,IAEpE,UAAc,KACnB,EAAQ,SAAS,CAAG,EAAK,SAAS,CAAC,IAAI,CACvC,EAAQ,MAAM,CAAG,EAAK,MAAM,CAC5B,EAAQ,MAAM,CAAG,EAAK,MAAM,CAC5B,EAAQ,SAAS,CAAG,EAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CACzC,EAAQ,WAAW,CAAG,EAAK,KAAK,CAAC,KAAK,CAAC,SAAS,CAChD,EAAQ,OAAO,CAAG,EAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CACrC,EAAQ,SAAS,CAAG,EAAK,KAAK,CAAC,GAAG,CAAC,SAAS,EAEzC,CACX,CACA,QAAQ,CAAM,CAAE,CACZ,IAAM,EAAO,EAAO,KAAK,CACnB,EAAU,IAAI,CAAC,sBAAsB,CAAC,GAI5C,MAHI,aAAc,GACd,IAAI,CAAC,cAAc,CAAC,EAAK,QAAQ,CAAE,GAEhC,CACH,YAAa,EAAO,WAAW,CAC/B,YAAa,EAAO,WAAW,CAC/B,aAAc,EAAO,YAAY,CACjC,MAAO,IAAI,CAAC,cAAc,CAAC,EAAM,EACrC,CACJ,CACA,uBAAuB,CAAI,CAAE,CACzB,IAKI,EALE,EAAW,IAAII,IACf,EAAW,IAAIA,IACrB,IAAK,IAAM,IAAW,UAAU,GAC5B,EAAS,GAAG,CAAC,EAAS,CAAC,GAG3B,GAAI,EAAK,QAAQ,CACb,IAAK,IAAM,IAAW,UAAU,EAAK,QAAQ,EAAG,CAC5C,IAAI,CACA,cAAc,EAEd,EADA,EAAM,IAAI,GAAgB,EAAQ,QAAQ,EAGrC,YAAa,EAClB,EAAM,IAAI,GAEL,cAAe,GACpB,GAAM,IAAI,CAAC,kBAAkB,CAAC,EAAO,EAErC,IACA,EAAS,GAAG,CAAC,EAAS,GACtB,EAAI,IAAI,CAAG,EAEnB,CAEJ,MAAO,CACH,WACA,UACJ,CACJ,CACA,eAAe,CAAI,CAAE,CAAO,CAAE,CAC1B,IAAM,EAAU,EAAQ,QAAQ,CAAC,GAAG,CAAC,GAOrC,IAAK,GAAM,CAACJ,EAAM,EAAM,GANxB,EAAQ,KAAK,CAAG,EAAK,KAAK,CAC1B,EAAQ,eAAe,CAAG,EAAK,eAAe,CAC9C,EAAQ,kBAAkB,CAAG,EAAK,kBAAkB,CAChD,EAAK,QAAQ,EACb,GAAQ,QAAQ,CAAG,EAAQ,QAAQ,CAAC,GAAG,CAAC,EAAK,QAAQ,GAE7BxB,OAAO,OAAO,CAAC,IACvC,IAAIwB,EAAK,UAAU,CAAC,KAGpB,GAAIvB,MAAM,OAAO,CAAC,GAAQ,CACtB,IAAM,EAAM,EAAE,CAEd,IAAK,IAAM,KADX,CAAO,CAACuB,EAAK,CAAG,EACG,GACX,UAAU,GACV,EAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAAM,GAAU,IAEvD,UAAY,GACjB,EAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAM,EAASA,EAAM,IAGpD,EAAI,IAAI,CAAC,EAGrB,KACS,UAAU,GACf,CAAO,CAACA,EAAK,CAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAAO,GAAU,GAE/D,UAAY,GACjB,CAAO,CAACA,EAAK,CAAG,IAAI,CAAC,gBAAgB,CAAC,EAAO,EAASA,EAAM,GAEvD,AAAU,SAAV,GACL,EAAO,CAACA,EAAK,CAAG,CAAI,EAG5B,OAAO,CACX,CACA,UAAU,CAAI,CAAE,CAAM,CAAE,CAEpB,OADA,EAAK,UAAU,CAAG,EACX,CACX,CACA,iBAAiB,CAAS,CAAE,CAAI,CAAE,CAAI,CAAE,CAAO,CAAE,CAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAM,EAAM,EAAQ,QAAQ,CAAC,GAAG,CAAC,EAAU,QAAQ,EAAG,EAAU,QAAQ,CAC9G,CACA,eAAe,CAAO,CAAE,CAAO,CAAE,EAAM,CAAC,CAAE,CACtC,IAAM,EAAa,EAAQ,QAAQ,CAAC,GAAG,CAAC,GAKxC,GAJI,AAAiC,UAAjC,OAAO,EAAQ,aAAa,EAC5B,GAAW,aAAa,CAAG,IAAI,CAAC,iBAAiB,CAAC,EAAQ,aAAa,GAE3E,EAAW,OAAO,CAAG,EAAQ,QAAQ,CAAC,GAAG,CAAC,EAAQ,OAAO,EACrD,UAAmB,GACnB,IAAK,IAAM,KAAS,EAAQ,OAAO,CAAE,CACjC,IAAM,EAAW,IAAI,CAAC,cAAc,CAAC,EAAO,EAAS,KACrD,EAAW,OAAO,CAAC,IAAI,CAAC,EAC5B,CAEJ,OAAO,CACX,CACA,mBAAmB,CAAO,CAAE,CACxB,IAAMpB,EAAY,IAAI,CAAC,YAAY,CAAC,EAAQ,SAAS,EAC/C,EAAS,EAAQ,MAAM,CACvB,EAAS,EAAQ,MAAM,CACvB,EAAY,EAAQ,SAAS,CAC7B,EAAc,EAAQ,WAAW,CACjC,EAAU,EAAQ,OAAO,CAa/B,OAVa,IAAI,GAAgB,EAAQ,EAAQ,CAC7C,MAAO,CACH,KAAM,EACN,UAAW,CACf,EACA,IAAK,CACD,KAAM,EACN,UATU,EAAQ,SAAS,AAU/B,CACJ,EAAGA,EAVY,EAAQ,MAAM,CAYjC,CACA,aAAa,CAAI,CAAE,CACf,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAK,AACtC,CACA,oBAAoB,CAAI,CAAE,CACtB,GAAK,EAML,OAHI,AAAkC,IAAlC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAC7B,IAAI,CAAC,yBAAyB,GAE3B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EACxC,CACA,kBAAkB,CAAE,CAAE,CAKlB,OAJI,AAAkC,IAAlC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAC7B,IAAI,CAAC,yBAAyB,GAElB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAEpD,CACA,2BAA4B,CACxB,IAAI,EAAK,EACT,IAAK,IAAM,IAAW,UAAU,IAAI,CAAC,OAAO,EACpC,UAAkB,IAClB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAS,IAGlD,CACJ,CC5OO,SAAS,GAAwB,CAAO,EAC3C,MAAO,CACH,cAAe,CACX,gBAAiB,AAAC,GAAa,IAAI,GAAuB,GAC1D,sBAAuB,AAAC,GAAa,IAAI,GAA2B,EACxE,EACA,OAAQ,CACJ,YAAa,AAAC,GAAa,IAAI,GAAmB,GAClD,cAAe,AAAC,GAAa,AChClC,UAA6B,CAAQ,EACxC,IAAM,EAAQ,EAAE,CAEhB,IAAK,IAAML,KAAQ,AADH,EAAS,OAAO,CACL,KAAK,CACxB,UAAeA,IAAS,UAAkBA,IAAS,UAAmB,UAAcA,KACpF,EAAM,IAAI,CAACA,EAAK,IAAI,EAG5B,MAAO,CACH,sBAAuB,EACvB,WAAY,KAAiB,AACjC,CACJ,GDoB6D,GACjD,cAAe,AAAC,GAAa,AEnClC,UAA6B,CAAQ,EACxC,IAAM,EAAS,AAQZ,SAA8B,CAAQ,EACzC,IAAM,EAAU,EAAS,OAAO,CAC1B,EAAQ,EAAS,MAAM,CAAC,KAAK,CAEnC,OAAO,GAAa,EADL,IAAI,GAAc,GACI,EAAM,UAAU,CACzD,EAbwC,GAEpC,OADA,EAAO,QAAQ,GACR,CACX,GF+B6D,GACjD,iBAAkB,AAAC,GAAa,AGxCrC,UAAgC,CAAQ,EAC3C,IAAM,EAAU,EAAS,OAAO,CAC1B,EAAQ,EAAS,MAAM,CAAC,KAAK,CAC7B,EAAS,IAAI,GAAwB,GAG3C,OAFA,GAAa,EAAS,EAAQ,EAAM,UAAU,EAC9C,EAAO,QAAQ,GACR,CACX,GHiCmE,GACvD,eAAgB,IAAM,IAAI,IAAqB,CAC/C,aAAc,IAAM,IAAI,IAAmB,CAC3C,MAAO,AAAC,GAAa,IAAI,GAAa,GACtC,2BAA4B,IAAM,IAAI,GACtC,0BAA2B,IAAM,IAAI,EACzC,EACA,UAAW,CACP,eAAgB,IAAM,IAAI,GAC1B,2BAA4B,AAAC,GAAa,IAAI,GAAkC,GAChF,6BAA8B,AAAC,GAAa,IAAI,GAAoC,EACxF,EACA,WAAY,CACR,OAAQ,AAAC,GAAa,IAAI,GAAc,GACxC,aAAc,IAAM,IAAI,GACxB,cAAe,AAAC,GAAa,IAAI,GAAqB,GACtD,iBAAkB,AAAC,GAAa,IAAI,GAAwB,GAC5D,WAAY,AAAC,GAAa,IAAI,GAAkB,EACpD,EACA,WAAY,CACR,SAAU,AAAC,GAAa,IAAI,GAAgB,GAC5C,eAAgB,AAAC,GAAa,IAAI,GAAsB,EAC5D,EACA,WAAY,CACR,kBAAmB,AAAC,GAAa,IAAI,GAAyB,GAC9D,mBAAoB,AAAC,GAAa,IAAI,GAAmB,EAC7D,EACA,OAAQ,IAAM,EAAQ,MAAM,AAChC,CACJ,CAKO,SAAS,GAA8B,CAAO,EACjD,MAAO,CACH,gBAAiB,AAAC,GAAa,IAAI,GAAuB,GAC1D,UAAW,CACP,iBAAkB,AAAC,GAAa,IAAI,GAAwB,GAC5D,uBAAwB,AAAC,GAAa,IAAI,GAA8B,GACxE,gBAAiB,AAAC,GAAa,IAAI,GAAuB,GAC1D,aAAc,AAAC,GAAa,IAAI,GAAoB,GACpD,iBAAkB,AAAC,GAAa,IAAI,GAAwB,GAC5D,mBAAoB,AAAC,GAAa,EAAQ,kBAAkB,CAAC,GAC7D,cAAe,IAAM,IAAI,GACzB,sBAAuB,AAAC,GAAa,IAAI,GAA6B,EAC1E,CACJ,CACJ,C,2BI1FW,EA0BJ,SAASQ,EAAO,CAAO,CAAE,CAAO,CAAE,CAAO,CAAE,CAAO,CAAE,CAAO,CAAE,CAAO,CAAE,CAAO,CAAE,CAAO,CAAE,CAAO,EAElG,OAAO,EADQ,CAAC,EAAS,EAAS,EAAS,EAAS,EAAS,EAAS,EAAS,EAAS,EAAQ,CAAC,MAAM,CAAC,EAAQ,CAAC,GAErH,C,kBA3BI,AACD,IAAW,GAAS,CAAC,EAAC,EADd,KAAK,CAAG,CAAC,EAAI,IAAO,EAAO,EAAO,CAAC,EAAG,GAAK,GA4BtD,IAAM,EAAUwB,OAAO,WAiBvB,SAAS,EAAQ,CAAM,CAAE,CAAQ,EAC7B,IAAM,EAAQ,IAAIK,MAAM,CAAC,EAAG,CACxB,eAAgB,IAAM,GACtB,IAAK,KACD,MAAM,AAAIlC,MAAM,oDACpB,EACA,IAAK,CAAC,EAAK,IACP,AAAI,IAAS,GAIF,EAAS,EAAK,EAAM,EAAQ,GAAY,GAGvD,yBAA0B,CAAC,EAAK,IAAU,GAAS,EAAK,EAAM,EAAQ,GAAY,GAAQF,OAAO,wBAAwB,CAAC,EAAK,EAAI,EACnI,IAAK,CAAC,EAAG,IAAS,KAAQ,EAC1B,QAAS,IAAM,IAAIA,OAAO,mBAAmB,CAAC,GAAQ,AAC1D,GACA,OAAO,CACX,CAKA,IAAM,EAAgB+B,SAatB,SAAS,EAAS,CAAG,CAAE,CAAI,CAAE,CAAM,CAAE,CAAQ,EACzC,GAAI,KAAQ,EAAK,CACb,GAAI,CAAG,CAAC,EAAK,WAAY7B,MACrB,MAAM,AAAIA,MAAM,mFAAoF,CAAE,MAAO,CAAG,CAAC,EAAK,AAAC,GAE3H,GAAI,CAAG,CAAC,EAAK,GAAK,EACd,MAAM,AAAIA,MAAM,gCAAkCG,OAAO,GAAQ,0GAErE,OAAO,CAAG,CAAC,EAAK,AACpB,CACK,GAAI,KAAQ,EAAQ,CACrB,IAAM,EAAQ,CAAM,CAAC,EAAK,AAC1B,EAAG,CAAC,EAAK,CAAG,EACZ,GAAI,CACA,CAAG,CAAC,EAAK,CAAG,AAAC,AAAiB,YAAjB,OAAO,EAAwB,EAAM,GAAY,EAAQ,EAAO,EACjF,CACA,MAAO,EAAO,CAEV,MADA,CAAG,CAAC,EAAK,CAAG,aAAiBH,MAAQ,EAAQ,OACvC,CACV,CACA,OAAO,CAAG,CAAC,EAAK,AACpB,CAIJ,CAQA,SAAS,EAAO,CAAM,CAAE,CAAM,EAC1B,GAAI,EACA,KAAK,GAAM,CAAC,EAAK,EAAO,GAAIF,OAAO,OAAO,CAAC,GACvC,GAAI,AAAW,SAAX,EAAsB,CACtB,IAAM,EAAS,CAAM,CAAC,EAAI,AACtB,AAAW,QAAX,GAAmB,AAAW,OAAX,GAAmB,AAAkB,UAAlB,OAAO,GAAuB,AAAkB,UAAlB,OAAO,EAC3E,CAAM,CAAC,EAAI,CAAG,EAAO,EAAQ,GAG7B,CAAM,CAAC,EAAI,CAAG,CAEtB,CACJ,CAEJ,OAAO,CACX,C,mVC3HO,IAAM,EAAe,eAIf,EAAe,eAIf,EAAY,YAUZ,EAAiB,iBAIjB,EAAe,eAIf,EAAkB,kBACxB,SAAS,EAAkB,CAAI,EAClC,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAe,eAIf,EAAY,YAIZ,EAAiB,iBACvB,SAAS,EAAiB,CAAI,EACjC,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAc,cACpB,SAAS,EAAc,CAAI,EAC9B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAc,cACpB,SAAS,EAAc,CAAI,EAC9B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAU,UAIV,EAAgB,gBAIhB,EAAe,eACrB,SAAS,EAAe,CAAI,EAC/B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAY,YAClB,SAAS,EAAY,CAAI,EAC5B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAgB,gBAIhB,EAAW,WACjB,SAAS,EAAW,CAAI,EAC3B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAgB,gBAIhB,EAAY,YAIZ,EAAqB,qBAC3B,SAAS,EAAqB,CAAI,EACrC,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAa,aACnB,SAAS,EAAa,CAAI,EAC7B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAgB,gBAIhB,EAAa,aACnB,SAAS,EAAa,CAAI,EAC7B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAa,aACnB,SAAS,EAAa,CAAI,EAC7B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAgB,gBAIhB,EAAe,eACrB,SAAS,EAAe,CAAI,EAC/B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAO,OACb,SAAS,EAAO,CAAI,EACvB,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAgB,gBAIhB,EAAY,YAIZ,EAAS,SACf,SAAS,EAAS,CAAI,EACzB,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAe,eACrB,SAAS,EAAe,CAAI,EAC/B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAa,aACnB,SAAS,EAAa,CAAI,EAC7B,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,EAAiB,iBACvB,SAAS,EAAiB,CAAI,EACjC,OAAO,GAAW,UAAU,CAAC,EAAM,EACvC,CACO,IAAM,GAAiB,iBACvB,SAAS,GAAiB,CAAI,EACjC,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAY,YAClB,SAAS,GAAY,CAAI,EAC5B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAQ,QACd,SAAS,GAAQ,CAAI,EACxB,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAU,UAChB,SAAS,GAAU,CAAI,EAC1B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAe,eACrB,SAAS,GAAe,CAAI,EAC/B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAa,aACnB,SAAS,GAAa,CAAI,EAC7B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAW,WACjB,SAAS,GAAW,CAAI,EAC3B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAuB,uBAC7B,SAAS,GAAuB,CAAI,EACvC,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAgB,gBACtB,SAAS,GAAgB,CAAI,EAChC,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAmB,mBACzB,SAAS,GAAmB,CAAI,EACnC,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAiB,iBACvB,SAAS,GAAiB,CAAI,EACjC,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAa,aACnB,SAAS,GAAa,CAAI,EAC7B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,IAAM,GAAW,WACjB,SAAS,GAAW,CAAI,EAC3B,OAAO,GAAW,UAAU,CAAC,EAAM,GACvC,CACO,MAAM,WAAoC,IAAqB,CAClE,aAAc,CACV,MAAO,CAAC,EAAiB,EAAc,EAAc,EAAQ,EAAc,EAAc,EAAW,EAAY,EAAgB,EAAgB,EAAW,EAAa,GAAgB,EAAa,GAAW,EAAS,EAAe,GAAO,EAAc,EAAW,GAAS,EAAe,GAAc,EAAU,EAAe,EAAW,EAAoB,EAAY,EAAe,GAAY,EAAY,GAAU,EAAY,EAAe,GAAsB,GAAe,EAAc,GAAkB,EAAM,EAAe,EAAgB,EAAW,GAAgB,GAAY,EAAc,GAAS,AAC1mB,CACA,iBAAiB,CAAO,CAAE,CAAS,CAAE,CACjC,OAAQ,GACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAiB,EAE3C,MAAK,EACL,KAAK,EACL,KAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAc,EAExC,MAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAgB,EAE1C,MAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAW,IAAc,IAAI,CAAC,SAAS,CAAC,EAAc,EAEhF,MAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAW,EAErC,MAAK,EACL,KAAK,EACL,KAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAc,EAExC,MAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAc,IAAc,IAAI,CAAC,SAAS,CAAC,EAAc,EAEnF,MAAK,EACD,OAAO,IAAI,CAAC,SAAS,CAAC,EAAc,EAExC,SACI,MAAO,EAEf,CACJ,CACA,iBAAiB,CAAO,CAAE,CACtB,IAAM,EAAc,CAAC,EAAE,EAAQ,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,EAAQ,QAAQ,CAAC,CAAC,CACpE,OAAQ,GACJ,IAAK,cACL,IAAK,sBACL,IAAK,uBACL,IAAK,wBACL,IAAK,qBACD,OAAO,CAEX,KAAK,uBACL,IAAK,0BACL,IAAK,gBACD,OAAO,CAEX,KAAK,uBACD,OAAO,CAEX,KAAK,0BACL,IAAK,+BACD,OAAO,CAEX,KAAK,wBACD,OAAO,CAEX,SACI,MAAM,AAAIE,MAAM,CAAC,EAAE,EAAY,6BAA6B,CAAC,CAErE,CACJ,CACA,gBAAgB,CAAI,CAAE,CAClB,OAAQ,GACJ,KAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACxC,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,EACzB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,OAAQ,aAAc,EAAM,EACvC,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,sBAAuB,aAAc,EAAM,EACnD,CAAE,KAAM,eAAgB,aAAc,EAAE,AAAC,EACzC,CAAE,KAAM,UAAW,aAAc,EAAE,AAAC,EACpC,CAAE,KAAM,aAAc,aAAc,EAAE,AAAC,EACvC,CAAE,KAAM,aAAc,aAAc,EAAM,EAC1C,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,QAAS,aAAc,EAAE,AAAC,EAClC,CAAE,KAAM,QAAS,aAAc,EAAE,AAAC,EAClC,CAAE,KAAM,eAAgB,aAAc,EAAE,AAAC,EAC5C,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,aAAc,EAAE,AAAC,EACvC,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,aAAc,aAAc,EAAE,AAAC,EAC1C,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,eAAgB,aAAc,EAAM,EAC5C,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,sBAAuB,aAAc,EAAM,EACnD,CAAE,KAAM,YAAa,EACrB,CAAE,KAAM,QAAS,aAAc,EAAM,EACrC,CAAE,KAAM,WAAY,aAAc,EAAM,EACxC,CAAE,KAAM,eAAgB,aAAc,EAAE,AAAC,EACzC,CAAE,KAAM,cAAe,EACvB,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,aAAc,aAAc,EAAE,AAAC,EACvC,CAAE,KAAM,YAAa,EACrB,CAAE,KAAM,WAAY,aAAc,EAAM,EAC3C,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,eAAgB,EAC3B,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,eAAgB,EACxB,CAAE,KAAM,YAAa,EACrB,CAAE,KAAM,SAAU,EACrB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,YAAa,EACrB,CAAE,KAAM,WAAY,aAAc,EAAM,EACxC,CAAE,KAAM,SAAU,aAAc,EAAM,EACtC,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,cAAe,EACvB,CAAE,KAAM,aAAc,aAAc,EAAM,EAC1C,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,QAAS,aAAc,EAAE,AAAC,EACrC,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,SAAU,EAClB,CAAE,KAAM,cAAe,EACvB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,SAAU,EAClB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,UAAW,EACtB,AACL,CAEJ,MAAK,EACD,MAAO,CACH,KAAM,EACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,MAAO,EACf,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,mBAAoB,aAAc,EAAM,EAChD,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,UAAW,EACnB,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,gBAAiB,EACzB,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,UAAW,EACtB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,OAAQ,EACnB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,YAAa,aAAc,EAAE,AAAC,EACtC,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,MAAO,EAClB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,aAAc,EAAE,AAAC,EACrC,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACpB,CAAE,KAAM,UAAW,EACtB,AACL,CAEJ,MAAK,GACD,MAAO,CACH,KAAM,GACN,WAAY,CACR,CAAE,KAAM,aAAc,EACtB,CAAE,KAAM,WAAY,EACvB,AACL,CAEJ,SACI,MAAO,CACH,KAAM,EACN,WAAY,EAAE,AAClB,CAER,CACJ,CACJ,CACO,IAAM,GAAa,IAAI,E,8GC5rBvB,OAAM,EACT,aAAc,CAIV,IAAI,CAAC,WAAW,CAAG,EAAE,AACzB,CACA,YAAY,CAAO,CAAE,CAAO,CAAE,CAC1B,IAAMH,EAAiB,SAAO,SAAqB,EAAS,KACtD,EAAiB,IAAI,CAAC,mBAAmB,CAACA,GAC1C,EAAS,IAAI,CAAC,kBAAkB,CAACA,EAAgB,EAAgB,GAYvE,OAXA,EAAe,OAAO,CAAC,IACnB,IAAM,EAAU,EAAc,OAAO,AACjC,AAAmB,WAAnB,OAAO,GAAwB,GAAW,SAAU,GAAW,SAAa,GAC5E,EAAO,OAAO,CAAC,GAGf,EAAO,IAAI,CAAC,EAEpB,GAGO,CACX,CAEA,kBAAkB,CAAI,CAAE,CACpB,MAAO,CAAE,YAAa,IAAI,CAAC,cAAc,EAAG,CAChD,CACA,gBAAiB,CACb,IAAM,EAAc,IAAI,IAAI,CAAC,WAAW,CAAC,CAEzC,OADA,IAAI,CAAC,WAAW,CAAG,EAAE,CACd,CACX,CACA,oBAAoB,CAAK,CAAE,CACvB,OAAO,EAAM,MAAM,CAACQ,EAAA,EAAc,EAAE,MAAM,CAACJ,GAAK,CAACA,EAAE,QAAQ,EACtD,GAAG,CAAC,GAAY,IAAI,CAAC,kBAAkB,CAAC,IAAW,OAAO,EACnE,CACA,mBAAmB,CAAQ,CAAE,CACzB,IAAM,EAAQ,SAAc,GACtB,EAAU,IAAI,CAAC,qBAAqB,CAAC,GAAS,IAAI,CAAC,oBAAoB,CAAC,GAAS,EACjF,EAAY,CACd,KAAM,EAAS,IAAI,CACnB,QAAS,CACb,EAQA,MAPI,AAAmB,YAAnB,OAAO,GACP,GAAU,WAAW,CAAG,EAAG,EAE3B,EAAS,MAAM,EAEf,GAAU,KAAK,CAAG,SAAa,GAAS,YAAa,CAAG,QAAO,EAE5D,CACX,CACA,sBAAsB,CAAK,CAAE,OACzB,EAAI,GAAM,KAAK,CAAC,QAAQ,CAAC,MAAQ,EAAM,KAAK,CAAC,QAAQ,CAAC,IAAG,KAIhD,GAAM,MAAM,CAAC,QAAQ,CAAC,QAAU,EAAM,MAAM,CAAC,QAAQ,CAAC,MAAK,CAOxE,CACA,qBAAqB,CAAK,CAAE,CACxB,IAAM,EAAc,AAAIW,OAAO,EAAO,EAAM,KAAK,CAAG,KACpD,MAAO,CAAC,EAAM,KACV,EAAY,SAAS,CAAG,EACL,EAAY,IAAI,CAAC,GAG5C,CACA,mBAAmB,CAAK,CAAEV,CAAc,CAAE,CAAO,CAAE,CAC/C,OAAO,EAEF,MAAM,CAACG,EAAA,EAAY,EACnB,OAAO,CAAC,GAAQ,SAAkB,GAAM,MAAM,CAACA,EAAA,EAAS,GACxD,QAAQ,CAACJ,GAAKA,EAAE,KAAK,EAAE,OAAO,GAE9B,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,KAAK,CAAC,MAAM,CAAG,EAAE,KAAK,CAAC,MAAM,EAC9C,GAAG,CAAC,GAAW,IAAI,CAAC,iBAAiB,CAAC,EAASC,EAAgB,EAAQ,SAAyC,KAAK,EAAI,EAAQ,eAAe,AAAD,GACxJ,CACA,kBAAkB,CAAO,CAAEA,CAAc,CAAE,CAAe,CAAE,CACxD,IAAM,EAAiB,IAAI,CAAC,mBAAmB,CAAC,EAAS,GACnD,EAAY,CACd,KAAM,EAAQ,KAAK,CACnB,QAAS,EACT,WAAY,IAAI,CAAC,aAAa,CAAC,EAASA,EAC5C,EAIA,MAHI,AAA0B,YAA1B,OAAO,GACP,GAAU,WAAW,CAAG,EAAG,EAExB,CACX,CACA,oBAAoB,CAAO,CAAE,CAAe,CAAE,CAC1C,OAAO,EACH,IAAIU,OAAO,SAA0B,EAAQ,KAAK,GAClD,EAAQ,KAAK,AACrB,CACA,cAAc,CAAO,CAAEV,CAAc,CAAE,CACnC,OAAOA,EAAe,MAAM,CAAC,CAAC,EAAY,KACtC,IAAM,EAAU,QAAqC,KAAK,EAAI,EAAM,OAAO,CAI3E,MAHI,AAAC,SAAyC,KAAK,EAAI,EAAQ,MAAM,AAAD,GAAM,SAAe,IAAM,EAAQ,MAAM,CAAG,IAAK,EAAQ,KAAK,GAC9H,EAAW,IAAI,CAAC,GAEb,CACX,EAAG,EAAE,CACT,CACJ,C,6CCjFW,EADA,E,qBAhCJ,OAAM,EACT,QAAQ,CAAK,CAAE,CAAO,CAAE,CACpB,IAAI,EAAU,EAAQ,aAAa,CAInC,GAHI,SAAiB,IACjB,GAAU,SAA0B,EAAO,EAE3C,SAAW,GAAU,CACrB,IAAM,EAAO,EAAQ,IAAI,CAAC,GAAG,CAC7B,GAAI,CAAC,EACD,MAAM,AAAIF,MAAM,2CAEpB,OAAO,IAAI,CAAC,YAAY,CAAC,EAAM,EAAO,EAC1C,CACA,OAAO,CACX,CAEA,aAAa,CAAI,CAAE,CAAK,CAAE,CAAO,CAAE,CAC/B,IAAI,EACJ,OAAQ,EAAK,IAAI,CAAC,WAAW,IACzB,IAAK,MAAO,OAAO,EAAe,UAAU,CAAC,EAC7C,KAAK,SAAU,OAAO,EAAe,aAAa,CAAC,EACnD,KAAK,KAAM,OAAO,EAAe,SAAS,CAAC,EAC/C,CACA,OAAQ,MAAC,GAAK,SAAY,EAAI,EAA+B,KAAK,EAAI,EAAG,WAAW,IAChF,IAAK,SAAU,OAAO,EAAe,aAAa,CAAC,EACnD,KAAK,UAAW,OAAO,EAAe,cAAc,CAAC,EACrD,KAAK,SAAU,OAAO,EAAe,aAAa,CAAC,EACnD,KAAK,OAAQ,OAAO,EAAe,WAAW,CAAC,EAC/C,SAAS,OAAO,CACpB,CACJ,CACJ,CAiBI,CAfO,EAyDR,GAAmB,GAAiB,CAAC,IA1CrB,aAAa,CAd5B,SAAuB,CAAK,EACxB,IAAI,EAAS,GACb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAG,EAAG,IAAK,CACvC,IAAM,EAAI,EAAM,MAAM,CAAC,EACnB,AAAM,QAAN,EAEA,GAAU,AAStB,SAAgC,CAAI,EAChC,OAAQ,GACJ,IAAK,IAAK,MAAO,IACjB,KAAK,IAAK,MAAO,IACjB,KAAK,IAAK,MAAO,IACjB,KAAK,IAAK,MAAO,IACjB,KAAK,IAAK,MAAO,GACjB,KAAK,IAAK,MAAO,IACjB,KAAK,IAAK,MAAO,IACjB,SAAS,OAAO,CACpB,CACJ,EArBuB,EAAM,MAAM,CAAC,EAAE,IAI1B,GAAU,CAElB,CACA,OAAO,CACX,EAsBA,EAAe,SAAS,CARxB,SAAmB,CAAK,QACpB,AAAI,AAAoB,MAApB,EAAM,MAAM,CAAC,GACN,EAAM,SAAS,CAAC,GAGhB,CAEf,EAKA,EAAe,UAAU,CAHzB,SAAoB,CAAK,EACrB,OAAOQ,SAAS,EACpB,EAKA,EAAe,aAAa,CAH5B,SAAuB,CAAK,EACxB,OAAO2B,OAAO,EAClB,EAKA,EAAe,WAAW,CAH1B,SAAqB,CAAK,EACtB,OAAO,IAAId,KAAK,EACpB,EAKA,EAAe,aAAa,CAH5B,SAAuB,CAAK,EACxB,OAAOjB,OAAO,EAClB,EAKA,EAAe,cAAc,CAH7B,SAAwB,CAAK,EACzB,MAAO,AAAwB,SAAxB,EAAM,WAAW,EAC5B,C,uBC1FG,SAAS,EAAU,CAAG,EACzB,MAAO,AAAe,UAAf,OAAO,GAAoB,AAAQ,OAAR,GAAgB,AAAqB,UAArB,OAAO,EAAI,KAAK,AACtE,CACO,SAASC,EAAY,CAAG,EAC3B,MAAO,AAAe,UAAf,OAAO,GAAoB,AAAQ,OAAR,GAAgB,AAAwB,UAAxB,OAAO,EAAI,QAAQ,AACzE,CACO,SAAS,EAAqB,CAAG,EACpC,MAAO,AAAe,UAAf,OAAO,GAAoB,AAAQ,OAAR,GAC3B,AAAoB,UAApB,OAAO,EAAI,IAAI,EACf,AAAoB,UAApB,OAAO,EAAI,IAAI,EACf,AAAoB,UAApB,OAAO,EAAI,IAAI,AAC1B,CACO,SAAS,EAAe,CAAG,EAC9B,MAAO,AAAe,UAAf,OAAO,GAAoB,AAAQ,OAAR,GAC3B,EAAU,EAAI,SAAS,GACvBA,EAAY,EAAI,SAAS,GACzB,AAAuB,UAAvB,OAAO,EAAI,OAAO,AAC7B,C,gFAKO,OAAM,EACT,aAAc,CACV,IAAI,CAAC,QAAQ,CAAG,CAAC,EACjB,IAAI,CAAC,WAAW,CAAG,CAAC,CACxB,CACA,WAAW,CAAI,CAAEH,CAAI,CAAE,CACnB,OAAO,EAAU,IAAS,IAAI,CAAC,SAAS,CAAC,EAAK,KAAK,CAAEA,EACzD,CACA,UAAU,CAAO,CAAE,CAAS,CAAE,CAC1B,GAAI,IAAY,EACZ,MAAO,GAEX,IAAI,EAAS,IAAI,CAAC,QAAQ,CAAC,EAAQ,AAC/B,CAAC,GACD,GAAS,IAAI,CAAC,QAAQ,CAAC,EAAQ,CAAG,CAAC,GAEvC,IAAM,EAAW,CAAM,CAAC,EAAU,CAClC,GAAI,AAAa,SAAb,EACA,OAAO,CAEN,EACD,IAAM,EAAS,IAAI,CAAC,gBAAgB,CAAC,EAAS,GAE9C,OADA,CAAM,CAAC,EAAU,CAAG,EACb,CACX,CACJ,CACA,eAAe,CAAI,CAAE,CACjB,IAAM,EAAW,IAAI,CAAC,WAAW,CAAC,EAAK,CACvC,GAAI,EACA,OAAO,CAEN,EACD,IAAM,EAAW,IAAI,CAAC,WAAW,GAC3B,EAAQ,EAAE,CAChB,IAAK,IAAM,KAAmB,EACtB,IAAI,CAAC,SAAS,CAAC,EAAiB,IAChC,EAAM,IAAI,CAAC,GAInB,OADA,IAAI,CAAC,WAAW,CAAC,EAAK,CAAG,EAClB,CACX,CACJ,CACJ,CACO,SAAS,EAAmB,CAAI,EACnC,MAAO,AAAgB,UAAhB,OAAO,GAAqB,AAAS,OAAT,GAAiBH,MAAM,OAAO,CAAC,EAAK,OAAO,CAClF,CACO,SAAS,EAAc,CAAI,EAC9B,MAAO,AAAgB,UAAhB,OAAO,GAAqB,AAAS,OAAT,GAAiB,AAA0B,UAA1B,OAAO,EAAK,SAAS,AAC7E,CACO,SAAS,EAAc,CAAI,EAC9B,OAAO,EAAmB,IAAS,AAAyB,UAAzB,OAAO,EAAK,QAAQ,AAC3D,C,sJCnEO,SAAS,EAAuB,CAAI,EACvC,IAAK,GAAM,CAAC,EAAM,EAAM,GAAID,OAAO,OAAO,CAAC,GACnC,CAAC,EAAK,UAAU,CAAC,OACbC,MAAM,OAAO,CAAC,GACd,EAAM,OAAO,CAAC,CAAC,EAAMM,KACb,SAAU,KACV,EAAK,UAAU,CAAG,EAClB,EAAK,kBAAkB,CAAG,EAC1B,EAAK,eAAe,CAAGA,EAE/B,GAEK,SAAU,KACf,EAAM,UAAU,CAAG,EACnB,EAAM,kBAAkB,CAAG,GAI3C,CAMO,SAAS,EAAmB,CAAI,CAAEH,CAAa,EAClD,IAAI,EAAO,EACX,KAAO,GAAM,CACT,GAAIA,EAAc,GACd,OAAO,EAEX,EAAO,EAAK,UAAU,AAC1B,CAEJ,CAqBO,SAAS,EAAY,CAAI,EAE5B,IAAM,EAAS,AADE,EAAa,GACN,SAAS,CACjC,GAAI,CAAC,EACD,MAAM,AAAIF,MAAM,6BAEpB,OAAO,CACX,CAIO,SAAS,EAAa,CAAI,EAC7B,KAAO,EAAK,UAAU,EAClB,EAAO,EAAK,UAAU,CAE1B,OAAO,CACX,CAKO,SAAS,EAAe,CAAI,CAAE,CAAO,EACxC,GAAI,CAAC,EACD,MAAM,AAAIA,MAAM,4BAEpB,IAAMH,EAAQ,QAAyC,KAAK,EAAI,EAAQ,KAAK,CAC7E,OAAO,IAAI,GAAU,CAAC,IAAO,EACzB,KAAMC,OAAO,IAAI,CAAC,GAClB,SAAU,EACV,WAAY,CAChB,GAAI,IACA,KAAO,EAAM,QAAQ,CAAG,EAAM,IAAI,CAAC,MAAM,EAAE,CACvC,IAAM,EAAW,EAAM,IAAI,CAAC,EAAM,QAAQ,CAAC,CAC3C,GAAI,CAAC,EAAS,UAAU,CAAC,KAAM,CAC3B,IAAM,EAAQ,CAAI,CAAC,EAAS,CAC5B,GAAI,SAAU,GAEV,IADA,EAAM,QAAQ,GACV,EAAiB,EAAOD,GACxB,MAAO,CAAE,KAAM,GAAO,OAAM,CAChC,MAEC,GAAIE,MAAM,OAAO,CAAC,GAAQ,CAC3B,KAAO,EAAM,UAAU,CAAG,EAAM,MAAM,EAAE,CAEpC,IAAME,EAAU,CAAK,CADP,EAAM,UAAU,GACF,CAC5B,GAAI,SAAUA,IAAY,EAAiBA,EAASJ,GAChD,MAAO,CAAE,KAAM,GAAO,MAAOI,CAAQ,CAE7C,CACA,EAAM,UAAU,CAAG,CACvB,CACJ,CACA,EAAM,QAAQ,EAClB,CACA,OAAO,IAAW,AACtB,EACJ,CAKO,SAAS,EAAkB,CAAI,CAAE,CAAO,EAC3C,GAAI,CAAC,EACD,MAAM,AAAID,MAAM,iCAEpB,OAAO,IAAI,IAAc,CAAC,EAAM,GAAQ,EAAe,EAAM,GACjE,CAKO,SAAS,EAAU,CAAI,CAAE,CAAO,EACnC,GAAK,EAGA,IAAI,AAAC,SAAyC,KAAK,EAAI,EAAQ,KAAK,AAAD,GAAM,CAAC,EAAiB,EAAM,EAAQ,KAAK,EAE/G,OAAO,IAAI,IAAc,CAAC,EAAM,IAAM,EAAE,CAC5C,MALI,MAAM,AAAIA,MAAM,iCAMpB,OAAO,IAAI,IAAc,CAAC,EAAM,GAAQ,EAAe,EAAM,GAAU,CAAE,YAAa,EAAK,EAC/F,CACA,SAAS,EAAiB,CAAO,CAAE,CAAK,EACpC,IAAI,EACJ,GAAI,CAAC,EACD,MAAO,GAEX,IAAMsB,EAAY,MAAC,GAAK,EAAQ,QAAQ,AAAD,EAA+B,KAAK,EAAI,EAAG,KAAK,OACvF,CAAI,CAACA,GAGE,SAAQA,EAAW,EAC9B,CAKO,SAAS,EAAiB,CAAI,EACjC,OAAO,IAAI,GAAU,CAAC,IAAO,EACzB,KAAMxB,OAAO,IAAI,CAAC,GAClB,SAAU,EACV,WAAY,CAChB,GAAI,IACA,KAAO,EAAM,QAAQ,CAAG,EAAM,IAAI,CAAC,MAAM,EAAE,CACvC,IAAM,EAAW,EAAM,IAAI,CAAC,EAAM,QAAQ,CAAC,CAC3C,GAAI,CAAC,EAAS,UAAU,CAAC,KAAM,CAC3B,IAAM,EAAQ,CAAI,CAAC,EAAS,CAC5B,GAAI,SAAY,GAEZ,OADA,EAAM,QAAQ,GACP,CAAE,KAAM,GAAO,MAAO,CAAE,UAAW,EAAO,UAAW,EAAM,UAAS,CAAE,EAE5E,GAAIC,MAAM,OAAO,CAAC,GAAQ,CAC3B,KAAO,EAAM,UAAU,CAAG,EAAM,MAAM,EAAE,CACpC,IAAM,EAAQ,EAAM,UAAU,GACxB,EAAU,CAAK,CAAC,EAAM,CAC5B,GAAI,SAAY,GACZ,MAAO,CAAE,KAAM,GAAO,MAAO,CAAE,UAAW,EAAS,UAAW,EAAM,WAAU,OAAM,CAAE,CAE9F,CACA,EAAM,UAAU,CAAG,CACvB,CACJ,CACA,EAAM,QAAQ,EAClB,CACA,OAAO,IAAW,AACtB,EACJ,CAwBO,SAAS,EAA0B,CAAU,CAAE,CAAI,EAGtD,IAAK,IAAM,KAAY,AAFF,EAAW,eAAe,CAAC,EAAK,KAAK,EAEtB,UAAU,CAEtC,AAA0B,SAA1B,EAAS,YAAY,EAAkB,AAA+B,SAA/B,AAH3B,CAGsC,CAAC,EAAS,IAAI,CAAC,EACjE,CAJY,CAID,CAAC,EAAS,IAAI,CAAC,CAAG,AAIzC,SAAS,EAAiB,CAAY,SAClC,AAAIA,MAAM,OAAO,CAAC,GACP,IAAI,EAAa,GAAG,CAAC,GAAkB,CAGvC,CAEf,EAX0D,EAAS,YAAY,EAG/E,C,oGC9JW,EADA,E,qBAtDJ,SAAS,EAAU,CAAI,EAC1B,OAAO,IAAI,IAAc,CAAC,EAAME,GAC5B,AAAI,SAAmBA,GACZA,EAAQ,OAAO,CAGf,EAAE,CAEd,CAAE,YAAa,EAAK,EAC3B,CAUO,SAAS,EAAY,CAAK,CAAE,CAAM,EACrC,KAAO,EAAM,SAAS,EAElB,GAAI,AADJ,GAAQ,EAAM,SAAS,AAAD,IACR,EACV,MAAO,GAGf,MAAO,EACX,CACO,SAAS,EAAa,CAAK,EAG9B,MAAO,CACH,MAAO,CACH,UAAW,EAAM,WAAW,CAAG,EAC/B,KAAM,EAAM,SAAS,CAAG,CAC5B,EACA,IAAK,CACD,UAAW,EAAM,SAAS,CAC1B,KAAM,EAAM,OAAO,CAAG,CAC1B,CACJ,CACJ,CACO,SAAS,EAAkB,CAAI,EAClC,GAAI,CAAC,EACD,OAEJ,GAAM,CAAE,QAAM,CAAE,KAAG,CAAE,OAAK,CAAE,CAAG,EAC/B,MAAO,CACH,QACA,SACA,MACA,OAAQ,EAAM,CAClB,CACJ,CAgCO,SAAS,EAAQ,CAAK,CAAEC,CAAE,EAE7B,OAAO,AADY,AAvBhB,SAAsB,CAAK,CAAEA,CAAE,EAClC,GAAI,EAAM,GAAG,CAAC,IAAI,CAAGA,EAAG,KAAK,CAAC,IAAI,EAAK,EAAM,GAAG,CAAC,IAAI,GAAKA,EAAG,KAAK,CAAC,IAAI,EAAI,EAAM,GAAG,CAAC,SAAS,EAAIA,EAAG,KAAK,CAAC,SAAS,CAChH,OAAO,EAAgB,MAAM,CAE5B,GAAI,EAAM,KAAK,CAAC,IAAI,CAAGA,EAAG,GAAG,CAAC,IAAI,EAAK,EAAM,KAAK,CAAC,IAAI,GAAKA,EAAG,GAAG,CAAC,IAAI,EAAI,EAAM,KAAK,CAAC,SAAS,EAAIA,EAAG,GAAG,CAAC,SAAS,CACrH,OAAO,EAAgB,KAAK,CAEhC,IAAM,EAAc,EAAM,KAAK,CAAC,IAAI,CAAGA,EAAG,KAAK,CAAC,IAAI,EAAK,EAAM,KAAK,CAAC,IAAI,GAAKA,EAAG,KAAK,CAAC,IAAI,EAAI,EAAM,KAAK,CAAC,SAAS,EAAIA,EAAG,KAAK,CAAC,SAAS,CACpI,EAAY,EAAM,GAAG,CAAC,IAAI,CAAGA,EAAG,GAAG,CAAC,IAAI,EAAK,EAAM,GAAG,CAAC,IAAI,GAAKA,EAAG,GAAG,CAAC,IAAI,EAAI,EAAM,GAAG,CAAC,SAAS,EAAIA,EAAG,GAAG,CAAC,SAAS,QAC5H,AAAI,GAAe,EACR,EAAgB,MAAM,CAExB,EACE,EAAgB,WAAW,CAE7B,EACE,EAAgB,YAAY,CAG5B,EAAgB,OAAO,AAEtC,EAEoC,EAAOA,GACnB,EAAgB,KAAK,AAC7C,CAhCI,CADO,EAOR,GAAoB,GAAkB,CAAC,GANvB,CAAC,EAAgB,MAAS,CAAG,EAAE,CAAG,SACjD,CAAe,CAAC,EAAgB,KAAQ,CAAG,EAAE,CAAG,QAChD,CAAe,CAAC,EAAgB,YAAe,CAAG,EAAE,CAAG,eACvD,CAAe,CAAC,EAAgB,WAAc,CAAG,EAAE,CAAG,cACtD,CAAe,CAAC,EAAgB,MAAS,CAAG,EAAE,CAAG,SACjD,CAAe,CAAC,EAAgB,OAAU,CAAG,EAAE,CAAG,UA8B/C,IAAM,EAAoB,eAoB1B,SAASkC,EAAgB,CAAO,CAAE,CAAY,EACjD,GAAI,EAAS,CACT,IAAM,EAAW,AAwFlB,SAAyB,CAAI,CAAE,EAAS,EAAI,EAC/C,KAAO,EAAK,SAAS,EAAE,CACnB,IAAM,EAAS,EAAK,SAAS,CACzB,EAAQ,EAAO,OAAO,CAAC,OAAO,CAAC,GACnC,KAAO,EAAQ,GAAG,CACd,IACA,IAAM,EAAW,EAAO,OAAO,CAAC,EAAM,CACtC,GAAI,GAAU,CAAC,EAAS,MAAM,CAC1B,OAAO,CAEf,CACA,EAAO,CACX,CAEJ,EAtGyC,EAAS,IAC1C,GAAI,GAAY,EAAc,EAAU,GACpC,OAAO,EAEX,GAAI,SAAc,GAAU,CAGxB,IAAM,EAAW,EAAQ,OAAO,CAAC,SAAS,CAACnC,GAAK,CAACA,EAAE,MAAM,EACzD,IAAK,IAAI,EAAI,EAAW,EAAG,GAAK,EAAG,IAAK,CACpC,IAAM,EAAQ,EAAQ,OAAO,CAAC,EAAE,CAChC,GAAI,EAAc,EAAO,GACrB,OAAO,CAEf,CACJ,CACJ,CAEJ,CACO,SAAS,EAAc,CAAO,CAAE,CAAY,EAC/C,MAAO,SAAc,IAAY,EAAa,QAAQ,CAAC,EAAQ,SAAS,CAAC,IAAI,CACjF,C,gDC3IO,OAAM,UAA0BD,MACnC,YAAY,CAAI,CAAE,CAAO,CAAE,CACvB,KAAK,CAAC,EAAO,CAAC,EAAE,EAAQ,IAAI,EAAE,EAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,EAAK,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAG,EAC1F,CACJ,CACO,SAAS,EAAkB,CAAC,EAC/B,MAAM,AAAIA,MAAM,0CACpB,C,kJCwYO,SAAS,EAAYE,CAAI,MACxB,EAkBsB,EACtB,EAlBJ,GAAI,IAAgB,CAACA,GACjB,OAAO,EAAeA,GAAQA,EAAK,IAAI,CAAG,MAAC,GAAK,EAAoBA,EAAI,EAA+B,EAAKA,EAAK,IAAI,CAEpH,GAAI,IAAe,CAACA,IAAS,IAAU,CAACA,IAAS,IAAgB,CAACA,GACnE,OAAOA,EAAK,IAAI,CAEf,GAAI,IAAY,CAACA,GAAO,CACzB,IAAM,EAYV,AAAI,CAFsB,EAVWA,GAY1B,YAAY,CACZ,EAAO,YAAY,CAAC,IAAI,CAE1B,OAAC,GAAK,EAAO,IAAI,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,AAAD,EAC3D,EAAY,EAAO,IAAI,CAAC,GAAG,SAflC,GAAI,EACA,OAAO,CAEf,MACK,GAAI,IAAkB,CAACA,GACxB,OAAOA,EAAK,IAAI,AAEpB,OAAM,AAAIF,MAAM,kCACpB,C,wEAtYO,SAAS,EAAqB,CAAO,CAAE,CAAY,EACtD,IAAMH,EAAY,IAAIc,IAChB,EAlBC,AAkBwB,EAlBhB,KAAK,CAAC,IAAI,CAACV,GAAK,IAAgB,CAACA,IAAMA,EAAE,KAAK,EAmB7D,GAAI,CAAC,EACD,OAAO,IAAIU,IAAI,EAAQ,KAAK,EAGhC,IAAK,IAAM,IADU,CAAC,EAAU,CAAC,MAAM,CAhBhC,AAgBgD,EAhBxC,KAAK,CAAC,MAAM,CAAC,AAACV,GAAM,IAAkB,CAACA,IAAMA,EAAE,MAAM,IAkBhE,AAUR,SAAS,EAAQ,CAAI,CAAE,CAAU,CAAE,CAAY,EAC3C,EAAW,GAAG,CAAC,EAAK,IAAI,EACxB,GAAAsB,EAAA,IAAkB,GAAM,OAAO,CAAC,IAC5B,GAAI,IAAc,CAAC,IAAU,GAAgB,IAAsB,CAAC,GAAQ,CACxE,IAAM,EAAU,EAAK,IAAI,CAAC,GAAG,AACzB,IAAW,CAAC,EAAW,GAAG,CAAC,EAAQ,IAAI,GACvC,EAAQ,EAAS,EAAY,EAErC,CACJ,EACJ,EApBgB,EAAM1B,EAAW,GAE7B,IAAM,EAAQ,IAAIc,IAClB,IAAK,IAAM,KAAQ,EAAQ,KAAK,CACxBd,CAAAA,EAAU,GAAG,CAAC,EAAK,IAAI,GAAM,IAAkB,CAAC,IAAS,EAAK,MAAM,GACpE,EAAM,GAAG,CAAC,GAGlB,OAAO,CACX,CAoBO,SAAS,EAA0B,CAAQ,EAC9C,GAAI,EAAS,QAAQ,CACjB,OAAO,EAAS,QAAQ,CAEvB,GAAI,EAAS,IAAI,CAAC,GAAG,CAAE,CACxB,IAAM,EAAgB,EAAmB,EAAS,IAAI,CAAC,GAAG,EAC1D,OAAO,QAAqD,KAAK,EAAI,EAAc,QAAQ,AAC/F,CAEJ,CAMO,SAAS,EAAkB,CAAY,EAC1C,OAAO,EAAa,MAAM,EAAI,CAAC,SAAa,EAAc,GAC9D,CAOO,SAAS,EAAqB,CAAI,CAAE,CAAQ,SAC/C,AAAI,AAAC,GAAS,EAGP,EAA6B,EAAM,EAAU,EAAK,OAAO,CAAE,IAFvD,EAAE,AAGjB,CAUO,SAASuC,EAAoB,CAAI,CAAE,CAAQ,CAAE,CAAK,EACrD,GAAI,CAAC,GAAQ,CAAC,EACV,OAEJ,IAAMd,EAAQ,EAA6B,EAAM,EAAU,EAAK,OAAO,CAAE,IACzE,GAAIA,AAAiB,IAAjBA,EAAM,MAAM,CAShB,OALI,EADA,AAAU,SAAV,EACQN,KAAK,GAAG,CAAC,EAAGA,KAAK,GAAG,CAAC,EAAOM,EAAM,MAAM,CAAG,IAG3C,EAELA,CAAK,CAAC,EAAM,AACvB,CACA,SAAS,EAA6B,CAAI,CAAE,CAAQ,CAAE,CAAO,CAAE,CAAK,EAChE,GAAI,CAAC,EAAO,CACR,IAAM,EAAc,SAAmB,EAAK,aAAa,CAAE,IAAgB,EAC3E,GAAI,GAAe,EAAY,OAAO,GAAK,EACvC,MAAO,CAAC,EAAK,AAErB,OACA,AAAI,SAAmB,IAAS,EAAK,OAAO,GAAK,EACtC,EAAK,OAAO,CAAC,OAAO,CAACrB,GAAK,EAA6BA,EAAG,EAAU,EAAS,KAEjF,EAAE,AACb,CAsBO,SAAS,EAAmB,CAAI,CAAE,CAAO,CAAE,CAAK,EACnD,GAAI,CAAC,EACD,OAEJ,IAAMqB,EAAQ,AAYX,SAAqC,CAAI,CAAE,CAAO,CAAE,CAAO,MAQ1D,EAPJ,GAAI,EAAK,OAAO,GAAK,EACjB,MAAO,EAAE,CAEb,GAAI,IAAa,CAAC,EAAK,aAAa,GAAK,EAAK,aAAa,CAAC,KAAK,GAAK,EAClE,MAAO,CAAC,EAAK,CAEjB,IAAM,EAAe,SAAU,GAAM,QAAQ,GAEvC,EAAe,EAAE,CACvB,GAEI,GAAI,CAAC,AADL,GAAS,EAAa,IAAI,EAAC,EACf,IAAI,CAAE,CACd,IAAM,EAAY,EAAO,KAAK,AAC1B,GAAU,OAAO,GAAK,EAClB,IAAa,CAAC,EAAU,aAAa,GAAK,EAAU,aAAa,CAAC,KAAK,GAAK,GAC5E,EAAa,IAAI,CAAC,GAItB,EAAa,KAAK,EAE1B,OACK,CAAC,EAAO,IAAI,CAAE,CACvB,OAAO,CACX,EArC8C,EAAM,EAAS,QAAmC,KAAK,EAAI,EAAK,OAAO,EACjH,GAAIA,AAAiB,IAAjBA,EAAM,MAAM,CAShB,OALI,EADA,AAAU,SAAV,EACQN,KAAK,GAAG,CAAC,EAAGA,KAAK,GAAG,CAAC,EAAOM,EAAM,MAAM,CAAG,IAG3C,EAELA,CAAK,CAAC,EAAM,AACvB,CAiCO,SAAS,EAAe,CAAO,EAClC,IAAI,EACJ,IAAM,EAAU,EAAQ,OAAO,CAG/B,KAAO,IAAa,OAAC,GAAK,EAAQ,SAAS,AAAD,EAA+B,KAAK,EAAI,EAAG,OAAO,AAAD,GAAI,CAC3F,IAAM,EAAa,SAAmB,EAAQ,aAAa,CAAE,IAAgB,EAC7E,GAAI,EACA,OAAO,EAEX,EAAU,EAAQ,SAAS,AAC/B,CAEJ,CAMO,SAAS,EAAmB,CAAI,EACnC,IAAI,EAAY,EAehB,OAdI,IAAkB,CAAC,KAEf,IAAY,CAAC,EAAU,UAAU,EAEjC,EAAY,EAAU,UAAU,CAAC,UAAU,CAEtC,IAAgB,CAAC,EAAU,UAAU,EAE1C,EAAY,EAAU,UAAU,CAGhC,QAAkB,EAAU,UAAU,GAGvC,AAEX,SAAS,EAA2BpB,CAAI,CAAE,CAAS,CAAE,CAAK,EACtD,IAAI,EAEJ,SAAS,EAAG,CAAI,CAAE,CAAO,EACrB,IAAI,EAOJ,MAJI,AAFqB,SAAmB,EAAM,IAAgB,GAG9D,GAAkB,EAA2B,EAAS,EAAS,EAAK,EAExE,EAAM,GAAG,CAACA,EAAM,GACT,CACX,CACA,GAAI,EAAM,GAAG,CAACA,GACV,OAAO,EAAM,GAAG,CAACA,GAGrB,IAAK,IAAM,KADX,EAAM,GAAG,CAACA,EAAM,QACG,GAAAqB,EAAA,IAAkB,IACjC,GAAI,IAAgB,CAAC,IAAS,AAA+B,SAA/B,EAAK,OAAO,CAAC,WAAW,GAElD,OADA,EAAM,GAAG,CAACrB,EAAM,GACT,OAEN,GAAI,IAAc,CAAC,IAAS,IAAgB,CAAC,EAAK,IAAI,CAAC,GAAG,EAC3D,OAAO,EAAG,EAAM,EAAK,IAAI,CAAC,GAAG,OAE5B,GAAI,IAAgB,CAAC,IAAU,OAAC,GAAK,EAAK,OAAO,AAAD,EAA+B,KAAK,EAAI,EAAG,GAAG,AAAD,EAC9F,OAAO,EAAG,EAAM,EAAK,OAAO,CAAC,GAAG,CAI5C,EAhCsC,EAAM,EAAW,IAAIwB,IAC3D,CAsEO,SAAS,EAAe,CAAI,EAC/B,OAAO,AAEX,SAAS,EAAuB,CAAI,CAAE,CAAO,EACzC,GAAI,EAAQ,GAAG,CAAC,GACZ,MAAO,GAKX,IAAK,IAAMJ,KAFP,EAAQ,GAAG,CAAC,GAEG,GAAAC,EAAA,IAAkB,IACjC,GAAI,IAAc,CAACD,GACf,IAAI,CAACA,EAAK,IAAI,CAAC,GAAG,EAId,IAAgB,CAACA,EAAK,IAAI,CAAC,GAAG,GAAK,CAAC,EAAuBA,EAAK,IAAI,CAAC,GAAG,CAAE,GAF1E,MAAO,EACX,MAKC,GAAI,IAAgB,CAACA,GACtB,MAAO,QAEN,GAAI,IAAY,CAACA,GAClB,MAAO,GAGf,MAAO,EAAQ,EAAK,UAAU,AAClC,EA3BkC,EAAM,IAAIX,IAC5C,CAsEO,SAAS,EAAoB,CAAI,EACpC,GAAI,EAAK,YAAY,CACjB,OAAO,EAAK,YAAY,CAAC,IAAI,CAE5B,GAAI,EAAK,QAAQ,CAClB,OAAO,EAAK,QAAQ,CAEnB,GAAI,EAAK,UAAU,CAAE,CACtB,IAAM,EAAU,EAAK,UAAU,CAAC,GAAG,CACnC,GAAI,EAEA,IAAI,IAAgB,CAAC,GACjB,OAAO,EAAQ,IAAI,MAElB,GAAI,IAAe,CAAC,IAAY,IAAU,CAAC,GAC5C,OAAO,EAAQ,IAAI,AACvB,CAER,CAEJ,CAqDO,SAAS,EAAY,CAAI,EAC5B,IAAI,EAAI,EAAI,SACZ,AAAI,IAAkB,CAAC,GACZ,MAAC,GAAK,MAAC,GAAK,EAAK,IAAI,AAAD,EAA+B,KAAK,EAAI,EAAG,IAAI,AAAD,EAA+B,EAAK,SAGtG,MAAC,GAAK,EAAoB,EAAI,EAA+B,EAAK,EAAK,IAAI,AAE1F,CACO,SAAS,EAAc,CAAY,EACtC,IAAM,EAAQ,CACV,EAAG,GACH,EAAG,GACH,EAAG,EACP,EAGA,OAAO,IAAIC,OAFI,AAMnB,SAAS,EAAuB,CAAO,CAAE,CAAK,MAmDT,EAMP,EAkBC,EANH,EAND,EA9DvB,GAAI,IAA0B,CAAC,GAC3B,QAkDG,EAAgB,CADU,EAjDM,GAkDH,QAAQ,CAAC,GAAG,CAAC,GAAK,EAAuB,IAAI,IAAI,CAAC,KAAM,CACxF,YAAa,EAAa,WAAW,CACrC,UAAW,EAAa,SAAS,AACrC,EArD+C,CAE1C,GAAI,IAAmB,CAAC,GACzB,QAqDG,EAAgB,CADG,EApDM,GAqDH,QAAQ,CAAC,GAAG,CAAC,GAAK,EAAuB,IAAI,IAAI,CAAC,IAAK,CAChF,YAAa,EAAM,WAAW,CAC9B,UAAW,EAAM,SAAS,AAC9B,EAxDwC,CAEnC,GAAI,IAAoB,CAAC,GAC1B,OAoEJ,AAAI,CADuB,EAnEM,GAoEvB,KAAK,CACJ,EAAgB,CAAC,CAAC,EAAE,EAAe,EAAM,IAAI,EAAE,CAAC,EAAE,EAAe,EAAM,KAAK,EAAE,CAAC,CAAC,CAAE,CACrF,YAAa,EAAM,WAAW,CAC9B,UAAW,EAAM,SAAS,CAC1B,KAAM,EACV,GAEG,EAAgB,EAAe,EAAM,IAAI,EAAG,CAC/C,YAAa,EAAM,WAAW,CAC9B,UAAW,EAAM,SAAS,CAC1B,KAAM,EACV,EA/EyC,CAEpC,GAAI,IAAsB,CAAC,GAAU,CACtC,IAAMf,EAAO,EAAQ,IAAI,CAAC,GAAG,CAC7B,GAAI,CAACA,EACD,MAAM,AAAIG,MAAM,2BAEpB,OAAO,EAAgB,EAAuBH,EAAK,UAAU,EAAG,CAC5D,YAAa,EAAQ,WAAW,CAChC,UAAW,EAAQ,SAAS,AAChC,EACJ,CACK,GAAI,IAAkB,CAAC,GACxB,QAgDoB,EAhDM,EAiDvB,EAAgB,CAAC,GAAG,EAAE,EAAuB,EAAO,QAAQ,EAAE,CAAC,EAAE,EAAS,EAAE,CAAC,CAAE,CAClF,YAAa,EAAO,WAAW,CAC/B,UAAW,EAAO,SAAS,AAC/B,EApDsC,MAEjC,GAAI,IAAgB,CAAC,GACtB,QAuCmB,EAvCM,EAwCtB,EAAgB,CAAC,EAAE,EAAS,EAAE,EAAE,EAAuB,EAAM,QAAQ,EAAE,CAAC,CAAE,CAC7E,YAAa,EAAM,WAAW,CAC9B,UAAW,EAAM,SAAS,AAC9B,EA3CqC,MAEhC,GAAI,IAAgB,CAAC,GAAU,CAChC,IAAM,EAAY,EAAQ,KAAK,CAAC,WAAW,CAAC,KACtC,EAAS,EAAQ,KAAK,CAAC,SAAS,CAAC,EAAG,GACpC,EAAa,EAAQ,KAAK,CAAC,SAAS,CAAC,EAAY,GAMvD,OALI,IACA,EAAM,CAAC,CAAG,EAAW,QAAQ,CAAC,KAC9B,EAAM,CAAC,CAAG,EAAW,QAAQ,CAAC,KAC9B,EAAM,CAAC,CAAG,EAAW,QAAQ,CAAC,MAE3B,EAAgB,EAAQ,CAC3B,YAAa,EAAQ,WAAW,CAChC,UAAW,EAAQ,SAAS,CAC5B,KAAM,EACV,EACJ,MACK,GAAI,IAAc,CAAC,GACpB,OAAO,EAAgB,EAAU,CAC7B,YAAa,EAAQ,WAAW,CAChC,UAAW,EAAQ,SAAS,AAChC,QAGA,MAAM,AAAIG,MAAM,CAAC,0BAA0B,EAAE,QAAyC,KAAK,EAAI,EAAQ,KAAK,CAAC,CAAC,CAEtH,EAxD0C,EAAa,UAAU,CAAE,GAC9CF,OAAO,OAAO,CAAC,GAAO,MAAM,CAAC,CAAC,EAAG,EAAM,GAAK,GAAO,GAAG,CAAC,CAAC,CAAC,EAAK,GAAK,GAAM,IAAI,CAAC,IAEnG,CAEA,IAAM,EAAW,SAAS,MAAM,CA0FhC,SAAS,EAAe,CAAO,EAC3B,MAAO,SAAa,EAAQ,KAAK,CACrC,CACA,SAAS,EAAgB,CAAK,CAAE,CAAO,EACnC,IAAI,QAIJ,CAHI,CAAiB,KAAjB,EAAQ,IAAI,EAAc,EAAQ,SAAS,AAAD,GAC1C,GAAQ,CAAC,CAAC,EAAE,MAAC,GAAK,EAAQ,SAAS,AAAD,EAA+B,EAAK,GAAG,EAAE,EAAM,CAAC,CAAC,AAAD,EAElF,EAAQ,WAAW,EACZ,CAAC,EAAE,EAAM,EAAE,EAAQ,WAAW,CAAC,CAAC,CAEpC,CACX,C,sGC5jBO,IAAM,EAAiB,UACxB,EAAe,IAAI,GAAY,AAcrC,OAAM,UAA8B,GAAiB,CACjD,aAAc,CACV,KAAK,IAAIqB,WACT,IAAI,CAAC,UAAU,CAAG,GAClB,IAAI,CAAC,cAAc,CAAG,EAAE,CACxB,IAAI,CAAC,SAAS,CAAG,EACrB,CACA,IAAI,UAAW,CACX,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GACpC,CACA,MAAM,CAAK,CAAE,CACT,IAAI,CAAC,SAAS,CAAG,GACjB,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,WAAW,CAAG,GACnB,IAAI,CAAC,UAAU,CAAG,GAClB,IAAI,CAAC,cAAc,CAAG,EAAE,AAC5B,CACA,WAAW,CAAI,CAAE,CACT,EAAK,UAAU,GACf,IAAI,CAAC,UAAU,CAAG,GAClB,IAAI,CAAC,cAAc,CAAG,EAAE,CAEhC,CACA,eAAe,CAAI,CAAE,CACjB,IAAM,EAAOhB,OAAO,YAAY,CAAC,EAAK,KAAK,EAI3C,GAHI,AAAC,IAAI,CAAC,SAAS,EAAI,AAAS,OAAT,GACnB,KAAI,CAAC,SAAS,CAAG,EAAG,EAEpB,EAAK,UAAU,CACf,IAAI,CAAC,UAAU,CAAG,GAClB,IAAI,CAAC,cAAc,CAAG,EAAE,KAEvB,CACD,IAAMF,EAAc,EAAa,GACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAACA,GACrB,IAAI,CAAC,UAAU,EACf,KAAI,CAAC,WAAW,EAAIA,CAAU,CAEtC,CACJ,CACA,SAAS,CAAI,CAAE,CACX,GAAI,CAAC,IAAI,CAAC,SAAS,CAAE,CAEjB,IAAM,EAAQ,IAAIW,OADN,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAK,GAAG,CAAC,KAAK,CAAE,EAAK,GAAG,CAAC,GAAG,EAE7D,KAAI,CAAC,SAAS,CAAG,EAAQ,KAAK,KAAK,CAAC,EACxC,CACA,GAAI,EAAK,UAAU,CACf,IAAI,CAAC,UAAU,CAAG,GAClB,IAAI,CAAC,cAAc,CAAG,EAAE,KAEvB,CACD,IAAM,EAAM,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAK,GAAG,CAAC,KAAK,CAAE,EAAK,GAAG,CAAC,GAAG,EAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,UAAU,EACf,KAAI,CAAC,WAAW,EAAI,CAAE,CAE9B,CACJ,CACA,cAAc,CAAI,CAAE,CACE,UAAd,EAAK,IAAI,EAIL,AADU,EACJ,UAAU,EAIxB,KAAK,CAAC,cAAc,EACxB,CACJ,CACA,IAAM,EAAU,IAAI,EAuBb,SAAS,EAAmB,CAAM,EACrC,GAAI,CAQA,MAPI,AAAkB,UAAlB,OAAO,GACP,GAAS,IAAIA,OAAO,EAAM,EAE9B,EAAS,EAAO,QAAQ,GACxB,EAAQ,KAAK,CAAC,GAEd,EAAQ,KAAK,CAAC,EAAa,OAAO,CAAC,IAC5B,EAAQ,SAAS,AAC5B,CACA,MAAO,EAAI,CACP,MAAO,EACX,CACJ,CAKO,IAAM,EAAuB,AAAC,kDACyB,KAAK,CAAC,IAC7D,SAAS,EAAa,CAAK,EAC9B,IAAM,EAAS,AAAiB,UAAjB,OAAO,EAAqB,IAAIA,OAAO,GAAS,EAC/D,OAAO,EAAqB,IAAI,CAAC,AAAC,GAAO,EAAO,IAAI,CAAC,GACzD,CACO,SAAS,EAAa,CAAK,EAC9B,OAAO,EAAM,OAAO,CAAC,sBAAuB,OAChD,CACO,SAAS,EAA0B,CAAO,EAC7C,OAAOb,MAAM,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAS,GAAU,KAAK,IAAI,CAAC,GAAU,CAAC,CAAC,EAAE,EAAO,WAAW,GAAG,EAAE,EAAO,WAAW,GAAG,CAAC,CAAC,CAAG,EAAa,IAAS,IAAI,CAAC,GAC3J,CAOO,SAAS,EAAe,CAAK,CAAE,CAAK,EACvC,IAAM,EAAU,AAUb,SAAuB,CAAK,EAC3B,AAAiB,UAAjB,OAAO,GACP,GAAQ,IAAIa,OAAO,EAAK,EAE5B,IAAM,EAAK,EAAO,EAAS,EAAM,MAAM,CACnC,EAAI,EA+HR,OAAO,IAAIA,OAAO,AA9HlB,SAAS,IACL,IAAI,EAAS,GAAI,EACjB,SAAS,EAAU,CAAO,EACtB,GAAU,EAAO,MAAM,CAAC,EAAG,GAC3B,GAAK,CACT,CACA,SAAS,EAAe,CAAO,EAC3B,GAAU,MAAQ,EAAO,MAAM,CAAC,EAAG,GAAW,MAC9C,GAAK,CACT,CACA,KAAO,EAAI,EAAO,MAAM,EACpB,OAAQ,CAAM,CAAC,EAAE,EACb,IAAK,KACD,OAAQ,CAAM,CAAC,EAAI,EAAE,EACjB,IAAK,IACD,EAAe,GACf,KACJ,KAAK,IACD,EAAe,GACf,KACJ,KAAK,IAGO,EAAe,AAFnB,EAAG,OAAO,CAES,AADf,AAAkB,MAAlB,CAAM,CAAC,EAAI,EAAE,CACE,EAAO,OAAO,CAAC,IAAK,GAAK,EAAI,EAG7B,EAIJ,GAEnB,KACJ,KAAK,IACL,IAAK,IAEG,EAAe,AADf,EAAG,OAAO,CACK,EAAO,OAAO,CAAC,IAAK,GAAK,EAAI,EAG7B,GAEnB,KACJ,KAAK,IACD,EAAe,EAAO,OAAO,CAAC,IAAK,GAAK,EAAI,GAC5C,KACJ,SACI,EAAe,EAEvB,CACA,KACJ,KAAK,IAED,AADA,GAAM,kBAAiB,EACnB,SAAS,CAAG,EAEhB,EAAe,AADf,GAAM,EAAI,IAAI,CAAC,IAAW,EAAE,AAAD,CACT,CAAC,EAAE,CAAC,MAAM,EAC5B,KACJ,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,EAAU,GACV,KACJ,KAAK,IAED,AADA,GAAM,eAAc,EAChB,SAAS,CAAG,EAChB,GAAM,EAAI,IAAI,CAAC,EAAM,EAEjB,EAAU,CAAG,CAAC,EAAE,CAAC,MAAM,EAGvB,EAAe,GAEnB,KACJ,KAAK,IACD,GAAI,AAAkB,MAAlB,CAAM,CAAC,EAAI,EAAE,CACb,OAAQ,CAAM,CAAC,EAAI,EAAE,EACjB,IAAK,IACD,GAAU,MACV,GAAK,EACL,GAAU,IAAY,MACtB,KACJ,KAAK,IACD,GAAU,MACV,GAAK,EACL,GAAU,IAAY,IACtB,KACJ,KAAK,IACD,EAAM,EACN,GAAK,EACL,IACA,GAAU,EAAO,MAAM,CAAC,EAAK,EAAI,GACjC,KACJ,KAAK,IACD,OAAQ,CAAM,CAAC,EAAI,EAAE,EACjB,IAAK,IACL,IAAK,IACD,EAAM,EACN,GAAK,EACL,IACA,GAAU,EAAO,MAAM,CAAC,EAAK,EAAI,GACjC,KACJ,SACI,EAAU,EAAO,OAAO,CAAC,IAAK,GAAK,EAAI,GACvC,GAAU,IAAY,KAE9B,CAER,MAGA,EAAU,GACV,GAAU,IAAY,MAE1B,KACJ,KAAK,IAED,MADA,EAAE,EACK,CACX,SACI,EAAe,EAEvB,CAEJ,OAAO,CACX,IAC6B,EAAM,KAAK,CAC5C,EA/IkC,GACxB,EAAQ,EAAM,KAAK,CAAC,GAC1B,MAAO,CAAC,CAAC,GAAS,CAAK,CAAC,EAAE,CAAC,MAAM,CAAG,CACxC,C,4BCmUW,EACA,E,oDArdJ,OAAM,EACT,YAAY,CAAO,CAAE,CAAM,CAAE,CACzB,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,MAAM,CAAG,CAClB,CACA,UAAW,CACP,IAAM,EAAW,CACb,MAAO,IAAI,CAAC,OAAO,GACnB,KAAM,IAAM,IAAI,CAAC,MAAM,CAAC,EAAS,KAAK,EACtC,CAACiB,OAAO,QAAQ,CAAC,CAAE,IAAM,CAC7B,EACA,OAAO,CACX,CACA,CAACA,OAAO,QAAQ,CAAC,EAAG,CAChB,OAAO,IAAI,CAAC,QAAQ,EACxB,CACA,SAAU,CAEN,MAAO,EAAQ,AADE,IAAI,CAAC,QAAQ,GACN,IAAI,GAAG,IAAI,AACvC,CACA,OAAQ,CACJ,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAQ,EACR,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EACb,IACA,EAAO,EAAS,IAAI,GAExB,OAAO,CACX,CACA,SAAU,CACN,IAEI,EAFE,EAAS,EAAE,CACX,EAAW,IAAI,CAAC,QAAQ,GAE9B,GAEQ,AAAe,SAAf,AADJ,GAAO,EAAS,IAAI,EAAC,EACZ,KAAK,EACV,EAAO,IAAI,CAAC,EAAK,KAAK,QAErB,CAAC,EAAK,IAAI,CAAE,CACrB,OAAO,CACX,CACA,OAAQ,CACJ,OAAO,IAAIlB,IAAI,IAAI,CACvB,CACA,MAAM,CAAK,CAAE,CAAO,CAAE,CAKlB,OAAO,IAAIe,IAJS,IAAI,CAAC,GAAG,CAAC,GAAW,CACpC,EAAQ,EAAM,GAAW,EACzB,EAAU,EAAQ,GAAW,EAChC,EAEL,CACA,UAAW,CACP,OAAO,IAAI,CAAC,IAAI,EACpB,CACA,OAAO,CAAK,CAAE,CACV,OAAO,IAAI,EAAW,IAAO,EAAE,MAAO,IAAI,CAAC,OAAO,GAAI,UAAW,GAAO,SAAU,CAAK,CAACG,OAAO,QAAQ,CAAC,EAAG,GAAI,IAC3G,IAAI,EACJ,GAAI,CAAC,EAAM,SAAS,CAAE,CAClB,GAEI,GAAI,CAAC,AADL,GAAS,IAAI,CAAC,MAAM,CAAC,EAAM,KAAK,GACpB,IAAI,CACZ,OAAO,QAEN,CAAC,EAAO,IAAI,CAAE,AACvB,GAAM,SAAS,CAAG,EACtB,CACA,GAEI,GAAI,CAAC,AADL,GAAS,EAAM,QAAQ,CAAC,IAAI,EAAC,EACjB,IAAI,CACZ,OAAO,QAEN,CAAC,EAAO,IAAI,CAAE,CACvB,OAAO,CACX,EACJ,CACA,KAAK,EAAY,GAAG,CAAE,CAClB,IAEI,EAFE,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAQ,GAER,EAAe,GACnB,OAsQU,CApQD,CADL,GAAS,EAAS,IAAI,EAAC,EACX,IAAI,GACR,GACA,IAAS,CAAQ,EAErB,GAiQZ,AAAI,AAAgB,UAAhB,OADU,EAhQgB,EAAO,KAAK,EAkQ/B,EAEP,AAAgB,SAAT,EACA,YAGP,AAAyB,YAAzB,OAAO,EAAK,QAAQ,CAEb,EAAK,QAAQ,GAEjB/B,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IA1Q9B,EAAe,SACV,CAAC,EAAO,IAAI,CAAE,CACvB,OAAO,CACX,CACA,QAAQ,CAAa,CAAE,EAAY,CAAC,CAAE,CAClC,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAQ,EACR,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EAAE,CACf,GAAI,GAAS,GAAa,EAAK,KAAK,GAAK,EACrC,OAAO,EAEX,EAAO,EAAS,IAAI,GACpB,GACJ,CACA,OAAO,EACX,CACA,MAAM,CAAS,CAAE,CACb,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EAAE,CACf,GAAI,CAAC,EAAU,EAAK,KAAK,EACrB,MAAO,GAEX,EAAO,EAAS,IAAI,EACxB,CACA,MAAO,EACX,CACA,KAAK,CAAS,CAAE,CACZ,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EAAE,CACf,GAAI,EAAU,EAAK,KAAK,EACpB,MAAO,GAEX,EAAO,EAAS,IAAI,EACxB,CACA,MAAO,EACX,CACA,QAAQ,CAAU,CAAE,CAChB,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAQ,EACRwB,EAAO,EAAS,IAAI,GACxB,KAAO,CAACA,EAAK,IAAI,EACb,EAAWA,EAAK,KAAK,CAAE,GACvBA,EAAO,EAAS,IAAI,GACpB,GAER,CACA,IAAI,CAAU,CAAE,CACZ,OAAO,IAAI,EAAW,IAAI,CAAC,OAAO,CAAE,AAAC,IACjC,GAAM,CAAE,MAAI,CAAE,OAAK,CAAE,CAAG,IAAI,CAAC,MAAM,CAAC,UACpC,AAAI,EACO,EAGA,CAAE,KAAM,GAAO,MAAO,EAAW,EAAO,CAEvD,EACJ,CACA,OAAO,CAAS,CAAE,CACd,OAAO,IAAI,EAAW,IAAI,CAAC,OAAO,CAAE,IAChC,IAAIzB,EACJ,GAEI,GAAI,CAAC,AADLA,CAAAA,EAAS,IAAI,CAAC,MAAM,CAAC,EAAK,EACd,IAAI,EAAI,EAAUA,EAAO,KAAK,EACtC,OAAOA,QAEN,CAACA,EAAO,IAAI,CAAE,CACvB,OAAO,CACX,EACJ,CACA,aAAc,CACV,OAAO,IAAI,CAAC,MAAM,CAACI,GAAKA,MAAAA,EAC5B,CACA,OAAO,CAAU,CAAE,CAAY,CAAE,CAC7B,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAgB,EAChB,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EAET,EADA,AAAkB,SAAlB,EACgB,EAAK,KAAK,CAGV,EAAW,EAAe,EAAK,KAAK,EAExD,EAAO,EAAS,IAAI,GAExB,OAAO,CACX,CACA,YAAY,CAAU,CAAE,CAAY,CAAE,CAClC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,GAAI,EAAY,EAC7D,CACA,gBAAgB,CAAQ,CAAE,CAAU,CAAE,CAAY,CAAE,CAChD,IAAMqB,EAAO,EAAS,IAAI,GAC1B,GAAIA,EAAK,IAAI,CACT,OAAO,EAEX,IAAM,EAAgB,IAAI,CAAC,eAAe,CAAC,EAAU,EAAY,UACjE,AAAI,AAAkB,SAAlB,EACOA,EAAK,KAAK,CAEd,EAAW,EAAeA,EAAK,KAAK,CAC/C,CACA,KAAK,CAAS,CAAE,CACZ,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EAAE,CACf,GAAI,EAAU,EAAK,KAAK,EACpB,OAAO,EAAK,KAAK,CAErB,EAAO,EAAS,IAAI,EACxB,CAEJ,CACA,UAAU,CAAS,CAAE,CACjB,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAQ,EACRA,EAAO,EAAS,IAAI,GACxB,KAAO,CAACA,EAAK,IAAI,EAAE,CACf,GAAI,EAAUA,EAAK,KAAK,EACpB,OAAO,EAEXA,EAAO,EAAS,IAAI,GACpB,GACJ,CACA,OAAO,EACX,CACA,SAAS,CAAa,CAAE,CACpB,IAAM,EAAW,IAAI,CAAC,QAAQ,GAC1B,EAAO,EAAS,IAAI,GACxB,KAAO,CAAC,EAAK,IAAI,EAAE,CACf,GAAI,EAAK,KAAK,GAAK,EACf,MAAO,GAEX,EAAO,EAAS,IAAI,EACxB,CACA,MAAO,EACX,CACA,QAAQ,CAAU,CAAE,CAChB,OAAO,IAAI,EAAW,IAAO,EAAE,KAAM,IAAI,CAAC,OAAO,EAAG,GAAI,AAAC,IACrD,EAAG,CACC,GAAI,EAAM,QAAQ,CAAE,CAChB,IAAM,EAAO,EAAM,QAAQ,CAAC,IAAI,GAChC,IAAI,EAAK,IAAI,CAIT,OAAO,CAHP,GAAM,QAAQ,CAAG,MAKzB,CACA,GAAM,CAAE,MAAI,CAAE,OAAK,CAAE,CAAG,IAAI,CAAC,MAAM,CAAC,EAAM,IAAI,EAC9C,GAAI,CAAC,EAAM,CACP,IAAM,EAAS,EAAW,GAC1B,IAAI,EAAW,GAIX,MAAO,CAAE,KAAM,GAAO,MAAO,CAAO,CAHpC,GAAM,QAAQ,CAAG,CAAM,CAACO,OAAO,QAAQ,CAAC,EAKhD,CACJ,OAAS,EAAM,QAAQ,CAAE,CACzB,OAAO,CACX,EACJ,CACA,KAAK,CAAK,CAAE,CAIR,GAHI,AAAU,SAAV,GACA,GAAQ,GAER,GAAS,EACT,OAAO,IAAI,CAEf,IAAM,EAAS,EAAQ,EAAI,IAAI,CAAC,IAAI,CAAC,EAAQ,GAAK,IAAI,CACtD,OAAO,IAAI,EAAW,IAAO,EAAE,KAAM,EAAO,OAAO,EAAG,GAAI,AAAC,IACvD,EAAG,CACC,GAAI,EAAM,QAAQ,CAAE,CAChB,IAAM,EAAO,EAAM,QAAQ,CAAC,IAAI,GAChC,IAAI,EAAK,IAAI,CAIT,OAAO,CAHP,GAAM,QAAQ,CAAG,MAKzB,CACA,GAAM,CAAE,MAAI,CAAE,OAAK,CAAE,CAAG,EAAO,MAAM,CAAC,EAAM,IAAI,EAChD,GAAI,CAAC,EACD,IAAI,EAAW,GAIX,MAAO,CAAE,KAAM,GAAO,MAAO,CAAM,OAHnC,EAAM,QAAQ,CAAG,CAAK,CAACA,OAAO,QAAQ,CAAC,EAMnD,OAAS,EAAM,QAAQ,CAAE,CACzB,OAAO,CACX,EACJ,CACA,MAAO,CAEH,IAAM,EAAS,AADE,IAAI,CAAC,QAAQ,GACN,IAAI,GAC5B,IAAI,EAAO,IAAI,CAGf,OAAO,EAAO,KAAK,AACvB,CACA,KAAK,EAAY,CAAC,CAAE,CAChB,OAAO,IAAI,EAAW,KAClB,IAAM,EAAQ,IAAI,CAAC,OAAO,GAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,IAEZ,AADS,IAAI,CAAC,MAAM,CAAC,GAChB,IAAI,CAFc,KAM/B,OAAO,CACX,EAAG,IAAI,CAAC,MAAM,CAClB,CACA,MAAM,CAAO,CAAE,CACX,OAAO,IAAI,EAAW,IAAO,EAAE,KAAM,EAAG,MAAO,IAAI,CAAC,OAAO,EAAG,GAAI,GAE9D,CADA,EAAM,IAAI,GACN,EAAM,IAAI,CAAG,GACN,EAEJ,IAAI,CAAC,MAAM,CAAC,EAAM,KAAK,EAEtC,CACA,SAAS,CAAE,CAAE,CACT,OAAO,IAAI,EAAW,IAAO,EAAE,IAAK,IAAIlB,IAAO,cAAe,IAAI,CAAC,OAAO,EAAG,GAAI,IAC7E,IAAId,EACJ,GAEI,GAAI,CAAC,AADLA,CAAAA,EAAS,IAAI,CAAC,MAAM,CAAC,EAAM,aAAa,GAC5B,IAAI,CAAE,CACd,IAAM,EAAQ,EAAK,EAAGA,EAAO,KAAK,EAAIA,EAAO,KAAK,CAClD,GAAI,CAAC,EAAM,GAAG,CAAC,GAAG,CAAC,GAEf,OADA,EAAM,GAAG,CAAC,GAAG,CAAC,GACPA,CAEf,OACK,CAACA,EAAO,IAAI,CAAE,CACvB,OAAO,CACX,EACJ,CACA,QAAQ,CAAK,CAAE,CAAG,CAAE,CAChB,IAAM,EAAc,IAAIc,IACxB,IAAK,IAAM,KAAQ,EAAO,CACtB,IAAM,EAAQ,EAAM,EAAI,GAAQ,EAChC,EAAY,GAAG,CAAC,EACpB,CACA,OAAO,IAAI,CAAC,MAAM,CAACV,IACf,IAAM,EAAS,EAAM,EAAIA,GAAKA,EAC9B,MAAO,CAAC,EAAY,GAAG,CAAC,EAC5B,EACJ,CACJ,CAeA,SAAS,EAAW,CAAG,EACnB,MAAO,CAAC,CAAC,GAAO,AAAgC,YAAhC,OAAO,CAAG,CAAC4B,OAAO,QAAQ,CAAC,AAC/C,CAKO,IAAM,EAAe,IAAI,EAAW,IAAM,OAAW,IAAM,GAIrD,EAAc/B,OAAO,MAAM,CAAC,CAAE,KAAM,GAAM,MAAO,MAAU,GAIjE,SAAS,EAAO,GAAG,CAAW,EACjC,GAAI,AAAuB,IAAvB,EAAY,MAAM,CAAQ,CAC1B,IAAM,EAAa,CAAW,CAAC,EAAE,CACjC,GAAI,aAAsB,EACtB,OAAO,EAEX,GAAI,EAAW,GACX,OAAO,IAAI,EAAW,IAAM,CAAU,CAAC+B,OAAO,QAAQ,CAAC,GAAI,AAAC,GAAa,EAAS,IAAI,IAE1F,GAAI,AAA6B,UAA7B,OAAO,EAAW,MAAM,CACxB,OAAO,IAAI,EAAW,IAAO,EAAE,MAAO,CAAE,GAAI,AAAC,GACzC,AAAI,EAAM,KAAK,CAAG,EAAW,MAAM,CACxB,CAAE,KAAM,GAAO,MAAO,CAAU,CAAC,EAAM,KAAK,GAAG,AAAC,EAGhD,EAIvB,QACA,AAAI,EAAY,MAAM,CAAG,EACd,IAAI,EAAW,IAAO,EAAE,UAAW,EAAG,SAAU,CAAE,GAAI,AAAC,IAC1D,EAAG,CACC,GAAI,EAAM,QAAQ,CAAE,CAChB,IAAM,EAAO,EAAM,QAAQ,CAAC,IAAI,GAChC,GAAI,CAAC,EAAK,IAAI,CACV,OAAO,CAEX,GAAM,QAAQ,CAAG,MACrB,CACA,GAAI,EAAM,KAAK,CAAE,CACb,GAAI,EAAM,QAAQ,CAAG,EAAM,KAAK,CAAC,MAAM,CACnC,MAAO,CAAE,KAAM,GAAO,MAAO,EAAM,KAAK,CAAC,EAAM,QAAQ,GAAG,AAAC,CAE/D,GAAM,KAAK,CAAG,OACd,EAAM,QAAQ,CAAG,CACrB,CACA,GAAI,EAAM,SAAS,CAAG,EAAY,MAAM,CAAE,CACtC,IAAM,EAAa,CAAW,CAAC,EAAM,SAAS,GAAG,CAC7C,EAAW,GACX,EAAM,QAAQ,CAAG,CAAU,CAACA,OAAO,QAAQ,CAAC,GAEvC,GAAc,AAA6B,UAA7B,OAAO,EAAW,MAAM,EAC3C,GAAM,KAAK,CAAG,CAAS,CAE/B,CACJ,OAAS,EAAM,QAAQ,EAAI,EAAM,KAAK,EAAI,EAAM,SAAS,CAAG,EAAY,MAAM,CAAE,CAChF,OAAO,CACX,GAEG,CACX,CAMO,MAAM,UAAuB,EAChC,YAAY,CAAI,CAAE,CAAQ,CAAE,CAAO,CAAE,CACjC,KAAK,CAAC,IAAO,EACT,UAAW,AAAC,SAAyC,KAAK,EAAI,EAAQ,WAAW,AAAD,EAAK,CAAC,CAAC,EAAK,CAACA,OAAO,QAAQ,CAAC,GAAG,CAAG,CAAC,EAAS,EAAK,CAACA,OAAO,QAAQ,CAAC,GAAG,CACtJ,OAAQ,EACZ,GAAI,IAKA,IAJI,EAAM,MAAM,GACZ,EAAM,SAAS,CAAC,GAAG,GACnB,EAAM,MAAM,CAAG,IAEZ,EAAM,SAAS,CAAC,MAAM,CAAG,GAAG,CAE/B,IAAM,EAAO,AADI,EAAM,SAAS,CAAC,EAAM,SAAS,CAAC,MAAM,CAAG,EAAE,CACtC,IAAI,GAC1B,IAAI,EAAK,IAAI,CAKT,OADA,EAAM,SAAS,CAAC,IAAI,CAAC,EAAS,EAAK,KAAK,CAAC,CAACA,OAAO,QAAQ,CAAC,IACnD,EAJP,EAAM,SAAS,CAAC,GAAG,EAM3B,CACA,OAAO,CACX,EACJ,CACA,UAAW,CACP,IAAM,EAAW,CACb,MAAO,IAAI,CAAC,OAAO,GACnB,KAAM,IAAM,IAAI,CAAC,MAAM,CAAC,EAAS,KAAK,EACtC,MAAO,KACH,EAAS,KAAK,CAAC,MAAM,CAAG,EAC5B,EACA,CAACA,OAAO,QAAQ,CAAC,CAAE,IAAM,CAC7B,EACA,OAAO,CACX,CACJ,CAYI,CAPO,EA6BR,GAAc,GAAY,CAAC,IAtBhB,GAAG,CAHb,SAAa,CAAM,EACf,OAAO,EAAO,MAAM,CAAC,CAAC,EAAG,IAAM,EAAI,EAAG,EAC1C,EAQA,EAAU,OAAO,CAHjB,SAAiB,CAAM,EACnB,OAAO,EAAO,MAAM,CAAC,CAAC,EAAG,IAAM,EAAI,EAAG,EAC1C,EAQA,EAAU,GAAG,CAHb,SAAa,CAAM,EACf,OAAO,EAAO,MAAM,CAAC,CAAC,EAAG,IAAMb,KAAK,GAAG,CAAC,EAAG,GAC/C,EAQA,EAAU,GAAG,CAHb,SAAa,CAAM,EACf,OAAO,EAAO,MAAM,CAAC,CAAC,EAAG,IAAMA,KAAK,GAAG,CAAC,EAAG,GAC/C,C,wCCrfG,OAAM,EACT,UAAW,CACP,MAAM,AAAIhB,MAAM,+BACpB,CACA,MAAM,eAAgB,CAClB,MAAO,EAAE,AACb,CACJ,CACO,IAAM,EAAkB,CAC3B,mBAAoB,IAAM,IAAI,CAClC,C,uDCgBA,MAnBA,SAAsB,CAAK,CAAE,CAAQ,CAAE,CAAU,EAI/C,IAHA,IAAIK,EAAQ,GACR,EAAS,EAAM,MAAM,CAElB,EAAEA,EAAQ,GAAQ,CACvB,IAAI,EAAQ,CAAK,CAACA,EAAM,CACpB,EAAU,EAAS,GAEvB,GAAI,AAAW,MAAX,GAAoB,CAAa,SAAb,EACf,GAAY,GAAW,CAAC,QAAS,GAClC,EAAW,EAAS,EAAQ,EAElC,IAAI,EAAW,EACX,EAAS,CAEjB,CACA,OAAO,CACT,C,yCChBA,MAJA,SAAgB,CAAK,CAAE,CAAK,EAC1B,OAAO,EAAQ,CACjB,C,+GCuCA,MAlCA,SAAiB,CAAM,CAAE,CAAI,CAAE,CAAK,CAAE,CAAU,EAC9C,GAAI,CAAC,QAAS,GACZ,OAAO,EAET,EAAO,QAAS,EAAM,GAOtB,IALA,IAAI,EAAQ,GACR,EAAS,EAAK,MAAM,CACpB,EAAY,EAAS,EACrB,EAAS,EAEN,AAAU,MAAV,GAAkB,EAAE,EAAQ,GAAQ,CACzC,IAAI,EAAM,QAAM,CAAI,CAAC,EAAM,EACvB,EAAW,EAEf,GAAI,AAAQ,cAAR,GAAuB,AAAQ,gBAAR,GAAyB,AAAQ,cAAR,EAClD,MAGF,GAAI,GAAS,EAAW,CACtB,IAAI,EAAW,CAAM,CAAC,EAAI,AAEtB,AAAa,UADjB,GAAW,EAAa,EAAW,EAAU,EAAK,GAAU,MAAQ,GAElE,GAAW,QAAS,GAChB,EACC,QAAQ,CAAI,CAAC,EAAQ,EAAE,EAAI,EAAE,CAAG,CAAC,CAAC,CAE3C,CACA,QAAY,EAAQ,EAAK,GACzB,EAAS,CAAM,CAAC,EAAI,AACtB,CACA,OAAO,CACT,ECnBA,EAhBA,SAAoB,CAAM,CAAE,CAAK,CAAE,CAAS,EAK1C,IAJA,IAAIA,EAAQ,GACR,EAAS,EAAM,MAAM,CACrB,EAAS,CAAC,EAEP,EAAEA,EAAQ,GAAQ,CACvB,IAAI,EAAO,CAAK,CAACA,EAAM,CACnB,EAAQ,QAAQ,EAAQ,EAExB,GAAU,EAAO,IACnB,EAAQ,EAAQ,QAAS,EAAM,GAAS,EAE5C,CACA,OAAO,CACT,C,wDCQA,MAJA,SAAe,CAAK,EAClB,MAAO,QAAU,EA7BM,EA8BzB,C,wFC3BIuB,EAAc9B,OAAO,SAAS,CAG9B,EAAiB8B,EAAY,cAAc,CAsD/C,MA/Be,QAAS,SAAS,CAAM,CAAE,CAAO,EAC9C,EAAS9B,OAAO,GAEhB,IAAI,EAAQ,GACR,EAAS,EAAQ,MAAM,CACvB,EAAQ,EAAS,EAAI,CAAO,CAAC,EAAE,CAAG,OAMtC,IAJI,GAAS,QAAe,CAAO,CAAC,EAAE,CAAE,CAAO,CAAC,EAAE,CAAE,IAClD,GAAS,GAGJ,EAAE,EAAQ,GAMf,IALA,IAAI,EAAS,CAAO,CAAC,EAAM,CACvB,EAAQ,QAAO,GACf,EAAa,GACb,EAAc,EAAM,MAAM,CAEvB,EAAE,EAAa,GAAa,CACjC,IAAI,EAAM,CAAK,CAAC,EAAW,CACvB,EAAQ,CAAM,CAAC,EAAI,AAEnB,EAAU,SAAV,GACC,QAAG,EAAO8B,CAAW,CAAC,EAAI,GAAK,CAAC,EAAe,IAAI,CAAC,EAAQ,EAAI,GACnE,EAAM,CAAC,EAAI,CAAG,CAAM,CAAC,EAAI,AAAD,CAE5B,CAGF,OAAO,CACT,E,6CClDoB,E,uDCNhB,EAAYZ,KAAK,GAAG,CCoCxB,OF9BoB,EC+BpB,SAAmB,CAAK,CAAE,CAAS,CAAE,CAAS,EAC5C,IAAI,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,CAC7C,GAAI,CAAC,EACH,OAAO,GAET,IAAI,EAAQ,AAAa,MAAb,EAAoB,EAAI,QAAU,GAI9C,OAHI,EAAQ,GACV,GAAQ,EAAU,EAAS,EAAO,EAAC,EAE9B,QAAc,EAAO,QAAa,EAAW,GAAI,EAC1D,EDxCS,SAAS,CAAU,CAAE,CAAS,CAAE,CAAS,EAC9C,IAAI,EAAWlB,OAAO,GACtB,GAAI,CAAC,QAAY,GAAa,CAC5B,IAAI,EAAW,QAAa,EAAW,GACvC,EAAa,QAAK,GAClB,EAAY,SAAS,CAAG,EAAI,OAAO,EAAS,CAAQ,CAAC,EAAI,CAAE,EAAK,EAAW,CAC7E,CACA,IAAI,EAAQ,EAAc,EAAY,EAAW,GACjD,OAAO,EAAQ,GAAK,CAAQ,CAAC,EAAW,CAAU,CAAC,EAAM,CAAG,EAAM,CAAG,MACvE,E,mEGOF,MAJA,SAAiB,CAAU,CAAE,CAAQ,EACnC,MAAO,QAAY,QAAI,EAAY,GAAW,EAChD,C,wDCLA,MALA,SAAiB,CAAK,EAEpB,MAAO,AADM,CAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,AAAD,EAC5B,QAAY,EAAO,GAAK,EAAE,AAC5C,C,yCCfA,IAAI,EAAiB,AAHHA,OAAO,SAAS,CAGD,cAAc,CAc/C,MAJA,SAAiB,CAAM,CAAE,CAAG,EAC1B,OAAO,AAAU,MAAV,GAAkB,EAAe,IAAI,CAAC,EAAQ,EACvD,E,eCkBA,MAJA,SAAa,CAAM,CAAE,CAAI,EACvB,OAAO,AAAU,MAAV,GAAkB,QAAQ,EAAQ,EAAM,EACjD,C,8ECHA,MALA,SAAkB,CAAK,EACrB,MAAO,AAAgB,UAAhB,OAAO,GACX,CAAC,GAAAO,EAAA,GAAQ,IAAU,QAAa,IAAU,AArB/B,mBAqB+B,QAAW,EAC1D,C,yCCRA,MALA,SAAc,CAAK,EACjB,IAAI,EAAS,AAAS,MAAT,EAAgB,EAAI,EAAM,MAAM,CAC7C,OAAO,EAAS,CAAK,CAAC,EAAS,EAAE,CAAG,MACtC,C,8ECWA,MANA,SAAa,CAAK,EAChB,OAAO,AAAC,GAAS,EAAM,MAAM,CACzB,QAAa,EAAO,GAAQ,CAAE,GAAM,EACpC,MACN,C,wDCvBI,EAAW,EAAI,EAsCnB,MAZA,SAAkB,CAAK,SACrB,AAAK,EAID,AADJ,GAAQ,QAAS,EAAK,IACR,GAAY,IAAU,CAAC,EAE5B,AADK,GAAQ,EAAI,GAAK,GA/Bf,sBAkCT,GAAU,EAAQ,EAAQ,EAPxB,AAAU,IAAV,EAAc,EAAQ,CAQjC,C,wDCJA,MAPA,SAAmB,CAAK,EACtB,IAAI,EAAS,QAAS,GAClBR,EAAY,EAAS,EAEzB,OAAO,GAAW,EAAUA,EAAY,EAASA,EAAY,EAAU,CACzE,C,iDCjC2B,IAAI,EAAE,CAAC,IAAI,IAAI,SAAS,EAAE,CAAC,EAAE,GAAG,UAAU,OAAO,EAAE,MAAM,AAAIqB,UAAU,mCAAmCS,KAAK,SAAS,CAAC,GAAG,CAAC,SAAS9B,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAIA,EAAEyB,EAAE,GAAGjB,EAAE,EAAE,EAAE,GAAGkB,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC1B,EAAE,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,KAAKA,EAAE,MAAMA,EAAE,EAAE,CAAC,GAAG,KAAKA,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI0B,QAAQ,GAAG,IAAI,EAAE,GAAG,IAAIA,EAAE,CAAC,GAAGD,EAAE,MAAM,CAAC,GAAG,IAAIjB,GAAG,KAAKiB,EAAE,UAAU,CAACA,EAAE,MAAM,CAAC,IAAI,KAAKA,EAAE,UAAU,CAACA,EAAE,MAAM,CAAC,GAAG,IAAGA,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,EAAEA,EAAE,WAAW,CAAC,KAAK,GAAG,IAAIA,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAGA,CAAAA,EAAE,GAAGjB,EAAE,GAAGA,EAAE,AAACiB,CAAAA,EAAEA,EAAE,KAAK,CAAC,EAAE,EAAC,EAAG,MAAM,CAAC,EAAEA,EAAE,WAAW,CAAC,KAAK,EAAE,EAAEC,EAAE,EAAE,QAAQ,CAAC,MAAM,GAAG,IAAID,EAAE,MAAM,EAAE,IAAIA,EAAE,MAAM,CAAC,CAACA,EAAE,GAAGjB,EAAE,EAAE,EAAE,EAAEkB,EAAE,EAAE,QAAQ,EAAC,GAAID,CAAAA,EAAE,MAAM,CAAC,EAAEA,GAAG,MAAMA,EAAE,KAAKjB,EAAE,EAAE,MAAMiB,EAAE,MAAM,CAAC,EAAEA,GAAG,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,GAAGA,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,GAAGjB,EAAE,EAAE,EAAE,CAAE,GAAE,EAAEkB,EAAE,CAAC,MAAM,KAAK1B,GAAG,KAAK0B,EAAE,EAAEA,EAAEA,EAAE,EAAE,CAAC,OAAOD,CAAC,CAAC,IAAIA,EAAE,CAAC,QAAQ,WAAW,IAAI,IAAwD,EAApD,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAEH,UAAU,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAW,GAAG,EAAE,EAAEA,SAAS,CAAC,EAAE,CAAE,MAAK,IAAI,GAAI,GAAEkB,QAAQ,GAAG,EAAC,EAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,MAAM,EAAG,GAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,EAAC,EAAG,OAAO,EAAExC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,MAAM,CAAC,MAAM,IAAI,IAAIyB,EAAE,KAAK,EAAE,UAAU,CAAC,GAAGjB,EAAE,KAAK,EAAE,UAAU,CAAC,EAAE,MAAM,CAAC,GAAG,OAAO,IAAI,AAAC,GAAER,EAAE,EAAE,CAACyB,EAAC,EAAG,MAAM,EAAEA,GAAI,GAAE,GAAE,EAAG,EAAE,MAAM,CAAC,GAAGjB,GAAI,IAAG,GAAE,EAAGiB,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,SAAS,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,KAAK,EAAE,UAAU,CAAC,EAAE,EAAE,KAAK,WAAW,GAAG,GAAIH,UAAU,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,EAAEtB,EAAE,EAAEA,EAAEsB,UAAU,MAAM,CAAC,EAAEtB,EAAE,CAAC,IAAIQ,EAAEc,SAAS,CAACtB,EAAE,AAAC,GAAEQ,GAAGA,EAAE,MAAM,CAAC,GAAI,MAAK,IAAI,EAAE,EAAEA,EAAE,GAAG,IAAIA,CAAAA,CAAE,CAAC,OAAO,KAAK,IAAI,EAAE,IAAIiB,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,SAAS,CAAC,CAACzB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAEA,GAAP,AAAU,IAAIA,GAAc,AAAC,GAAEyB,EAAE,OAAO,CAAC,EAAC,IAAMzB,CAAAA,EAAEyB,EAAE,OAAO,CAACzB,EAAC,EAA7C,MAAM,GAAmD,IAAI,IAAIQ,EAAE,EAAEA,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAACA,GAAG,EAAEA,GAAG,IAAI,IAAI,EAAE,EAAE,MAAM,CAACkB,EAAE,EAAElB,EAAE,EAAE,EAAE,EAAER,EAAE,MAAM,EAAE,KAAKA,EAAE,UAAU,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,EAAEA,EAAE,MAAM,CAAC,EAAE,EAAE0B,EAAE,EAAEA,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK1B,EAAE,UAAU,CAAC,EAAE,GAAG,OAAOA,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,EAAE,OAAOA,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM0B,EAAE,GAAI,MAAK,EAAE,UAAU,CAAClB,EAAE,GAAG,EAAE,EAAE,IAAI,GAAI,GAAE,EAAC,EAAG,KAAK,CAAC,IAAI,EAAE,EAAE,UAAU,CAACA,EAAE,GAAG,GAAG,IAAIR,EAAE,UAAU,CAAC,EAAE,GAAG,KAAM,MAAK,GAAI,GAAE,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,EAAEQ,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,KAAK,EAAE,UAAU,CAAC,IAAK,KAAI,EAAE,MAAM,CAAC,GAAG,KAAK,GAAG,KAAI,EAAG,OAAO,EAAE,MAAM,CAAC,EAAE,EAAER,EAAE,KAAK,CAAC,EAAE,GAAI,IAAG,EAAE,KAAKA,EAAE,UAAU,CAAC,IAAI,EAAE,EAAEA,EAAE,KAAK,CAAC,EAAC,CAAE,EAAE,UAAU,SAAS,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,MAAM,CAAC,MAAM,IAAI,IAAI,IAAIA,EAAE,EAAE,UAAU,CAAC,GAAGyB,EAAE,KAAKzB,EAAEQ,EAAE,GAAG,EAAE,CAAC,EAAEkB,EAAE,EAAE,MAAM,CAAC,EAAEA,GAAG,EAAE,EAAEA,EAAE,GAAG,KAAM1B,CAAAA,EAAE,EAAE,UAAU,CAAC0B,EAAC,EAAI,IAAG,CAAC,EAAE,CAAClB,EAAEkB,EAAE,KAAK,OAAO,EAAE,CAAC,EAAE,OAAM,KAAKlB,EAAEiB,EAAE,IAAI,IAAIA,GAAG,IAAIjB,EAAE,KAAK,EAAE,KAAK,CAAC,EAAEA,EAAE,EAAE,SAAS,SAAS,CAAC,CAACR,CAAC,EAAE,GAAG,KAAK,IAAIA,GAAG,UAAU,OAAOA,EAAE,MAAM,AAAIqB,UAAU,mCAAmC,EAAE,GAAG,IAAII,EAAEjB,EAAE,EAAE,EAAE,GAAGkB,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI1B,GAAGA,EAAE,MAAM,CAAC,GAAGA,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC,GAAGA,EAAE,MAAM,GAAG,EAAE,MAAM,EAAEA,IAAI,EAAE,MAAM,GAAG,IAAI,EAAEA,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,IAAIyB,EAAE,EAAE,MAAM,CAAC,EAAEA,GAAG,EAAE,EAAEA,EAAE,CAAC,IAAI,EAAE,EAAE,UAAU,CAACA,GAAG,GAAG,KAAK,EAAG,IAAG,CAACC,EAAE,CAAClB,EAAEiB,EAAE,EAAE,KAAK,OAAM,KAAK,GAAIC,CAAAA,EAAE,CAAC,EAAE,EAAED,EAAE,GAAG,GAAG,GAAI,KAAIzB,EAAE,UAAU,CAAC,GAAG,IAAI,EAAE,GAAI,GAAEyB,CAAAA,EAAI,GAAE,GAAG,EAAE,EAAC,CAAE,CAAC,OAAOjB,IAAI,EAAE,EAAE,EAAE,KAAK,GAAI,GAAE,EAAE,MAAM,AAAD,EAAG,EAAE,KAAK,CAACA,EAAE,EAAE,CAAC,IAAIiB,EAAE,EAAE,MAAM,CAAC,EAAEA,GAAG,EAAE,EAAEA,EAAE,GAAG,KAAK,EAAE,UAAU,CAACA,GAAI,IAAG,CAACC,EAAE,CAAClB,EAAEiB,EAAE,EAAE,KAAK,OAAM,KAAK,GAAIC,CAAAA,EAAE,CAAC,EAAE,EAAED,EAAE,GAAG,OAAM,KAAK,EAAE,GAAG,EAAE,KAAK,CAACjB,EAAE,EAAE,EAAE,QAAQ,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,IAAIR,EAAE,GAAGyB,EAAE,EAAEjB,EAAE,GAAG,EAAE,CAAC,EAAEkB,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,GAAG,GAAG,KAAK,EAAE,KAAKlB,GAAI,GAAE,CAAC,EAAEA,EAAE,EAAE,GAAG,KAAK,EAAE,KAAKR,EAAEA,EAAE,EAAE,IAAI0B,GAAIA,CAAAA,EAAE,GAAG,KAAK1B,GAAI0B,CAAAA,EAAE,EAAC,OAAQ,GAAG,CAAC,EAAE,CAACD,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,OAAM,KAAKzB,GAAG,KAAKQ,GAAG,IAAIkB,GAAG,IAAIA,GAAG1B,IAAIQ,EAAE,GAAGR,IAAIyB,EAAE,EAAE,GAAG,EAAE,KAAK,CAACzB,EAAEQ,EAAE,EAAE,OAAO,SAAS,CAAC,MAA4J,EAAgB,EAA1K,GAAG,OAAO,GAAG,UAAU,OAAO,EAAE,MAAM,AAAIa,UAAU,mEAAmE,OAAO,GAAG,OAAyB,EAAE,AAAsF,EAApF,GAAG,EAAE,AAA+E,EAA7E,IAAI,CAAC,EAAE,AAAsE,EAApE,IAAI,EAAE,AAAC,CAA6D,EAA3D,IAAI,EAAE,EAAC,EAAI,CAAgD,EAA9C,GAAG,EAAE,EAAC,EAAU,EAAE,IAAI,AAAwB,EAAtB,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAO,EAAE,MAAM,SAAS,CAAC,EAAE,EAAE,GAAG,IAAIrB,EAAE,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,EAAE,EAAE,GAAG,IAAI,EAAE,MAAM,CAAC,OAAOA,EAAE,IAAIyB,EAAEjB,EAAE,EAAE,UAAU,CAAC,GAAG,EAAE,KAAKA,CAAE,GAAGR,CAAAA,EAAE,IAAI,CAAC,IAAIyB,EAAE,GAAGA,EAAE,EAAE,IAAI,IAAIC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,GAAGD,EAAE,EAAE,EAAE,GAAG,KAAMjB,CAAAA,EAAE,EAAE,UAAU,CAAC,EAAC,EAAG,KAAK,GAAI,GAAE,CAAC,EAAE,EAAE,EAAE,GAAG,KAAKA,EAAE,KAAKkB,EAAEA,EAAE,EAAE,IAAI,GAAI,GAAE,GAAG,KAAKA,GAAI,GAAE,EAAC,OAAQ,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,OAAM,KAAKA,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAGA,IAAI,EAAE,GAAGA,IAAI,EAAE,EAAE,KAAK,GAAI1B,CAAAA,EAAE,IAAI,CAACA,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,EAAC,EAAI,KAAI,GAAG,EAAGA,CAAAA,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE0B,GAAG1B,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAC,EAAIA,CAAAA,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE0B,GAAG1B,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAC,EAAGA,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC0B,EAAE,EAAC,EAAG,EAAE,EAAE1B,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,GAAIA,CAAAA,EAAE,GAAG,CAAC,GAAE,EAAGA,CAAC,EAAE,IAAI,IAAI,UAAU,IAAI,MAAM,KAAK,MAAM,IAAI,CAAEyB,CAAAA,EAAE,KAAK,CAACA,EAAE,EAAE,OAAO,CAACA,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIxB,OAAO,cAAc,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAIA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,aAAa,OAAO+B,QAAQA,OAAO,WAAW,EAAE/B,OAAO,cAAc,CAAC,EAAE+B,OAAO,WAAW,CAAC,CAAC,MAAM,QAAQ,GAAG/B,OAAO,cAAc,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,AAAC,UAAS,EAAK,GAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,MAAM,IAAI,CAAC,GAAG,UAAU,OAAOuC,OAAM,EAAE,EAAE,UAAUA,QAAQ,QAAQ,CAAS,UAAU,OAAOC,WAAqC,GAAE,AAAtBA,UAAU,SAAS,CAAK,OAAO,CAAC,YAAY,GAAE,IAAM,EAAE,iBAAiB,EAAE,MAAM,EAAE,QAAQ,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,AAAItC,MAAM,CAAC,wDAAwD,EAAE,EAAE,SAAS,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,cAAc,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,AAAIA,MAAM,mDAAmD,GAAG,EAAE,IAAI,CAAC,IAAG,EAAE,SAAS,CAAE,IAAG,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,AAAIA,MAAM,2IAA0I,MAAO,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,AAAIA,MAAM,4HAA2H,CAAC,CAAC,IAAiB,EAAE,8DAA+D,OAAM,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,OAAO,aAAa,GAAG,CAAC,CAAC,GAAG,UAAU,OAAO,EAAE,SAAS,EAAE,UAAU,OAAO,EAAE,QAAQ,EAAE,UAAU,OAAO,EAAE,IAAI,EAAE,UAAU,OAAO,EAAE,KAAK,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE,YAAY,OAAO,EAAE,IAAI,EAAE,YAAY,OAAO,EAAE,QAAQ,CAAC,MAAO,UAAU,KAAK,MAAM,SAAS,aAAY,CAAC,CAAC,CAAC,CAACH,CAAC,CAACyB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,OAAO,EAAG,KAAI,CAAC,MAAM,CAAC,EAAE,MAAM,EAApc,GAAwc,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAle,GAAse,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAtf,GAA0f,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAA5gB,GAAghB,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAxiB,EAA0iB,EAAI,KAAI,CAAC,MAAM,CAAsB,AAAe,GAAE,EAAF,EAAR,OAAa,IAAI,CAAC,SAAS,CAAC,GAAlnB,GAAunB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,EAAE,AAAxrB,MAAwrB,CAAC,CAAC,EAAE,EAAO,GAAE,AAArsB,IAAusB,GAAG,EAA1sB,GAA6sB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAACzB,GAAzuB,IAA+uB,IAAI,CAAC,KAAK,CAACyB,GAA1vB,GAA+vB,IAAI,CAAC,QAAQ,CAAC,GAA7wB,GAAkxB,EAAE,IAAI,CAAC,EAAC,CAAE,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAUzB,CAAC,CAAC,KAAKyB,CAAC,CAAC,MAAMjB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,GAAI,GAAv7B,EAAy7B,EAAG,KAAK,IAAIR,EAAEA,EAAE,IAAI,CAAC,SAAS,CAAC,OAAOA,GAAIA,CAAAA,EAAn+B,EAAq+B,EAAG,KAAK,IAAIyB,EAAEA,EAAE,IAAI,CAAC,IAAI,CAAC,OAAOA,GAAIA,CAAAA,EAA1gC,EAA4gC,EAAG,KAAK,IAAIjB,EAAEA,EAAE,IAAI,CAAC,KAAK,CAAC,OAAOA,GAAIA,CAAAA,EAAljC,EAAojC,EAAG,KAAK,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAI,GAA7lC,EAA+lC,EAAG,IAAI,IAAI,CAAC,MAAM,EAAER,IAAI,IAAI,CAAC,SAAS,EAAEyB,IAAI,IAAI,CAAC,IAAI,EAAEjB,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAER,EAAEyB,EAAEjB,EAAE,EAAE,CAAC,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAMR,EAAE,EAAE,IAAI,CAAC,GAAG,OAAOA,EAAE,IAAI,EAAEA,CAAC,CAAC,EAAE,EAAxwC,GAA4wC,EAAEA,CAAC,CAAC,EAAE,EAAlxC,IAAuxC,EAAEA,CAAC,CAAC,EAAE,EAA7xC,IAAkyC,EAAEA,CAAC,CAAC,EAAE,EAAxyC,IAA6yC,EAAEA,CAAC,CAAC,EAAE,EAAnzC,IAAwzC,GAAG,IAAI,EAA/zC,eAA20C,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,IAAIA,EAA/1C,GAAm2C,GAAG,GAAI,GAAE,EAAE,OAAO,CAAC,MAAj3C,IAAw3C,EAAG,AAA33C,MAA23C,CAAC,CAAC,EAAE,EAAM,AAAr4C,MAAq4C,CAAC,CAAC,EAAE,CAAK,CAAC,IAAM,EAAE,EAAE,OAAO,CAAh6C,IAAm6C,EAAG,MAAK,EAAGA,CAAAA,EAAE,EAAE,SAAS,CAAC,GAAG,EAA/7C,GAAi8C,EAAIA,CAAAA,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,IAAt+C,GAA0+C,CAAE,CAAC,OAAO,IAAI,EAAE,OAAOA,EAAE,EAAxgD,MAA8gD,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,IAAM,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,EAAE,OAAO,CAAE,EAAC,IAAM,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,UAAU,CAAC,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,GAAG0C,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAMA,EAAE,EAAE,EAAE,KAAK,CAAE,OAAM,UAAU,EAAE,WAAW,IAAK,SAAQ,IAAK,KAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,OAAO,EAAG,KAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,EAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,GAAI,KAAI,CAAC,UAAU,EAAG,KAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,EAAG,IAAI,CAAC,UAAU,AAAD,CAAE,CAAC,QAAQ,CAAC,IAAM,EAAE,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,OAAO,EAAG,GAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAACA,CAAAA,EAAG,IAAI,CAAC,UAAU,EAAG,GAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,AAAD,EAAG,IAAI,CAAC,IAAI,EAAG,GAAE,IAAI,CAAC,IAAI,CAAC,IAAI,AAAD,EAAG,IAAI,CAAC,MAAM,EAAG,GAAE,MAAM,CAAC,IAAI,CAAC,MAAM,AAAD,EAAG,IAAI,CAAC,SAAS,EAAG,GAAE,SAAS,CAAC,IAAI,CAAC,SAAS,AAAD,EAAG,IAAI,CAAC,KAAK,EAAG,GAAE,KAAK,CAAC,IAAI,CAAC,KAAK,AAAD,EAAG,IAAI,CAAC,QAAQ,EAAG,GAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,AAAD,EAAG,CAAC,CAAC,CAAC,IAAM,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC1C,CAAC,EAAE,IAAIyB,EAAEjB,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAMkB,EAAE,EAAE,UAAU,CAAC,GAAG,GAAGA,GAAG,IAAIA,GAAG,KAAKA,GAAG,IAAIA,GAAG,IAAIA,GAAG,IAAIA,GAAG,IAAI,KAAKA,GAAG,KAAKA,GAAG,KAAKA,GAAG,MAAMA,GAAG,GAAG,KAAKA,GAAG1B,GAAG,KAAK0B,GAAG1B,GAAG,KAAK0B,GAAG1B,GAAG,KAAK0B,EAAE,KAAKlB,GAAIiB,CAAAA,GAAGkB,mBAAmB,EAAE,SAAS,CAACnC,EAAE,IAAIA,EAAE,EAAC,EAAG,KAAK,IAAIiB,GAAIA,CAAAA,GAAG,EAAE,MAAM,CAAC,EAAC,MAAO,CAAC,KAAK,IAAIA,GAAIA,CAAAA,EAAE,EAAE,MAAM,CAAC,EAAE,EAAC,EAAG,IAAM,EAAE,CAAC,CAACC,EAAE,AAAC,MAAK,IAAI,EAAG,MAAKlB,GAAIiB,CAAAA,GAAGkB,mBAAmB,EAAE,SAAS,CAACnC,EAAE,IAAIA,EAAE,EAAC,EAAGiB,GAAG,GAAG,KAAKjB,GAAIA,CAAAA,EAAE,EAAE,CAAC,CAAC,OAAM,KAAKA,GAAIiB,CAAAA,GAAGkB,mBAAmB,EAAE,SAAS,CAACnC,GAAE,EAAG,KAAK,IAAIiB,EAAEA,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,IAAIzB,EAAE,EAAEA,EAAE,EAAE,MAAM,CAACA,IAAI,CAAC,IAAMyB,EAAE,EAAE,UAAU,CAACzB,EAAG,MAAKyB,GAAG,KAAKA,EAAG,MAAK,IAAI,GAAI,GAAE,EAAE,MAAM,CAAC,EAAEzB,EAAC,EAAG,GAAG,CAAC,CAACyB,EAAE,AAAD,EAAG,KAAK,IAAI,GAAI,IAAG,CAAC,CAACzB,EAAE,AAAD,CAAE,CAAC,OAAO,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAACA,CAAC,EAAE,IAAIyB,EAAE,OAAOA,EAAE,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,IAAK,GAAE,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,AAAsB,IAAtB,EAAE,IAAI,CAAC,UAAU,CAAC,IAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,AAAsB,KAAtB,EAAE,IAAI,CAAC,UAAU,CAAC,EAAM,GAAI,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,GAAGzB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAIyB,CAAAA,EAAEA,EAAE,OAAO,CAAC,MAAM,KAAI,EAAGA,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,IAAMzB,EAAE,EAAE,EAAE,EAAMyB,EAAE,GAAG,CAAC,OAAOjB,CAAC,CAAC,UAAU,CAAC,CAAC,KAAKkB,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAGlB,GAAIiB,CAAAA,GAAGjB,EAAEiB,GAAG,GAAE,EAAG,AAAC,IAAG,SAASjB,CAAAA,GAAKiB,CAAAA,GAAlpH,IAAupHA,GAAvpH,GAA0pH,EAAG,EAAE,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAG,GAAE,EAAE,MAAM,CAAC,EAAE,GAAwB,KAArB,GAAE,EAAE,WAAW,CAAC,IAAG,EAASA,GAAGzB,EAAE,EAAE,CAAC,EAAE,CAAC,GAAIyB,CAAAA,GAAGzB,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAGyB,GAAG,IAAIA,GAAGzB,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAC,EAAGyB,GAAG,GAAG,CAAC,AAAuC,KAArB,GAAE,AAApB,GAAE,EAAE,WAAW,EAAC,EAAM,WAAW,CAAC,IAAG,EAASA,GAAGzB,EAAE,EAAE,CAAC,EAAE,CAAC,GAAIyB,CAAAA,GAAGzB,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAGyB,GAAG,EAAE,MAAM,CAAC,EAAC,CAAE,CAAC,GAAGC,EAAE,CAAC,GAAGA,EAAE,MAAM,EAAE,GAAG,KAAKA,EAAE,UAAU,CAAC,IAAI,KAAKA,EAAE,UAAU,CAAC,GAAG,CAAC,IAAM,EAAEA,EAAE,UAAU,CAAC,EAAG,IAAG,IAAI,GAAG,IAAKA,CAAAA,EAAE,CAAC,CAAC,EAAEpB,OAAO,YAAY,CAAC,EAAE,IAAI,CAAC,EAAEoB,EAAE,MAAM,CAAC,GAAG,CAAC,AAAD,CAAE,MAAM,GAAGA,EAAE,MAAM,EAAE,GAAG,KAAKA,EAAE,UAAU,CAAC,GAAG,CAAC,IAAM,EAAEA,EAAE,UAAU,CAAC,EAAG,IAAG,IAAI,GAAG,IAAKA,CAAAA,EAAE,CAAC,EAAEpB,OAAO,YAAY,CAAC,EAAE,IAAI,CAAC,EAAEoB,EAAE,MAAM,CAAC,GAAG,CAAC,AAAD,CAAE,CAACD,GAAGzB,EAAE0B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,GAAID,CAAAA,GAAG,IAAIA,GAAGzB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAG,GAAIyB,CAAAA,GAAG,IAAIA,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAGA,CAAC,CAAwG,IAAM,EAAE,8BAA8B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,EAAG,GAAG,AAA7L,UAAS,EAAEpB,CAAC,EAAE,GAAG,CAAC,OAAOuC,mBAAmBvC,EAAE,CAAC,KAAK,CAAC,OAAOA,EAAE,MAAM,CAAC,EAAEA,EAAE,MAAM,CAAC,EAAE,GAAG,EAAEA,EAAE,MAAM,CAAC,IAAIA,CAAC,CAAC,GAAyF,IAAK,CAAC,CAAC,IAAsD,EAAZ,EAAtC,EAAE,EAAE,KAAK,IAAM,EAAE,EAAE,KAAK,EAAE,CAA2B,EAAH,EAAgf,GAAI,GAAE,CAAC,IAAlf,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,IAAIL,EAAE,EAAE,IAAI,CAACyB,EAAE,CAAC,CAAEzB,AAA/I,OAA+IA,CAAC,CAAC,EAAE,EAAOA,CAAAA,EAAE,AAA5J,IAA8JA,EAAEyB,EAAE,CAAC,GAAG,IAAIjB,EAAE,EAAE,OAAO,CAACR,KAAK,GAAG,OAAOyB,GAAGjB,AAAxM,MAAwMA,CAAC,CAAC,EAAE,EAAM,CAAC,EAAE,SAAS,EAAGA,CAAAA,EAAEA,EAAE,SAAS,CAAC,EAAC,EAAG,EAAE,IAAI,CAAC,CAAC,KAAKA,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,AAAjT,MAAiT,EAAE,IAAI,CAAK,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,IAAK,GAAE,EAAC,EAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,CAAa,KAAsB,GAAK,CAAC,KAAG,CAAC,OAAK,CAAC,CAA7B,C"}