{"version":3,"file":"static/js/async/4022.ca3e9fc9.js","sources":["webpack://login_page/./src/utils/utils.ts","webpack://login_page/./src/Components/FormPage/FormComponents/ExistingNodeSelector.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/ColorPickerField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/CheckboxFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/DateFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/DropdownField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/ImageFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/ListCheckboxField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/MultiDropdownField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/PdfFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/RadioField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/TextFormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/FormField.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/FieldRenderer.tsx","webpack://login_page/./src/Components/FormPage/FormComponents/NestedFields.tsx","webpack://login_page/./src/Components/FormPage/FormPage.tsx"],"sourcesContent":["import dayjs from \"dayjs\";\n\nexport const shortenAndFormatLabel = (label: string) => {\n\tif (!label) return \"\";\n\tconst spaced = label\n\t\t.replace(/([a-z])([A-Z])/g, \"$1 $2\")\n\t\t.replace(/_/g, \" \")\n\t\t.trim();\n\treturn spaced.charAt(0).toUpperCase() + spaced.slice(1);\n};\n\n/***\n * Creates a unique key for a node based on its ID and name.\n * This is useful for identifying nodes in lists or maps.\n * @param {string} id - The unique identifier of the node.\n * @param {string} name - The name of the node.\n * @return {string} A string in the format \"id@name\" that uniquely identifies the node.\n */\nexport const createKey = (id: string | number, name: string) => `${id}@${name}`;\n\nexport const getErrorMessage = (\n\ttype: string,\n\tvalue: string | number | Date | any[] | null | undefined,\n\tvalidations: any,\n) => {\n\tif (\n\t\tvalidations?.required &&\n\t\t(value === null ||\n\t\t\tvalue === undefined ||\n\t\t\t(typeof value === \"string\" && value.trim() === \"\") ||\n\t\t\t(Array.isArray(value) && value.length === 0))\n\t) {\n\t\treturn \"Ce champ est requis\";\n\t}\n\n\tif (\n\t\tvalidations?.min !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue < validations.min\n\t) {\n\t\treturn `La valeur doit être au moins ${validations.min}`;\n\t}\n\n\tif (\n\t\tvalidations?.max !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue > validations.max\n\t) {\n\t\treturn `La valeur doit être au plus ${validations.max}`;\n\t}\n\n\tif (validations?.size) {\n\t\tconst len = Array.isArray(value)\n\t\t\t? value.length\n\t\t\t: typeof value === \"string\"\n\t\t\t\t? value.length\n\t\t\t\t: -1;\n\t\tif (len !== -1) {\n\t\t\tif (validations.size.min !== undefined && len < validations.size.min) {\n\t\t\t\treturn `Doit contenir au moins ${validations.size.min} caractères/éléments`;\n\t\t\t}\n\t\t\tif (validations.size.max !== undefined && len > validations.size.max) {\n\t\t\t\treturn `Doit contenir au plus ${validations.size.max} caractères/éléments`;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tvalidations?.pattern &&\n\t\ttypeof value === \"string\" &&\n\t\t!new RegExp(validations.pattern).test(value)\n\t) {\n\t\treturn `Doit correspondre au modèle : ${validations.pattern}`;\n\t}\n\n\tswitch (type) {\n\t\tcase \"EmailNode\":\n\t\t\treturn \"Veuillez entrer une adresse e-mail valide\";\n\t\tcase \"IntNode\":\n\t\t\treturn \"Veuillez entrer un entier valide\";\n\t\tcase \"PhoneNumberNode\":\n\t\t\treturn \"Veuillez entrer un numéro de téléphone valide\";\n\t\tcase \"DateNode\":\n\t\t\treturn \"Veuillez entrer une date valide\";\n\t\tdefault:\n\t\t\treturn \"Valeur invalide\";\n\t}\n};\n\nexport const validateFieldValue = (\n\ttype: string,\n\tvalue: string | number | Date | any[] | null | undefined,\n\tvalidations: any,\n) => {\n\tlet isValid = true;\n\tlet message = \"\";\n\n\t// Required validation\n\tif (\n\t\tvalidations?.required &&\n\t\t(value === null ||\n\t\t\tvalue === undefined ||\n\t\t\t(typeof value === \"string\" && value.trim() === \"\") ||\n\t\t\t(Array.isArray(value) && value.length === 0))\n\t) {\n\t\tisValid = false;\n\t\tmessage = \"Ce champ est requis\";\n\t\treturn { isValid, message };\n\t}\n\n\t// If not required and value is empty, it's valid\n\tif (\n\t\t!validations?.required &&\n\t\t(value === null ||\n\t\t\tvalue === undefined ||\n\t\t\t(typeof value === \"string\" && value.trim() === \"\") ||\n\t\t\t(Array.isArray(value) && value.length === 0))\n\t) {\n\t\treturn { isValid: true, message: \"\" };\n\t}\n\n\t// Min validation\n\tif (\n\t\tvalidations?.min !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue < validations.min\n\t) {\n\t\tisValid = false;\n\t\tmessage = `La valeur doit être au moins ${validations.min}`;\n\t\treturn { isValid, message };\n\t}\n\n\t// Max validation\n\tif (\n\t\tvalidations?.max !== undefined &&\n\t\ttypeof value === \"number\" &&\n\t\tvalue > validations.max\n\t) {\n\t\tisValid = false;\n\t\tmessage = `La valeur doit être au plus ${validations.max}`;\n\t\treturn { isValid, message };\n\t}\n\n\t// Size validation\n\tif (validations?.size) {\n\t\tconst len = Array.isArray(value)\n\t\t\t? value.length\n\t\t\t: typeof value === \"string\"\n\t\t\t\t? value.length\n\t\t\t\t: -1;\n\t\tif (len !== -1) {\n\t\t\tif (validations.size.min !== undefined && len < validations.size.min) {\n\t\t\t\tisValid = false;\n\t\t\t\tmessage = `Doit contenir au moins ${validations.size.min} caractères/éléments`;\n\t\t\t\treturn { isValid, message };\n\t\t\t}\n\t\t\tif (validations.size.max !== undefined && len > validations.size.max) {\n\t\t\t\tisValid = false;\n\t\t\t\tmessage = `Doit contenir au plus ${validations.size.max} caractères/éléments`;\n\t\t\t\treturn { isValid, message };\n\t\t\t}\n\t\t}\n\t}\n\n\t// Pattern validation\n\tif (\n\t\tvalidations?.pattern &&\n\t\ttypeof value === \"string\" &&\n\t\t!new RegExp(validations.pattern).test(value)\n\t) {\n\t\tisValid = false;\n\t\tmessage = `Doit correspondre au modèle : ${validations.pattern}`;\n\t\treturn { isValid, message };\n\t}\n\n\tswitch (type) {\n\t\tcase \"IntNode\":\n\t\t\tisValid = /^-?\\d+$/.test(value as string);\n\t\t\tif (!isValid) message = \"Veuillez entrer un entier valide\";\n\t\t\tbreak;\n\t\tcase \"DateNode\":\n\t\t\tisValid = dayjs(value as string).isValid();\n\t\t\tif (!isValid) message = \"Veuillez entrer une date valide\";\n\t\t\tbreak;\n\t}\n\n\treturn { isValid, message };\n};\n\nexport const inputTextField = [\n\t\"StringNode\",\n\t\"EmailNode\",\n\t\"PhoneNumberNode\",\n\t\"IntNode\",\n];\nexport const checkboxField = [\"BooleanNode\"];\nexport const dateField = [\"DateNode\"];\nexport const imageField = [\"ImageNode\"];\nexport const fileField = [\"FileNode\"];\nexport const listField = [\"ListNode\"];\nexport const colorField = [\"ColorNode\"];\nexport const typeComponent = [\n\t...inputTextField,\n\t...fileField,\n\t...checkboxField,\n\t...dateField,\n\t...colorField,\n];\n","import CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport {\n\tBox,\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tCircularProgress,\n\tIconButton,\n\tModal,\n\tStack,\n\tTextField,\n\tTypography,\n} from \"@mui/material\";\nimport React, { useCallback, useMemo, useState } from \"react\";\n\nexport type ExistingNodeSelectorProps = {\n\tshow: boolean;\n\tselectedField: any;\n\texistingNodeList: any[];\n\tloadingExistingNodes: boolean;\n\tonClose: () => void;\n\tonSelectNode: (node: any, selectedField: any) => void;\n};\n\nconst ExistingNodeSelector = ({\n\tshow,\n\tselectedField,\n\texistingNodeList,\n\tloadingExistingNodes,\n\tonClose,\n\tonSelectNode,\n}: ExistingNodeSelectorProps) => {\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\n\t// Memoize handlers to prevent recreating functions on each render\n\tconst handleSearchChange = useCallback((e: any) => {\n\t\tsetSearchQuery(e.target.value);\n\t}, []);\n\n\tconst handleClose = useCallback(() => {\n\t\tonClose();\n\t}, [onClose]);\n\n\t// Memoize the filtered list to avoid recalculation on every render\n\tconst filteredNodeList = useMemo(() => {\n\t\treturn existingNodeList.filter((node) =>\n\t\t\tnode.name.toLowerCase().includes(searchQuery.toLowerCase()),\n\t\t);\n\t}, [existingNodeList, searchQuery]);\n\n\t// Create a memoized handler for node selection\n\tconst handleSelectNode = useCallback(\n\t\t(node: any) => {\n\t\t\tonSelectNode(node, selectedField);\n\t\t},\n\t\t[onSelectNode, selectedField],\n\t);\n\n\treturn (\n\t\t<Modal\n\t\t\topen={show}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"existing-node-modal-title\"\n\t\t\taria-describedby=\"existing-node-modal-description\"\n\t\t>\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t\twidth: \"80%\",\n\t\t\t\t\tmaxWidth: 600,\n\t\t\t\t\tmaxHeight: \"80vh\",\n\t\t\t\t\tbgcolor: \"background.paper\",\n\t\t\t\t\tboxShadow: 24,\n\t\t\t\t\toutline: \"none\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Card\n\t\t\t\t\tclassName=\"existing-node-card\"\n\t\t\t\t\tsx={{ width: \"100%\", maxHeight: \"80vh\", overflow: \"auto\" }}\n\t\t\t\t>\n\t\t\t\t\t<CardHeader\n\t\t\t\t\t\tid=\"existing-node-modal-title\"\n\t\t\t\t\t\ttitle=\"Select Existing Node\"\n\t\t\t\t\t\taction={\n\t\t\t\t\t\t\t<IconButton onClick={handleClose} aria-label=\"close\">\n\t\t\t\t\t\t\t\t<CloseRoundedIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tplaceholder=\"Search nodes...\"\n\t\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\t\tonChange={handleSearchChange}\n\t\t\t\t\t\t\tsx={{ mb: 2 }}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName=\"node-list\"\n\t\t\t\t\t\t\tsx={{ maxHeight: \"50vh\", overflow: \"auto\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{loadingExistingNodes ? (\n\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\" p={2}>\n\t\t\t\t\t\t\t\t\t<CircularProgress size={24} />{\" \"}\n\t\t\t\t\t\t\t\t\t<Typography sx={{ ml: 1 }}>Loading nodes...</Typography>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Stack spacing={1}>\n\t\t\t\t\t\t\t\t\t{filteredNodeList.map((node) => (\n\t\t\t\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"&:hover\": { backgroundColor: \"action.hover\" },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelectNode(node)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography fontWeight=\"bold\">{node.name}</Typography>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</Box>\n\t\t</Modal>\n\t);\n};\n\n// Wrap with React.memo to prevent unnecessary re-renders\nexport default React.memo(ExistingNodeSelector);\n","import { Typography } from \"@mui/material\";\nimport Sketch from \"@uiw/react-color-sketch\";\nimport type React from \"react\";\n\nexport type ColorPickerFieldProps = {\n\tvalue: any;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst ColorPickerField = ({\n\tvalue,\n\tonFocus,\n\tonChange,\n\terror,\n\thelperText,\n\t...rest\n}: ColorPickerFieldProps) => {\n\treturn (\n\t\t<>\n\t\t\t<Sketch\n\t\t\t\tstyle={{ marginLeft: 20 }}\n\t\t\t\tcolor={value || \"\"}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonChange={(color) => {\n\t\t\t\t\tonChange(color.hex);\n\t\t\t\t}}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t\t{helperText && (\n\t\t\t\t<Typography\n\t\t\t\t\tcolor={error ? \"error\" : \"textSecondary\"}\n\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t>\n\t\t\t\t\t{helperText}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ColorPickerField;\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport type { FocusEventHandler } from \"react\";\n\nconst CheckboxFormField = ({\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\t...rest\n}: {\n\tfieldKey: string;\n\tvalue: boolean | undefined;\n\tonFocus?: FocusEventHandler<HTMLButtonElement>;\n\tonChange: (v: boolean) => void;\n}) => {\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Checkbox\n\t\t\t\t\tid={fieldKey}\n\t\t\t\t\tchecked={!!value}\n\t\t\t\t\tonChange={(e) => onChange(e.target.checked!)}\n\t\t\t\t\t{...rest}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"\"\n\t\t/>\n\t);\n};\n\nexport default CheckboxFormField;\n","import { FormControl, FormHelperText } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport dayjs, { type Dayjs } from \"dayjs\";\nimport { useEffect, useState } from \"react\";\n\nconst DateFormField = ({\n\tfieldKey,\n\tvalue,\n\tonChange,\n\terror,\n\thelperText,\n\tfield,\n\t...rest\n}: {\n\tfieldKey: string;\n\tvalue: any;\n\tonChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n\tfield?: any;\n}) => {\n\tconst [internalValue, setInternalValue] = useState<Dayjs | null>(\n\t\tvalue ? dayjs(value) : null,\n\t);\n\tconst [internalError, setInternalError] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tsetInternalValue(value ? dayjs(value) : null);\n\t}, [value]);\n\n\tlet minDate: Dayjs | undefined;\n\tlet maxDate: Dayjs | undefined;\n\n\tif (field?.validations) {\n\t\tif (field.validations.min !== undefined) {\n\t\t\tminDate = dayjs(field.validations.min);\n\t\t}\n\t\tif (field.validations.max !== undefined) {\n\t\t\tmaxDate = dayjs(field.validations.max);\n\t\t}\n\t}\n\n\tconst handleDateChange = (newValue: Dayjs | null, context: any) => {\n\t\tsetInternalValue(newValue);\n\n\t\tconst hasError = newValue !== null && !newValue.isValid();\n\t\tsetInternalError(hasError);\n\n\t\tif (newValue === null || (newValue && newValue.isValid())) {\n\t\t\tonChange(newValue);\n\t\t}\n\t};\n\n\tconst displayError = error || internalError;\n\tconst displayHelperText =\n\t\tinternalError && !helperText ? \"Date invalide\" : helperText;\n\n\treturn (\n\t\t<FormControl fullWidth error={displayError}>\n\t\t\t<DatePicker\n\t\t\t\tvalue={internalValue}\n\t\t\t\tonChange={handleDateChange}\n\t\t\t\tsx={{ width: \"100%\" }}\n\t\t\t\tminDate={minDate}\n\t\t\t\tmaxDate={maxDate}\n\t\t\t\t{...rest}\n\t\t\t\tslotProps={{\n\t\t\t\t\ttextField: {\n\t\t\t\t\t\tsize: \"small\",\n\t\t\t\t\t\terror: displayError,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{displayHelperText && (\n\t\t\t\t<FormHelperText>{displayHelperText}</FormHelperText>\n\t\t\t)}\n\t\t</FormControl>\n\t);\n};\n\nexport default DateFormField;\n","import { useApiData } from \"@hooks/useApiData\";\nimport {\n\tAutocomplete,\n\tFormControl,\n\tFormHelperText,\n\tTextField,\n} from \"@mui/material\";\nimport type React from \"react\";\nimport { useEffect } from \"react\";\n\nexport type DropdownFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tdefaultValue?: string;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\tonFirstChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n\tmultiple?: boolean;\n\tdisabled?: boolean;\n\trequired?: boolean;\n};\n\nconst DropdownField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tdefaultValue,\n\tonFocus,\n\tonChange,\n\tonFirstChange,\n\terror,\n\thelperText,\n\tmultiple = false,\n\t...rest\n}: DropdownFieldProps) => {\n\tconst shortName = field.listNodeType?.split(\".\").pop();\n\n\tconst choices = field.choices || [];\n\tconst hasStaticChoices = choices.length > 0;\n\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: rawApiDataLoading,\n\t\tisError: rawApiDataError,\n\t} = useApiData(`class_attribute_field`, {\n\t\tnode_id: field.id,\n\t});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!hasStaticChoices &&\n\t\t\t!rawApiDataLoading &&\n\t\t\t!rawApiDataError &&\n\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length !== 0\n\t\t) {\n\t\t\tonFirstChange(\n\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map(\n\t\t\t\t\t(data: any) => ({\n\t\t\t\t\t\tlabel: data.name.split(\". \")[1],\n\t\t\t\t\t\tvalue: field.elementType === \"STRING\" ? data.value : data.id,\n\t\t\t\t\t}),\n\t\t\t\t)?.[0],\n\t\t\t);\n\t\t}\n\t}, [\n\t\tfield.elementType,\n\t\thasStaticChoices,\n\t\trawApiDataLoading,\n\t\trawApiDataError,\n\t\tonFirstChange,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map,\n\t]);\n\n\tconst {\n\t\tdata: listData,\n\t\tisLoading,\n\t\tisError,\n\t\terror: apiError,\n\t} = useApiData(hasStaticChoices ? undefined : \"list_existing_node\", {\n\t\ttype: shortName,\n\t});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\thasStaticChoices &&\n\t\t\t!isLoading &&\n\t\t\t!isError &&\n\t\t\tlistData?.data?.results?.[0]?.result?.data?.length !== 0 &&\n\t\t\t!multiple\n\t\t) {\n\t\t\tif (defaultValue) {\n\t\t\t\tif (defaultValue.split(\"@\").length === 2) {\n\t\t\t\t\tconst id = Number.parseInt(defaultValue.split(\"@\")[1]);\n\t\t\t\t\tconst existingOption =\n\t\t\t\t\t\tlistData?.data?.results?.[0]?.result?.data.find(\n\t\t\t\t\t\t\t(option: any) => option.id === id,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (existingOption) {\n\t\t\t\t\t\tonFirstChange({\n\t\t\t\t\t\t\tlabel: existingOption.name,\n\t\t\t\t\t\t\tvalue: existingOption.id,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonFirstChange(undefined);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tonFirstChange({\n\t\t\t\t\t\tlabel: defaultValue,\n\t\t\t\t\t\tvalue: defaultValue,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tonFirstChange(undefined);\n\t\t\t}\n\t\t}\n\t}, [\n\t\thasStaticChoices,\n\t\tisLoading,\n\t\tisError,\n\t\tdefaultValue,\n\t\tlistData?.data?.results?.[0]?.result?.data.find,\n\t\tlistData?.data?.results?.[0]?.result?.data?.length,\n\t\tmultiple,\n\t\tonFirstChange,\n\t]);\n\n\treturn (\n\t\t<FormControl fullWidth error={error}>\n\t\t\t<Autocomplete\n\t\t\t\tdisablePortal\n\t\t\t\trenderInput={(params) => <TextField {...params} error={error} />}\n\t\t\t\toptions={\n\t\t\t\t\thasStaticChoices\n\t\t\t\t\t\t? choices.map((choice: string) => ({\n\t\t\t\t\t\t\t\tlabel: choice,\n\t\t\t\t\t\t\t\tvalue: choice,\n\t\t\t\t\t\t\t\tfirstLetter: choice[0]?.toUpperCase(),\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t: listData?.data?.results?.[0]?.result?.data\n\t\t\t\t\t\t\t\t.map((option: any) => {\n\t\t\t\t\t\t\t\t\tconst firstLetter = option.name[0]?.toUpperCase();\n\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tlabel: option.name,\n\t\t\t\t\t\t\t\t\t\tvalue: option.id,\n\t\t\t\t\t\t\t\t\t\tfirstLetter:\n\t\t\t\t\t\t\t\t\t\t\toption.name === \"France(FR)\"\n\t\t\t\t\t\t\t\t\t\t\t\t? \" \"\n\t\t\t\t\t\t\t\t\t\t\t\t: /[0-9]/.test(firstLetter)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"0-9\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: firstLetter,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.sort(\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\ta: {\n\t\t\t\t\t\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t\t\t\t\t\tfirstLetter: string;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tb: {\n\t\t\t\t\t\t\t\t\t\t\tlabel: string;\n\t\t\t\t\t\t\t\t\t\t\tvalue: string;\n\t\t\t\t\t\t\t\t\t\t\tfirstLetter: string;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\t\t\tif (a.firstLetter !== b.firstLetter) {\n\t\t\t\t\t\t\t\t\t\t\treturn a.firstLetter.localeCompare(b.firstLetter);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn a.label.localeCompare(b.label);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t) || []\n\t\t\t\t}\n\t\t\t\tgroupBy={(option) => option.firstLetter}\n\t\t\t\tgetOptionKey={(option) => option.value ?? \"\"}\n\t\t\t\tgetOptionLabel={(option) => option.label ?? \"\"}\n\t\t\t\tisOptionEqualToValue={(option, value) => {\n\t\t\t\t\treturn option.value === value.value;\n\t\t\t\t}}\n\t\t\t\tsize=\"small\"\n\t\t\t\tid={fieldKey}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(_event, newValue) => {\n\t\t\t\t\tonChange(newValue);\n\t\t\t\t}}\n\t\t\t\tmultiple={multiple}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t\t{helperText && <FormHelperText>{helperText}</FormHelperText>}\n\t\t</FormControl>\n\t);\n};\n\nexport default DropdownField;\n","import { Box, Button, TextField, type TextFieldProps } from \"@mui/material\";\nimport type { ChangeEvent, MouseEventHandler } from \"react\";\n\nexport type ImageFormFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tonFocus?: MouseEventHandler<HTMLInputElement>;\n\tonChange: (value: any) => void;\n} & TextFieldProps;\n\nconst ImageFormField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\t...rest\n}: ImageFormFieldProps) => {\n\treturn (\n\t\t<Box\n\t\t\tclassName=\"image-preview-wrapper\"\n\t\t\tsx={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tmt: 2,\n\t\t\t}}\n\t\t>\n\t\t\t{value && (\n\t\t\t\t<Box\n\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\tclassName=\"image-preview\"\n\t\t\t\t\tsrc={`data:${field.mimeType};base64,${value}`}\n\t\t\t\t\talt={field.name}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmaxHeight: \"150px\",\n\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t\tobjectFit: \"contain\",\n\t\t\t\t\t\tmt: 1,\n\t\t\t\t\t\tborder: \"1px solid #eee\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t<Button variant=\"contained\" component=\"label\" sx={{ mt: 2 }}>\n\t\t\t\tUpload New Image\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tsx={{ display: \"none\" }}\n\t\t\t\t\tonClick={onFocus}\n\t\t\t\t\tonChange={async (e: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\tconst file = e.target.files?.[0];\n\t\t\t\t\t\tif (!file) return;\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = async () => {\n\t\t\t\t\t\t\tif (typeof reader?.result === \"string\") {\n\t\t\t\t\t\t\t\tconst base64String = reader?.result?.split(\",\")[1];\n\t\t\t\t\t\t\t\tonChange(base64String);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t\t}}\n\t\t\t\t\t{...rest}\n\t\t\t\t></TextField>\n\t\t\t</Button>\n\t\t</Box>\n\t);\n};\n\nexport default ImageFormField;\n","import { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport {\n\tCheckbox,\n\tFormControl,\n\tFormControlLabel,\n\tFormGroup,\n\tFormHelperText,\n} from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { shortenAndFormatLabel } from \"@/utils/utils\";\n\nconst ListCheckboxComponent = ({\n\toption,\n\tfieldId,\n}: {\n\toption: any;\n\tfieldId: string;\n}) => {\n\tconst [value, setValue] = useState(option.value);\n\tconst setValueMutation = useApiMutation(\"set_value\");\n\tconst queryClient = useQueryClient();\n\n\tconst handleSaveChanges = useDebouncedCallback(\n\t\tasync (field) => {\n\t\t\tif (!field) return console.warn(\"No field provided for saving changes\");\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\tsetValueMutation.mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: field.id,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(fieldId),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t}\n\t\t},\n\t\t500,\n\t\t{ maxWait: 2000 },\n\t);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tlabel={option.name}\n\t\t\tcontrol={\n\t\t\t\t<Checkbox\n\t\t\t\t\tchecked={value || false}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetValue(e.target.checked);\n\t\t\t\t\t\thandleSaveChanges(option);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport type ListCheckboxFieldProps = {\n\tfield: any;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst ListCheckboxField = ({\n\tfield,\n\terror,\n\thelperText,\n}: ListCheckboxFieldProps) => {\n\tconst { data } = useApiData(\"class_attribute_field\", {\n\t\tnode_id: field.id,\n\t});\n\n\treturn (\n\t\t<FormControl fullWidth error={error}>\n\t\t\t<FormGroup row>\n\t\t\t\t{data?.data?.results?.[0]?.result?.data?.attributes?.map(\n\t\t\t\t\t(option: any, index: any) => (\n\t\t\t\t\t\t<ListCheckboxComponent\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\toption={option}\n\t\t\t\t\t\t\tfieldId={field.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t)}\n\t\t\t</FormGroup>\n\t\t\t{helperText && <FormHelperText>{helperText}</FormHelperText>}\n\t\t</FormControl>\n\t);\n};\n\nexport default ListCheckboxField;\n","import { useApiData } from \"@hooks/useApiData\";\nimport type React from \"react\";\nimport { useEffect } from \"react\";\nimport DropdownField from \"./DropdownField\";\n\nexport type MultiDropdownFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\tonFirstChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst MultiDropdownField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\tonFirstChange,\n\terror,\n\thelperText,\n\t...rest\n}: MultiDropdownFieldProps) => {\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading,\n\t\tisError,\n\t} = useApiData(`class_attribute_field`, {\n\t\tnode_id: field.id,\n\t});\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!isLoading &&\n\t\t\t!isError &&\n\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length !== 0\n\t\t) {\n\t\t\tonFirstChange(\n\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map(\n\t\t\t\t\t(data: any) => ({\n\t\t\t\t\t\tfirstLetter: data.name.split(\". \")[1][0],\n\t\t\t\t\t\tlabel: data.name.split(\". \")[1],\n\t\t\t\t\t\tvalue: data.id,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}, [\n\t\tisLoading,\n\t\tisError,\n\t\tonFirstChange,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.length,\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.map,\n\t]);\n\n\treturn (\n\t\t<DropdownField\n\t\t\tfield={field}\n\t\t\tfieldKey={fieldKey}\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tonFirstChange={onFirstChange}\n\t\t\terror={error}\n\t\t\thelperText={helperText}\n\t\t\tmultiple\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport default MultiDropdownField;\n","import { useEffect, useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"react-pdf/dist/Page/AnnotationLayer.css\";\nimport \"react-pdf/dist/Page/TextLayer.css\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport {\n\tBox,\n\tButton,\n\tCircularProgress,\n\tPaper,\n\tTypography,\n} from \"@mui/material\";\n\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\n\t\"pdfjs-dist/build/pdf.worker.min.mjs\",\n\timport.meta.url,\n).toString();\n\nconst PdfFormField = ({\n\tvalue,\n\tonChange,\n\terror,\n\thelperText,\n}: {\n\tvalue: string;\n\tonChange: (value: string) => void;\n\terror: boolean;\n\thelperText: string;\n}) => {\n\tconst [fileUrl, setFileUrl] = useState(value);\n\n\tuseEffect(() => {\n\t\tif (value) {\n\t\t\tconst byteCharacters = atob(value);\n\t\t\tconst byteNumbers = new Array(byteCharacters.length);\n\t\t\tfor (let i = 0; i < byteCharacters.length; i++) {\n\t\t\t\tbyteNumbers[i] = byteCharacters.charCodeAt(i);\n\t\t\t}\n\t\t\tconst byteArray = new Uint8Array(byteNumbers);\n\t\t\tconst blob = new Blob([byteArray], { type: \"application/pdf\" });\n\t\t\tconst blobUrl = URL.createObjectURL(blob);\n\n\t\t\tsetFileUrl(blobUrl);\n\t\t}\n\t}, [value]);\n\n\tconst handleFileChange = (event: any) => {\n\t\tconst selectedFile = event.target.files[0];\n\t\tif (selectedFile && selectedFile.type === \"application/pdf\") {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onloadend = () => {\n\t\t\t\tif (typeof reader.result === \"string\") {\n\t\t\t\t\tconst base64String = reader.result?.split(\",\")[1];\n\t\t\t\t\tonChange(base64String);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treader.readAsDataURL(selectedFile);\n\t\t} else if (selectedFile) {\n\t\t\talert(\"Please select a PDF file.\");\n\t\t\tevent.target.value = null;\n\t\t}\n\t};\n\n\tconst openPdfInNewTab = (e: any) => {\n\t\te.stopPropagation();\n\t\tif (fileUrl) {\n\t\t\twindow.open(fileUrl, \"_blank\", \"noopener,noreferrer\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box\n\t\t\tsx={{\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\talignItems: \"flex-start\",\n\t\t\t\twidth: \"100%\",\n\t\t\t}}\n\t\t>\n\t\t\t<Paper\n\t\t\t\televation={2}\n\t\t\t\tonClick={openPdfInNewTab}\n\t\t\t\tsx={{\n\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\tborder: `2px solid ${error ? \"error.main\" : \"transparent\"}`,\n\t\t\t\t\tborderRadius: \"8px\",\n\t\t\t\t\twidth: \"180px\",\n\t\t\t\t\theight: \"254px\",\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\tbackgroundColor: \"#f8f8f8\",\n\t\t\t\t\tmb: 2,\n\t\t\t\t\ttransition: \"all 0.2s ease-in-out\",\n\t\t\t\t\t\"&:hover\": {\n\t\t\t\t\t\tborderColor: \"primary.main\",\n\t\t\t\t\t\tboxShadow: 4,\n\t\t\t\t\t\ttransform: \"scale(1.02)\",\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{fileUrl ? (\n\t\t\t\t\t<Document\n\t\t\t\t\t\tfile={fileUrl}\n\t\t\t\t\t\tloading={\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CircularProgress size={40} sx={{ mb: 1 }} />\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"text.secondary\">\n\t\t\t\t\t\t\t\t\tLoading PDF...\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t}\n\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PictureAsPdfIcon color=\"error\" sx={{ fontSize: 40, mb: 1 }} />\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" color=\"error\">\n\t\t\t\t\t\t\t\t\tPreview not available\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Page\n\t\t\t\t\t\t\tpageNumber={1}\n\t\t\t\t\t\t\twidth={180}\n\t\t\t\t\t\t\trenderTextLayer={false}\n\t\t\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Document>\n\t\t\t\t) : (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\tp: 2,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PictureAsPdfIcon color=\"disabled\" sx={{ fontSize: 60, mb: 1 }} />\n\t\t\t\t\t\t<Typography variant=\"caption\" color=\"text.secondary\" align=\"center\">\n\t\t\t\t\t\t\tNo PDF selected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</Paper>\n\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcomponent=\"label\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tstartIcon={<PictureAsPdfIcon />}\n\t\t\t\tsx={{ mt: 1 }}\n\t\t\t>\n\t\t\t\tUpload PDF\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\thidden\n\t\t\t\t\taccept=\"application/pdf\"\n\t\t\t\t\tonChange={handleFileChange}\n\t\t\t\t/>\n\t\t\t</Button>\n\n\t\t\t{helperText && (\n\t\t\t\t<Typography\n\t\t\t\t\tcolor={error ? \"error\" : \"textSecondary\"}\n\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t>\n\t\t\t\t\t{helperText}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default PdfFormField;\n","import {\n\tFormControl,\n\tFormControlLabel,\n\tFormHelperText,\n\tRadio,\n\tRadioGroup,\n} from \"@mui/material\";\n\nexport type RadioFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tdefaultValue?: string;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\tonFirstChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n};\n\nconst RadioField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tdefaultValue,\n\tonFocus,\n\tonChange,\n\terror,\n\thelperText,\n\tonFirstChange,\n\t...rest\n}: RadioFieldProps) => {\n\treturn (\n\t\t<FormControl fullWidth error={error}>\n\t\t\t<RadioGroup\n\t\t\t\trow\n\t\t\t\tname={fieldKey}\n\t\t\t\tvalue={value || defaultValue}\n\t\t\t\tonChange={(e) => onChange(e.target.value)}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{field.choices?.map((option: any, index: any) => (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tvalue={index}\n\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\tlabel={option}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</RadioGroup>\n\t\t\t{helperText && <FormHelperText>{helperText}</FormHelperText>}\n\t\t</FormControl>\n\t);\n};\n\nexport default RadioField;\n","import { TextField, type TextFieldProps } from \"@mui/material\";\nimport type React from \"react\";\n\nexport type TextFormFieldProps = {\n\tfield: any;\n\tfieldKey: string;\n\tvalue: any;\n\tonFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n\tonChange: (value: any) => void;\n\terror: boolean;\n\thelperText: string;\n} & TextFieldProps;\n\nconst TextFormField = ({\n\tfield,\n\tfieldKey,\n\tvalue,\n\tonFocus,\n\tonChange,\n\terror,\n\thelperText,\n\t...rest\n}: TextFormFieldProps) => {\n\tconst getInputType = (type: string) => {\n\t\tswitch (type) {\n\t\t\tcase \"EmailNode\":\n\t\t\t\treturn \"email\";\n\t\t\tcase \"PhoneNumberNode\":\n\t\t\t\treturn \"tel\";\n\t\t\tcase \"IntNode\":\n\t\t\t\treturn \"number\";\n\t\t\tdefault:\n\t\t\t\treturn \"text\";\n\t\t}\n\t};\n\n\t// Extract min and max values from validations if they exist\n\tconst inputProps: any = {};\n\n\tif (field.validations) {\n\t\t// For number inputs, apply min and max directly\n\t\tif (field.type === \"IntNode\" && field.validations.min !== undefined) {\n\t\t\tinputProps.min = field.validations.min;\n\t\t}\n\t\tif (field.type === \"IntNode\" && field.validations.max !== undefined) {\n\t\t\tinputProps.max = field.validations.max;\n\t\t}\n\n\t\t// For text inputs with size constraints\n\t\tif (field.validations.size) {\n\t\t\tif (field.validations.size.min !== undefined) {\n\t\t\t\tinputProps.minLength = field.validations.size.min;\n\t\t\t}\n\t\t\tif (field.validations.size.max !== undefined) {\n\t\t\t\tinputProps.maxLength = field.validations.size.max;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tfullWidth\n\t\t\tid={fieldKey}\n\t\t\tvariant=\"outlined\"\n\t\t\ttype={getInputType(field.type)}\n\t\t\tvalue={value || \"\"}\n\t\t\tonFocus={onFocus}\n\t\t\tonChange={(e) => onChange(e.target.value)}\n\t\t\terror={error}\n\t\t\thelperText={helperText}\n\t\t\tinputProps={inputProps}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport default TextFormField;\n","import ColorPickerField from \"@components/FormPage/FormComponents/ColorPickerField\";\nimport { useApiMutation } from \"@hooks/useApiData\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n\tBox,\n\tButton,\n\tFormControl,\n\tGrid,\n\tIconButton,\n\tTypography,\n} from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport {\n\tcheckboxField,\n\tcolorField,\n\tdateField,\n\tfileField,\n\tgetErrorMessage,\n\timageField,\n\tinputTextField,\n\tlistField,\n\tshortenAndFormatLabel,\n\ttypeComponent,\n\tvalidateFieldValue,\n} from \"@/utils/utils\";\nimport CheckboxFormField from \"./CheckboxFormField.js\";\nimport DateFormField from \"./DateFormField.js\";\nimport DropdownField from \"./DropdownField\";\nimport ImageFormField from \"./ImageFormField\";\nimport ListCheckboxField from \"./ListCheckboxField.js\";\nimport MultiDropdownField from \"./MultiDropdownField.js\";\nimport PdfFormField from \"./PdfFormField.js\";\nimport RadioField from \"./RadioField.js\";\nimport TextFormField from \"./TextFormField\";\n\nconst FormField = ({\n\tfield,\n\tfieldKey,\n\tisExpanded,\n\tonToggleField,\n\tonChangingForm,\n\tparentId,\n\tdefaultValue = \"\",\n}: {\n\tfield: any;\n\tfieldKey: string;\n\tisExpanded: boolean;\n\tonToggleField: (fieldKey: string, id: string) => void;\n\tonChangingForm: (name: string, id: string) => void;\n\tparentId: string;\n\tdefaultValue?: any;\n}) => {\n\tconst { id, name, type, validations, isValid, choices, source } = field;\n\tconst [value, setValue] = useState(\n\t\tlistField.includes(type)\n\t\t\t? field.listType === \"RADIO\"\n\t\t\t\t? field.value\n\t\t\t\t: []\n\t\t\t: defaultValue,\n\t);\n\tconst [error, setError] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\tconst queryClient = useQueryClient();\n\n\tconst setValueMutation = useApiMutation(\"set_value\");\n\tconst addExistingNodeMutation = useApiMutation(\"add_existing_node\");\n\tconst removeFromListMutation = useApiMutation(\"remove_from_list\");\n\n\tconst validateAndSetError = useDebouncedCallback(\n\t\t(currentValue: any) => {\n\t\t\tconst validationResult = validateFieldValue(\n\t\t\t\ttype,\n\t\t\t\tcurrentValue,\n\t\t\t\tvalidations,\n\t\t\t);\n\t\t\tsetError(!validationResult.isValid);\n\t\t\tsetErrorMessage(validationResult.message);\n\t\t\treturn validationResult.isValid;\n\t\t},\n\t\t300,\n\t\t{ maxWait: 1000 },\n\t);\n\n\tuseEffect(() => {\n\t\tvalidateAndSetError(value);\n\t}, [value, validateAndSetError]);\n\n\tconst handleSaveChanges = useDebouncedCallback(\n\t\tasync (field) => {\n\t\t\tif (!field) return console.warn(\"No field provided for saving changes\");\n\t\t\tconst isValid = validateAndSetError(value);\n\n\t\t\tif (!isValid) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Invalid value for ${field.name} (${field.type}): ${value}`,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\tsetValueMutation.mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: field.id,\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tparentId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error: any) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(`Error saving changes: ${error.message}`);\n\t\t\t}\n\t\t},\n\t\t500,\n\t\t{ maxWait: 2000 },\n\t);\n\n\tconst handleFileChange = useCallback(\n\t\tasync (fileData: string) => {\n\t\t\tif (!fileData) {\n\t\t\t\tsetValue(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetValue(fileData);\n\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\tsetValueMutation.mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: field.id,\n\t\t\t\t\t\t\tvalue: fileData,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error: any) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(`Error saving changes: ${error.message}`);\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tfield.id,\n\t\t\tfield.name,\n\t\t\tparentId,\n\t\t\tqueryClient.invalidateQueries,\n\t\t\tsetValueMutation.mutateAsync,\n\t\t],\n\t);\n\n\tconst handleSaveDropdownChanges = useDebouncedCallback(\n\t\tasync (field, value, added: boolean = true) => {\n\t\t\tif (!field) return console.warn(\"No field provided for saving changes\");\n\t\t\tconst isValid = validateAndSetError(value);\n\n\t\t\tif (!isValid) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Invalid value for ${field.name} (${field.type}): ${value}`,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait toast.promise(\n\t\t\t\t\t(added\n\t\t\t\t\t\t? addExistingNodeMutation\n\t\t\t\t\t\t: removeFromListMutation\n\t\t\t\t\t).mutateAsync(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode_id: field.id,\n\t\t\t\t\t\t\tid: value,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnode_id: Number.parseInt(parentId),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tloading: `Enregistrement de ${shortenAndFormatLabel(field.name)}...`,\n\t\t\t\t\t\tsuccess: `Changements enregistrés pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t\terror: `Erreur lors de l'enregistrement des changements pour ${shortenAndFormatLabel(field.name)}`,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error: any) {\n\t\t\t\tconsole.error(\"Error saving changes:\", error);\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(`Error saving changes: ${error.message}`);\n\t\t\t}\n\t\t},\n\t);\n\n\tconst handleValueChange = useCallback(\n\t\t(value: any, _f = undefined) => {\n\t\t\tconst isValid = validateFieldValue(field.type, value, validations);\n\t\t\tsetError(!isValid);\n\t\t\tif (!isValid) {\n\t\t\t\tsetErrorMessage(getErrorMessage(field.type, value, validations));\n\t\t\t} else {\n\t\t\t\tsetErrorMessage(\"\");\n\t\t\t}\n\n\t\t\thandleSaveChanges(field);\n\t\t\tsetValue(value);\n\t\t},\n\t\t[field, handleSaveChanges, validations],\n\t);\n\n\tconst handleDropdownValueChange = useCallback(\n\t\t(value: any) => {\n\t\t\t// Validate immediately for user feedback\n\t\t\tconst isValid = validateFieldValue(field.type, value?.value, validations);\n\t\t\tsetError(!isValid);\n\t\t\tif (!isValid) {\n\t\t\t\tsetErrorMessage(getErrorMessage(field.type, value?.value, validations));\n\t\t\t} else {\n\t\t\t\tsetErrorMessage(\"\");\n\t\t\t}\n\n\t\t\thandleSaveDropdownChanges(field, value?.value);\n\t\t\tsetValue(value);\n\t\t},\n\t\t[field, handleSaveDropdownChanges, validations],\n\t);\n\n\tconst handleFirstValueChange = useCallback((value: any) => {\n\t\tsetValue(value);\n\t}, []);\n\n\tconst handleMultiDropdownValueChange = useCallback(\n\t\t(newValue: any) => {\n\t\t\tconst isValid = validateAndSetError(newValue);\n\n\t\t\tif (!isValid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst oldValues = value || [];\n\t\t\tconst newValues = newValue || [];\n\n\t\t\tconst addedValues = newValues.filter(\n\t\t\t\t(newItem: any) =>\n\t\t\t\t\t!oldValues.some((oldItem: any) => oldItem.value === newItem.value),\n\t\t\t);\n\n\t\t\tif (addedValues.length > 0) {\n\t\t\t\taddedValues.forEach((addedItem: any) => {\n\t\t\t\t\thandleSaveDropdownChanges(field, addedItem.value);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst removedValues = oldValues.filter(\n\t\t\t\t(oldItem: any) =>\n\t\t\t\t\t!newValues.some((newItem: any) => newItem.value === oldItem.value),\n\t\t\t);\n\n\t\t\tif (removedValues.length > 0) {\n\t\t\t\tremovedValues.forEach((removedItem: any) => {\n\t\t\t\t\thandleSaveDropdownChanges(field, removedItem.value, false);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetValue(newValue);\n\t\t},\n\t\t[field, handleSaveDropdownChanges, value, validateAndSetError],\n\t);\n\n\tconst handleMultiDropdownFirstChange = useCallback(\n\t\t(newValue: any) => setValue(newValue),\n\t\t[],\n\t);\n\n\tconst handleChangingForm = useCallback(() => {\n\t\tonChangingForm(name, id);\n\t}, [onChangingForm, name, id]);\n\n\tconst handleToggleField = useCallback(() => {\n\t\tonToggleField(fieldKey, id);\n\t}, [onToggleField, fieldKey, id]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\thandleSaveChanges.flush();\n\t\t};\n\t}, [handleSaveChanges]);\n\n\treturn (\n\t\t<Box key={fieldKey} className=\"form-field-wrapper\" sx={{ p: 1 }}>\n\t\t\t<Grid container className=\"form-field\" spacing={2} alignItems=\"center\">\n\t\t\t\t<Grid size={{ xs: 12, sm: 4 }}>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tcomponent=\"fieldset\"\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={handleChangingForm}\n\t\t\t\t\t\t\ttitle={fieldKey}\n\t\t\t\t\t\t\tsx={{ textAlign: \"left\", justifyContent: \"flex-start\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tfontWeight=\"medium\"\n\t\t\t\t\t\t\t\tcolor={isValid === false ? \"error\" : \"primary\"}\n\t\t\t\t\t\t\t\tsx={{ fontWeight: isValid === false ? \"bold\" : \"regular\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{shortenAndFormatLabel(name)}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{!(\n\t\t\t\t\t\t\ttypeComponent.includes(type) ||\n\t\t\t\t\t\t\t(listField.includes(type) && field.listType !== \"LIST\")\n\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t<Box className=\"toggle-wrapper\" textAlign=\"right\">\n\t\t\t\t\t\t\t\t<IconButton onClick={handleToggleField} size=\"small\">\n\t\t\t\t\t\t\t\t\t{isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid size={{ xs: 12, sm: 6 }}>\n\t\t\t\t\t{listField.includes(type) && field.listType === \"CHECKBOX\" && (\n\t\t\t\t\t\t<ListCheckboxField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{inputTextField.includes(type) && (\n\t\t\t\t\t\t<TextFormField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{dateField.includes(type) && (\n\t\t\t\t\t\t<DateFormField\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{checkboxField.includes(type) && (\n\t\t\t\t\t\t<CheckboxFormField\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{imageField.includes(type) && isExpanded && (\n\t\t\t\t\t\t<ImageFormField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{listField.includes(type) && field.listType === \"DROPDOWN\" && (\n\t\t\t\t\t\t<DropdownField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value ?? null}\n\t\t\t\t\t\t\tonChange={handleDropdownValueChange}\n\t\t\t\t\t\t\tonFirstChange={handleFirstValueChange}\n\t\t\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{listField.includes(type) && field.listType === \"MULTIDROPDOWN\" && (\n\t\t\t\t\t\t<MultiDropdownField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value ?? []}\n\t\t\t\t\t\t\tonChange={handleMultiDropdownValueChange}\n\t\t\t\t\t\t\tonFirstChange={handleMultiDropdownFirstChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{listField.includes(type) && field.listType === \"RADIO\" && (\n\t\t\t\t\t\t<RadioField\n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tfieldKey={fieldKey}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\tonFirstChange={handleFirstValueChange}\n\t\t\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={error ? errorMessage : \"\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{fileField.includes(type) && (\n\t\t\t\t\t\t<PdfFormField\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleFileChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={errorMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{colorField.includes(type) && (\n\t\t\t\t\t\t<ColorPickerField\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\thelperText={errorMessage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\n// Wrap with React.memo to prevent unnecessary re-renders\nexport default React.memo(FormField, (prevProps, nextProps) => {\n\t// Only re-render if this specific field's data has changed\n\treturn (\n\t\tprevProps.fieldKey === nextProps.fieldKey &&\n\t\tprevProps.isExpanded === nextProps.isExpanded &&\n\t\tprevProps.onToggleField === nextProps.onToggleField &&\n\t\tprevProps.defaultValue === nextProps.defaultValue\n\t);\n});\n","import { Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { createKey, listField, typeComponent } from \"@/utils/utils\";\nimport FormField from \"./FormField.js\";\nimport NestedFields from \"./NestedFields\";\n\nconst FieldRenderer = ({\n\tparentId,\n\tfields,\n\tvisited = new Set(),\n\texpandedFields,\n\ttoggleField,\n\thandleChangingForm,\n\trootId,\n}: {\n\tparentId: string;\n\tfields: any[];\n\tvisited?: Set<any>;\n\texpandedFields: any;\n\ttoggleField: (fieldName: string, nodeId: string) => void;\n\thandleChangingForm: (name: string, id: string) => void;\n\trootId: number;\n}) => {\n\tif (!fields || !Array.isArray(fields)) return null;\n\n\treturn fields.map((subField) => {\n\t\tconst { id, name, type } = subField;\n\t\tif (!name || name === \"graph\") return null;\n\t\tconst subFieldKey = createKey(subField.id, subField.name);\n\n\t\tif (visited.has(id)) {\n\t\t\treturn (\n\t\t\t\t<Typography key={`cycle-${id}`} color=\"error\">\n\t\t\t\t\tCircular reference detected for {name}\n\t\t\t\t</Typography>\n\t\t\t);\n\t\t}\n\n\t\tconst isFieldExpanded = expandedFields[subFieldKey] || false;\n\n\t\treturn (\n\t\t\t<React.Fragment key={subFieldKey}>\n\t\t\t\t<FormField\n\t\t\t\t\tfield={subField}\n\t\t\t\t\tfieldKey={subFieldKey}\n\t\t\t\t\tisExpanded={isFieldExpanded}\n\t\t\t\t\tonToggleField={toggleField}\n\t\t\t\t\tonChangingForm={handleChangingForm}\n\t\t\t\t\tdefaultValue={subField.value}\n\t\t\t\t\tparentId={parentId}\n\t\t\t\t/>\n\n\t\t\t\t{!(\n\t\t\t\t\ttypeComponent.includes(type) ||\n\t\t\t\t\t(listField.includes(type) && subField.listType !== \"LIST\")\n\t\t\t\t) && (\n\t\t\t\t\t<NestedFields\n\t\t\t\t\t\tfieldKey={subFieldKey}\n\t\t\t\t\t\tfield={subField}\n\t\t\t\t\t\trootId={rootId}\n\t\t\t\t\t\tisToggle={isFieldExpanded}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t});\n};\n\nexport default FieldRenderer;\n","import { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { Box, Button, Stack, Typography } from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { createKey, listField } from \"@/utils/utils\";\nimport ExistingNodeSelector from \"./ExistingNodeSelector\";\nimport FieldRenderer from \"./FieldRenderer\";\n\nconst NestedFields = ({\n\tfieldKey,\n\tfield,\n\trootId,\n\tisRoot = false,\n\tisToggle = false,\n}: {\n\tfieldKey: string;\n\tfield: any;\n\trootId: number;\n\tisRoot?: boolean;\n\tisToggle?: boolean;\n}) => {\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: loading,\n\t\terror,\n\t\trefetch,\n\t} = useApiData(\n\t\t`class_attribute_field`,\n\t\t{\n\t\t\tnode_id:\n\t\t\t\ttypeof field.id === \"string\" ? Number.parseInt(field.id) : field.id,\n\t\t},\n\t\t{\n\t\t\tenabled: isToggle || isRoot,\n\t\t},\n\t);\n\n\tconst navigate = useNavigate();\n\tconst queryClient = useQueryClient();\n\n\tconst jumpToId = useApiMutation(\"jump\");\n\tconst addNode = useApiMutation(\"add_node\");\n\tconst listExistingNode = useApiMutation(\"list_existing_node\");\n\tconst addExistingNode = useApiMutation(\"add_existing_node\");\n\n\tconst [expandedFields, setExpandedFields] = useState<any>({});\n\tconst [showExistingNodeCard, setShowExistingNodeCard] =\n\t\tuseState<boolean>(false);\n\tconst [existingNodeList, setExistingNodeList] = useState<any[]>([]);\n\tconst [selectedField, setSelectedField] = useState<any>(null);\n\tconst [loadingExistingNodes, setLoadingExistingNodes] =\n\t\tuseState<boolean>(false);\n\n\t// Handle functions - memoized to prevent unnecessary re-renders\n\n\tconst handleChangingForm = useCallback(\n\t\tasync (_name: string, id: string) => {\n\t\t\ttry {\n\t\t\t\tawait jumpToId.mutateAsync({ node_id: id });\n\t\t\t\tawait navigate(`/add-node/form/${id}`);\n\t\t\t\twindow.location.reload();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error changing form:\", error);\n\t\t\t}\n\t\t},\n\t\t[jumpToId, navigate],\n\t);\n\n\tconst { id, type, name } = field;\n\n\t// Use a ref to store the expanded fields state to prevent unnecessary rerenders\n\tconst expandedFieldsRef = useRef(expandedFields);\n\n\t// Update the ref whenever expandedFields changes\n\tuseEffect(() => {\n\t\texpandedFieldsRef.current = expandedFields;\n\t}, [expandedFields]);\n\n\tconst toggleField = useCallback(\n\t\tasync (fieldName: string, _nodeId: string) => {\n\t\t\t// Get the current expanded state from the ref\n\t\t\tconst currentExpandedState = expandedFieldsRef.current[fieldName];\n\n\t\t\t// Only update the specific field that was toggled\n\t\t\tsetExpandedFields((prev: any) => {\n\t\t\t\t// Create a new object that only updates the specific field\n\t\t\t\treturn {\n\t\t\t\t\t...prev,\n\t\t\t\t\t[fieldName]: !currentExpandedState,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\t[],\n\t);\n\n\tconst handleAddNewNode = useCallback(\n\t\tasync (field: any) => {\n\t\t\tconst id = field?.id;\n\t\t\tconst fullName = field?.listNodeType;\n\n\t\t\ttry {\n\t\t\t\tconst _data = await addNode.mutateAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tBNodeClass: fullName,\n\t\t\t\t\t\tnode_id: id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode_id: id,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error adding new node:\", error);\n\t\t\t}\n\t\t},\n\t\t[addNode, queryClient.invalidateQueries],\n\t);\n\n\tconst handleListExistingNode = useCallback(\n\t\tasync (field: any) => {\n\t\t\tsetSelectedField(field);\n\t\t\tsetShowExistingNodeCard(true);\n\t\t\tsetLoadingExistingNodes(true);\n\n\t\t\tconst shortName = field.listNodeType.split(\".\").pop();\n\n\t\t\ttry {\n\t\t\t\tconst data = await listExistingNode.mutateAsync({ type: shortName });\n\t\t\t\tconst result = data?.data?.results?.[0]?.result?.data || [];\n\t\t\t\tsetExistingNodeList(result);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error fetching class attribute field:\", error);\n\t\t\t} finally {\n\t\t\t\tsetLoadingExistingNodes(false);\n\t\t\t}\n\t\t},\n\t\t[listExistingNode],\n\t);\n\n\tconst handleAddExistingNode = useCallback(\n\t\tasync (node: any) => {\n\t\t\ttry {\n\t\t\t\tawait addExistingNode.mutateAsync(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\tnode_id: field.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\t\t\t\t\tqueryKey: [\n\t\t\t\t\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode_id: field.id,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tjumpToId.mutate({ node_id: rootId });\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error adding existing node:\", error);\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\taddExistingNode,\n\t\t\tjumpToId,\n\t\t\trootId,\n\t\t\tfield.id,\n\t\t\tqueryClient.invalidateQueries,\n\t\t],\n\t);\n\n\tconst handleSelectExistingNode = useCallback(\n\t\t(node: any, _selectedField: any) => {\n\t\t\thandleAddExistingNode(node);\n\t\t\tsetShowExistingNodeCard(false);\n\t\t},\n\t\t[handleAddExistingNode],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!loading && rawApiData) {\n\t\t\tconst initialValues: {\n\t\t\t\t[key: string]: any;\n\t\t\t} = {};\n\t\t\tconst initialFieldData: {\n\t\t\t\t[key: string]: any;\n\t\t\t} = {};\n\n\t\t\tconst allFields =\n\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes || [];\n\n\t\t\tallFields.forEach((field: any) => {\n\t\t\t\tif (field.name && field.value !== \"null\" && field.value !== undefined) {\n\t\t\t\t\tconst fieldKey = createKey(field.id, field.name);\n\t\t\t\t\tinitialValues[fieldKey] = field.value;\n\t\t\t\t\tinitialFieldData[fieldKey] = field;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [loading, rawApiData]);\n\n\tconst subfieldData =\n\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes || [];\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{isRoot ? (\n\t\t\t\t<Box\n\t\t\t\t\tcomponent=\"form\"\n\t\t\t\t\tclassName=\"form-fields\"\n\t\t\t\t\tonSubmit={(e) => e.preventDefault()}\n\t\t\t\t\tsx={{ mt: 3 }}\n\t\t\t\t>\n\t\t\t\t\t{subfieldData.length > 0 ? (\n\t\t\t\t\t\t<FieldRenderer\n\t\t\t\t\t\t\tparentId={field.id}\n\t\t\t\t\t\t\tfields={subfieldData}\n\t\t\t\t\t\t\texpandedFields={expandedFields}\n\t\t\t\t\t\t\ttoggleField={toggleField}\n\t\t\t\t\t\t\thandleChangingForm={handleChangingForm}\n\t\t\t\t\t\t\trootId={rootId}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Typography>No fields available.</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t<Box\n\t\t\t\t\tclassName=\"nested-fields\"\n\t\t\t\t\tsx={{ mt: 2, pl: 2, borderLeft: \"1px solid #e0e0e0\" }}\n\t\t\t\t>\n\t\t\t\t\t{isToggle &&\n\t\t\t\t\t\t(subfieldData.length > 0 ? (\n\t\t\t\t\t\t\t<FieldRenderer\n\t\t\t\t\t\t\t\tparentId={field.id}\n\t\t\t\t\t\t\t\tfields={subfieldData}\n\t\t\t\t\t\t\t\texpandedFields={expandedFields}\n\t\t\t\t\t\t\t\ttoggleField={toggleField}\n\t\t\t\t\t\t\t\thandleChangingForm={handleChangingForm}\n\t\t\t\t\t\t\t\trootId={rootId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\n\t\t\t\t\t\t\t\tNo subfields available for this.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t{listField.includes(type) && isToggle && field.canAddNewNode && (\n\t\t\t\t\t\t<Stack\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\tclassName=\"add-new-node\"\n\t\t\t\t\t\t\tsx={{ mt: 2 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{field.allowCreation ?? (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => handleAddNewNode(field)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd new {name}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\t\t\t\tonClick={() => handleListExistingNode(field)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd {name} from Existing Node\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t<ExistingNodeSelector\n\t\t\t\tshow={showExistingNodeCard}\n\t\t\t\tselectedField={selectedField}\n\t\t\t\texistingNodeList={existingNodeList}\n\t\t\t\tloadingExistingNodes={loadingExistingNodes}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tsetShowExistingNodeCard(false);\n\t\t\t\t\tjumpToId.mutate({ node_id: rootId });\n\t\t\t\t}}\n\t\t\t\tonSelectNode={handleSelectExistingNode}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default React.memo(NestedFields, (prevProps, nextProps) => {\n\treturn (\n\t\tprevProps.fieldKey === nextProps.fieldKey &&\n\t\tprevProps.rootId === nextProps.rootId &&\n\t\tprevProps.isToggle === nextProps.isToggle\n\t);\n});\n","import { useParams } from \"react-router\";\nimport \"./FormPage.css\";\nimport { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n\tBox,\n\tButton,\n\tCircularProgress,\n\tContainer,\n\tIconButton,\n\tPaper,\n\tSpeedDial,\n\tSpeedDialAction,\n\tSpeedDialIcon,\n\tTypography,\n} from \"@mui/material\";\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { saveAs } from \"file-saver\";\nimport { useNavigate } from \"react-router\";\nimport { createKey, shortenAndFormatLabel } from \"@/utils/utils\";\nimport NestedFields from \"./FormComponents/NestedFields\";\n\nconst FormPage = () => {\n\tconst { rootId: rawRootId } = useParams();\n\n\tconst rootId = rawRootId ? parseInt(rawRootId) : 0;\n\n\tconst queryClient = useQueryClient();\n\tconst navigate = useNavigate();\n\tconst {\n\t\tdata: rawApiData,\n\t\tisLoading: loading,\n\t\terror,\n\t\trefetch,\n\t} = useApiData(`class_attribute_field`, {\n\t\tnode_id: rootId,\n\t});\n\tconst pageName =\n\t\trawApiData?.data?.results?.[0]?.result?.data?.currentNode?.name;\n\tconst exportCSVMutation = useApiMutation(\"export_csv\");\n\tconst removeNodeMutation = useApiMutation(\"remove_node\");\n\tconst searchNodeMutation = useApiMutation(\"search_node\", {\n\t\tonSuccess: async () => {\n\t\t\tawait queryClient.invalidateQueries({\n\t\t\t\tqueryKey: [\n\t\t\t\t\t\"apiData\",\n\t\t\t\t\t\"class_attribute_field\",\n\t\t\t\t\t{\n\t\t\t\t\t\tnode_id:\n\t\t\t\t\t\t\trawApiData?.data?.results?.[0]?.result?.data?.attributes?.filter(\n\t\t\t\t\t\t\t\t(attribute: any) => attribute.name === \"results\",\n\t\t\t\t\t\t\t)[0].id,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t},\n\t});\n\n\tif (loading)\n\t\treturn (\n\t\t\t<Box\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\theight=\"100vh\"\n\t\t\t>\n\t\t\t\t<CircularProgress />\n\t\t\t</Box>\n\t\t);\n\tif (error)\n\t\treturn (\n\t\t\t<Typography color=\"error\">\n\t\t\t\tError loading form fields: {error.message || \"Unknown error\"}\n\t\t\t</Typography>\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\tclassName=\"form-page\"\n\t\t\t\tcomponent={Paper}\n\t\t\t\televation={3}\n\t\t\t\tsx={{ p: 3, position: \"relative\" }}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName=\"close-button\"\n\t\t\t\t\tonClick={() => navigate(-1)}\n\t\t\t\t\taria-label=\"close\"\n\t\t\t\t\tsx={{ position: \"absolute\", top: 16, right: 16 }}\n\t\t\t\t>\n\t\t\t\t\t<CloseRoundedIcon />\n\t\t\t\t</IconButton>\n\n\t\t\t\t<Typography variant=\"h4\" component=\"h1\" gutterBottom>\n\t\t\t\t\tForm for: {shortenAndFormatLabel(pageName)}\n\t\t\t\t</Typography>\n\n\t\t\t\t<NestedFields\n\t\t\t\t\tfieldKey={createKey(rootId, pageName)}\n\t\t\t\t\trootId={rootId}\n\t\t\t\t\tisRoot\n\t\t\t\t\tfield={{\n\t\t\t\t\t\tid: rootId,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{rawApiData?.data?.results?.[0]?.result?.data.currentNode?.type ===\n\t\t\t\t\"SearchForm\" ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsx={{}}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsearchNodeMutation.mutate({\n\t\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tRechercher\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t\t<SpeedDial\n\t\t\t\tariaLabel=\"SpeedDial playground example\"\n\t\t\t\tsx={{ position: \"absolute\", bottom: 16, right: 16 }}\n\t\t\t\thidden={false}\n\t\t\t\ticon={<SpeedDialIcon />}\n\t\t\t>\n\t\t\t\t{[\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <DownloadIcon />,\n\t\t\t\t\t\tname: \"Exporter\",\n\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\tconst response = await exportCSVMutation.mutateAsync({\n\t\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\t\tincludeAllFields: true,\n\t\t\t\t\t\t\t\tmaxDepth: 4,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tconst blob = new Blob(\n\t\t\t\t\t\t\t\t[response?.data?.results?.[0]?.result?.data],\n\t\t\t\t\t\t\t\t{ type: \"text/csv\" },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsaveAs(blob, `${pageName}.csv`);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <AddIcon />,\n\t\t\t\t\t\tname: \"Ajouter une nouvelle entrée\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <DeleteIcon />,\n\t\t\t\t\t\tname: \"Supprimer\",\n\t\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\t\tawait removeNodeMutation.mutateAsync(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnode_id: rootId,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tonSuccess: async () => {\n\t\t\t\t\t\t\t\t\t\tawait refetch();\n\t\t\t\t\t\t\t\t\t\tnavigate(-1);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t].map((action) => (\n\t\t\t\t\t<SpeedDialAction\n\t\t\t\t\t\tkey={action.name}\n\t\t\t\t\t\ticon={action.icon}\n\t\t\t\t\t\ttooltipTitle={action.name}\n\t\t\t\t\t\tonClick={action.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SpeedDial>\n\t\t</>\n\t);\n};\n\nexport default FormPage;\n"],"names":["shortenAndFormatLabel","label","spaced","createKey","id","name","getErrorMessage","type","value","validations","Array","undefined","len","RegExp","validateFieldValue","isValid","message","dayjs","inputTextField","checkboxField","dateField","imageField","fileField","listField","colorField","typeComponent","React","show","selectedField","existingNodeList","loadingExistingNodes","onClose","onSelectNode","searchQuery","setSearchQuery","useState","handleSearchChange","useCallback","e","handleClose","filteredNodeList","useMemo","node","handleSelectNode","Modal","Box","Card","CardHeader","IconButton","CloseRoundedIcon","CardContent","TextField","CircularProgress","Typography","Stack","onFocus","onChange","error","helperText","rest","Sketch","color","fieldKey","FormControlLabel","Checkbox","minDate","maxDate","field","internalValue","setInternalValue","internalError","setInternalError","useEffect","displayError","displayHelperText","FormControl","DatePicker","newValue","context","FormHelperText","_field_listNodeType","_rawApiData_data_results__result_data_attributes","_rawApiData_data_results__result_data_attributes1","_listData_data_results__result","_listData_data_results__result_data","_listData_data_results__result2","defaultValue","onFirstChange","multiple","shortName","choices","hasStaticChoices","rawApiData","rawApiDataLoading","rawApiDataError","useApiData","_rawApiData_data_results__result_data_attributes_map","data","listData","isLoading","isError","apiError","_listData_data_results__result1","Number","existingOption","option","Autocomplete","params","choice","_choice_","_option_name_","firstLetter","a","b","_option_value","_option_label","_event","Button","_e_target_files","file","reader","FileReader","_reader_result","ListCheckboxComponent","fieldId","setValue","setValueMutation","useApiMutation","queryClient","useQueryClient","handleSaveChanges","useDebouncedCallback","console","toast","_data_data_results__result_data_attributes","FormGroup","index","DropdownField","pdfjs","URL","fileUrl","setFileUrl","byteCharacters","atob","byteNumbers","i","blob","Blob","Uint8Array","Paper","window","Document","PictureAsPdfIcon","Page","event","selectedFile","alert","_field_choices","RadioGroup","Radio","inputProps","getInputType","isExpanded","onToggleField","onChangingForm","parentId","source","setError","errorMessage","setErrorMessage","addExistingNodeMutation","removeFromListMutation","validateAndSetError","currentValue","validationResult","handleFileChange","fileData","handleSaveDropdownChanges","added","handleValueChange","_f","handleDropdownValueChange","handleFirstValueChange","handleMultiDropdownValueChange","oldValues","newValues","addedValues","newItem","oldItem","addedItem","removedValues","removedItem","handleMultiDropdownFirstChange","handleChangingForm","handleToggleField","Grid","ExpandLessIcon","ExpandMoreIcon","ListCheckboxField","TextFormField","DateFormField","CheckboxFormField","ImageFormField","MultiDropdownField","RadioField","PdfFormField","ColorPickerField","prevProps","nextProps","fields","visited","Set","expandedFields","toggleField","rootId","subField","subFieldKey","isFieldExpanded","FormField","NestedFields","_rawApiData_data_results__result_data","_field_allowCreation","isRoot","isToggle","loading","refetch","navigate","useNavigate","jumpToId","addNode","listExistingNode","addExistingNode","setExpandedFields","showExistingNodeCard","setShowExistingNodeCard","setExistingNodeList","setSelectedField","setLoadingExistingNodes","_name","expandedFieldsRef","useRef","fieldName","_nodeId","currentExpandedState","prev","handleAddNewNode","fullName","handleListExistingNode","_data_data_results__result","result","handleAddExistingNode","handleSelectExistingNode","_selectedField","initialValues","initialFieldData","allFields","subfieldData","FieldRenderer","AddIcon","ExistingNodeSelector","_rawApiData_data_results__result_data_currentNode","_rawApiData_data_results__result_data_currentNode1","rawRootId","useParams","parseInt","pageName","exportCSVMutation","removeNodeMutation","searchNodeMutation","attribute","Container","SpeedDial","SpeedDialIcon","DownloadIcon","_response_data_results__result","response","saveAs","DeleteIcon","action","SpeedDialAction"],"mappings":"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"}