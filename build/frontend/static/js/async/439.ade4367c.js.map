{"version":3,"file":"static/js/async/439.ade4367c.js","sources":["webpack://login_page/./node_modules/@mui/icons-material/esm/Fullscreen.js","webpack://login_page/./node_modules/@mui/icons-material/esm/FullscreenExit.js","webpack://login_page/./src/Components/InformationPage/InformationPage.tsx","webpack://login_page/./node_modules/@mui/material/esm/Zoom/Zoom.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7 14H5v5h5v-2H7zm-2-4h2V7h3V5H5zm12 7h-3v2h5v-5h-2zM14 5v2h3v3h2V5z\"\n}), 'Fullscreen');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z\"\n}), 'FullscreenExit');","import React, { useCallback, useEffect, useMemo, Suspense, memo } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Box, IconButton, Typography, Fade, Zoom, Button } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\";\nimport FullscreenExitIcon from \"@mui/icons-material/FullscreenExit\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport \"./InformationPage.css\";\nimport { useTitle } from \"@global/useTitle\";\nimport { View } from \"@common/View\";\nimport ErrorBoundary from \"@components/ErrorBoundary\";\nimport {\n  LoadingStates,\n  useLoadingState,\n} from \"@components/Loading/LoadingComponents\";\nimport {\n  useOptimizedState,\n  useOptimizedDebounce,\n  startTransition,\n  useDeferredValue,\n} from \"@hooks/react19\";\n\n// Enhanced InformationPage with React 19 optimizations\nconst InformationPage = memo(() => {\n  const { viewId } = useParams<{ viewId: string }>();\n  const navigate = useNavigate();\n  const { isLoading: isTransitioning, withLoading } = useLoadingState();\n\n  // React 19 optimized state management\n  const [isFullscreen, setIsFullscreen, isFullscreenUpdating] =\n    useOptimizedState(false, {\n      transitionUpdates: true,\n    });\n\n  const [isVisible, setIsVisible, isVisibleUpdating] = useOptimizedState(\n    false,\n    {\n      transitionUpdates: true,\n    },\n  );\n\n  const [error, setError, isErrorUpdating] = useOptimizedState<string | null>(\n    null,\n    {\n      transitionUpdates: true,\n    },\n  );\n\n  // Deferred viewId for better performance during navigation\n  const deferredViewId = useDeferredValue(viewId);\n\n  // Debounced error clearing\n  const [errorToClear, setErrorToClear] = useOptimizedState<string | null>(\n    null,\n    {\n      debounceMs: 5000,\n      transitionUpdates: true,\n    },\n  );\n  const [debouncedErrorClear] = useOptimizedDebounce(errorToClear, 5000);\n\n  // Clear error after debounce\n  useEffect(() => {\n    if (debouncedErrorClear) {\n      setError(null);\n      setErrorToClear(null);\n    }\n  }, [debouncedErrorClear, setError, setErrorToClear]);\n\n  // Memoized title computation\n  const pageTitle = useMemo(() => {\n    if (!deferredViewId) return \"Information\";\n    return `Information - ${deferredViewId.replaceAll(\"_\", \" \")}`;\n  }, [deferredViewId]);\n\n  useTitle(pageTitle);\n\n  // Enhanced navigation handler with startTransition\n  const handleNavigation = useCallback(\n    (path: string) => {\n      withLoading(async () => {\n        startTransition(() => {\n          navigate(path);\n        });\n      });\n    },\n    [navigate, withLoading],\n  );\n\n  // Optimized close handler with error handling\n  const handleClose = useCallback(() => {\n    startTransition(() => {\n      setIsVisible(false);\n      // Add a small delay for the exit animation\n      setTimeout(() => {\n        handleNavigation(\"/home\");\n      }, 200);\n    });\n  }, [handleNavigation, setIsVisible]);\n\n  // Fullscreen toggle handler with error boundary\n  const handleFullscreenToggle = useCallback(() => {\n    try {\n      startTransition(() => {\n        setIsFullscreen((prev) => !prev);\n      });\n    } catch (err) {\n      setError(\"Failed to toggle fullscreen mode\");\n      setErrorToClear(\"clear\");\n    }\n  }, [setIsFullscreen, setError, setErrorToClear]);\n\n  // Refresh handler with loading state\n  const handleRefresh = useCallback(() => {\n    withLoading(async () => {\n      try {\n        startTransition(() => {\n          window.location.reload();\n        });\n      } catch (err) {\n        setError(\"Failed to refresh page\");\n        setErrorToClear(\"clear\");\n      }\n    });\n  }, [withLoading, setError, setErrorToClear]);\n\n  // Enhanced keyboard handler with proper cleanup and error handling\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      try {\n        switch (event.key) {\n          case \"Escape\":\n            event.preventDefault();\n            handleClose();\n            break;\n          case \"F11\":\n            event.preventDefault();\n            handleFullscreenToggle();\n            break;\n          case \"F5\":\n            if (event.ctrlKey) {\n              event.preventDefault();\n              handleRefresh();\n            }\n            break;\n          default:\n            break;\n        }\n      } catch (err) {\n        setError(\"Keyboard shortcut failed\");\n        setErrorToClear(\"clear\");\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Set visible state after mount for animation\n    const timer = setTimeout(() => {\n      startTransition(() => {\n        setIsVisible(true);\n      });\n    }, 50);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      clearTimeout(timer);\n    };\n  }, [\n    handleClose,\n    handleFullscreenToggle,\n    handleRefresh,\n    setIsVisible,\n    setError,\n    setErrorToClear,\n  ]);\n\n  // Redirect if no viewId with error handling\n  useEffect(() => {\n    if (!viewId) {\n      setError(\"No view ID provided\");\n      setTimeout(() => {\n        handleNavigation(\"/home\");\n      }, 3000);\n    }\n  }, [viewId, handleNavigation, setError]);\n\n  // Error fallback component with retry functionality\n  const InformationErrorFallback = useCallback(\n    ({\n      error: errorMsg,\n      resetError,\n    }: {\n      error?: Error;\n      resetError?: () => void;\n    }) => (\n      <ErrorBoundary>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n            padding: 3,\n            backgroundColor: \"#f5f5f5\",\n          }}\n        >\n          <Box sx={{ textAlign: \"center\", mb: 3 }}>\n            <Box\n              component=\"span\"\n              sx={{ fontSize: \"3rem\", mb: 2, display: \"block\" }}\n            >\n              📄\n            </Box>\n            <Typography variant=\"h4\" color=\"error\" gutterBottom>\n              Information Page Error\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n              Unable to load the information page for \"{viewId}\".\n            </Typography>\n            {errorMsg && (\n              <Typography variant=\"body2\" color=\"error\" sx={{ mb: 3 }}>\n                {errorMsg.message}\n              </Typography>\n            )}\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: 2,\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              onClick={resetError || handleRefresh}\n              startIcon={<RefreshIcon />}\n              color=\"primary\"\n            >\n              Retry\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={handleClose}\n              startIcon={<CloseIcon />}\n              color=\"secondary\"\n            >\n              Go Back\n            </Button>\n          </Box>\n        </Box>\n      </ErrorBoundary>\n    ),\n    [viewId, handleRefresh, handleClose],\n  );\n\n  // Loading component with enhanced styling\n  const LoadingComponent = useCallback(\n    () => (\n      <ErrorBoundary>\n        <Box\n          sx={{\n            height: \"100vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#f8f9fa\",\n          }}\n        >\n          <LoadingStates.Component message={`Loading ${deferredViewId}...`} />\n        </Box>\n      </ErrorBoundary>\n    ),\n    [deferredViewId],\n  );\n\n  // Don't render anything if no viewId\n  if (!viewId) {\n    return (\n      <InformationErrorFallback\n        error={new Error(\"No view ID provided\")}\n        resetError={() => handleNavigation(\"/home\")}\n      />\n    );\n  }\n\n  const isPendingAny =\n    isTransitioning ||\n    isFullscreenUpdating ||\n    isVisibleUpdating ||\n    isErrorUpdating;\n\n  return (\n    <ErrorBoundary\n      fallback={<InformationErrorFallback />}\n      onError={(error, errorInfo) => {\n        console.error(\n          `Information page error for ${viewId}:`,\n          error,\n          errorInfo,\n        );\n        setError(`Error: ${error.message}`);\n        setErrorToClear(\"clear\");\n      }}\n      resetKeys={[viewId]} // Reset error boundary when viewId changes\n    >\n      <Fade in={isVisible} timeout={300}>\n        <Box\n          className={`information-page ${isFullscreen ? \"fullscreen\" : \"\"}`}\n          sx={{\n            height: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            backgroundColor: \"#ffffff\",\n            position: \"relative\",\n            overflow: \"hidden\",\n            opacity: isPendingAny ? 0.8 : 1,\n            transition: \"opacity 0.2s ease-in-out\",\n          }}\n        >\n          {/* Error display */}\n          {error && (\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: 16,\n                left: \"50%\",\n                transform: \"translateX(-50%)\",\n                zIndex: 10000,\n                bgcolor: \"error.main\",\n                color: \"white\",\n                px: 2,\n                py: 1,\n                borderRadius: 1,\n              }}\n            >\n              <Typography variant=\"caption\">{error}</Typography>\n            </Box>\n          )}\n\n          {/* Header with controls */}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: { xs: 1, sm: 2 },\n              borderBottom: \"1px solid #e0e0e0\",\n              backgroundColor: \"#f8f9fa\",\n              minHeight: \"60px\",\n            }}\n          >\n            <Typography\n              variant=\"h5\"\n              component=\"h1\"\n              sx={{\n                flex: 1,\n                fontWeight: 600,\n                color: \"#1976d2\",\n                fontSize: { xs: \"1.25rem\", sm: \"1.5rem\" },\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {deferredViewId?.replaceAll(\"_\", \" \") || \"Information\"}\n            </Typography>\n\n            <Box sx={{ display: \"flex\", gap: 1 }}>\n              <Zoom\n                in={isVisible}\n                timeout={400}\n                style={{ transitionDelay: \"100ms\" }}\n              >\n                <IconButton\n                  onClick={handleRefresh}\n                  aria-label=\"refresh\"\n                  size=\"small\"\n                  disabled={isPendingAny}\n                  sx={{\n                    color: \"#666\",\n                    \"&:hover\": { color: \"#1976d2\", backgroundColor: \"#e3f2fd\" },\n                  }}\n                >\n                  <RefreshIcon />\n                </IconButton>\n              </Zoom>\n\n              <Zoom\n                in={isVisible}\n                timeout={400}\n                style={{ transitionDelay: \"200ms\" }}\n              >\n                <IconButton\n                  onClick={handleFullscreenToggle}\n                  aria-label={isFullscreen ? \"exit fullscreen\" : \"fullscreen\"}\n                  size=\"small\"\n                  disabled={isPendingAny}\n                  sx={{\n                    color: \"#666\",\n                    \"&:hover\": { color: \"#1976d2\", backgroundColor: \"#e3f2fd\" },\n                  }}\n                >\n                  {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n                </IconButton>\n              </Zoom>\n\n              <Zoom\n                in={isVisible}\n                timeout={400}\n                style={{ transitionDelay: \"300ms\" }}\n              >\n                <IconButton\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                  size=\"small\"\n                  disabled={isPendingAny}\n                  sx={{\n                    color: \"#666\",\n                    \"&:hover\": { color: \"#d32f2f\", backgroundColor: \"#ffebee\" },\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Zoom>\n            </Box>\n          </Box>\n\n          {/* Main content area */}\n          <Box\n            sx={{\n              flex: 1,\n              overflow: \"hidden\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <ErrorBoundary\n              fallback={\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    height: \"100%\",\n                    flexDirection: \"column\",\n                    gap: 2,\n                  }}\n                >\n                  <Typography color=\"error\">\n                    Failed to load view content\n                  </Typography>\n                  <Button\n                    onClick={handleRefresh}\n                    startIcon={<RefreshIcon />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Retry\n                  </Button>\n                </Box>\n              }\n              onError={(error, errorInfo) => {\n                console.error(\"View content error:\", error, errorInfo);\n                setError(`View error: ${error.message}`);\n                setErrorToClear(\"clear\");\n              }}\n            >\n              <Suspense fallback={<LoadingComponent />}>\n                <View\n                  viewId={deferredViewId || \"\"}\n                  sx={{\n                    height: \"100%\",\n                    overflow: \"auto\",\n                    backgroundColor: \"#ffffff\",\n                  }}\n                />\n              </Suspense>\n            </ErrorBoundary>\n          </Box>\n\n          {/* Loading indicator for transitions */}\n          {isPendingAny && (\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                right: 0,\n                height: \"3px\",\n                backgroundColor: \"#e0e0e0\",\n                overflow: \"hidden\",\n              }}\n            >\n              <Box\n                sx={{\n                  height: \"100%\",\n                  backgroundColor: \"#1976d2\",\n                  animation: \"loading-bar 1s ease-in-out infinite\",\n                  \"@keyframes loading-bar\": {\n                    \"0%\": { transform: \"translateX(-100%)\" },\n                    \"100%\": { transform: \"translateX(100%)\" },\n                  },\n                }}\n              />\n            </Box>\n          )}\n        </Box>\n      </Fade>\n    </ErrorBoundary>\n  );\n});\n\nInformationPage.displayName = \"InformationPage\";\n\nexport default InformationPage;\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport getReactElementRef from '@mui/utils/getReactElementRef';\nimport { useTheme } from \"../zero-styled/index.js\";\nimport { reflow, getTransitionProps } from \"../transitions/utils.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  entering: {\n    transform: 'none'\n  },\n  entered: {\n    transform: 'none'\n  }\n};\n\n/**\n * The Zoom transition can be used for the floating variant of the\n * [Button](/material-ui/react-button/#floating-action-buttons) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Zoom = /*#__PURE__*/React.forwardRef(function Zoom(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition,\n    ...other\n  } = props;\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, getReactElementRef(children), ref);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, {\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout,\n    ...other,\n    children: (state, {\n      ownerState,\n      ...restChildProps\n    }) => {\n      return /*#__PURE__*/React.cloneElement(children, {\n        style: {\n          transform: 'scale(0)',\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined,\n          ...styles[state],\n          ...style,\n          ...children.props.style\n        },\n        ref: handleRef,\n        ...restChildProps\n      });\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Zoom.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Zoom;"],"names":["InformationPage","memo","viewId","useParams","navigate","useNavigate","isTransitioning","withLoading","useLoadingState","isFullscreen","setIsFullscreen","isFullscreenUpdating","useOptimizedState","isVisible","setIsVisible","isVisibleUpdating","error","setError","isErrorUpdating","deferredViewId","useDeferredValue","errorToClear","setErrorToClear","debouncedErrorClear","useOptimizedDebounce","useEffect","pageTitle","useMemo","useTitle","handleNavigation","useCallback","path","startTransition","handleClose","setTimeout","handleFullscreenToggle","prev","err","handleRefresh","window","handleKeyDown","event","timer","clearTimeout","InformationErrorFallback","errorMsg","resetError","ErrorBoundary","Box","Typography","Button","RefreshIcon","CloseIcon","LoadingComponent","LoadingStates","Error","isPendingAny","errorInfo","console","Fade","Zoom","IconButton","FullscreenExitIcon","FullscreenIcon","Suspense","View","r","n","t"],"mappings":"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"}