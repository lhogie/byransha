{"version":3,"file":"static/js/async/701.b53a1126.js","sources":["webpack://login_page/./node_modules/@mui/icons-material/esm/Remove.js","webpack://login_page/./node_modules/@mui/icons-material/esm/AspectRatio.js","webpack://login_page/./src/Components/HomePage/HomePage.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12h-2v3h-3v2h5zM7 9h3V7H5v5h2zm14-6H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 16.01H3V4.99h18z\"\n}), 'AspectRatio');","import React, {\n  useState,\n  memo,\n  type MouseEventHandler,\n  useCallback,\n  useDeferredValue,\n  startTransition,\n  useMemo,\n  Suspense,\n  useTransition,\n} from \"react\";\nimport \"./HomePage.css\";\nimport { useNavigate } from \"react-router\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CircularProgress,\n  Typography,\n  Checkbox,\n  ListItemText,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Expand from \"@mui/icons-material/AspectRatio\";\nimport { useTitle } from \"@global/useTitle\";\nimport { useApiData, useApiMutation } from \"@hooks/useApiData\";\nimport { View } from \"@common/View\";\nimport ErrorBoundary from \"@components/ErrorBoundary\";\nimport {\n  LoadingStates,\n  useLoadingState,\n} from \"@components/Loading/LoadingComponents\";\nimport { useOptimizedState, useOptimizedDebounce } from \"@hooks/react19\";\n\n// Memoized ViewCard component with React 19 optimizations\nconst ViewCard = memo(\n  ({\n    view,\n    onClick,\n    handleViewToggle,\n  }: {\n    view: any;\n    onClick: MouseEventHandler<any>;\n    handleViewToggle: (endpoint: string) => void;\n  }) => {\n    const handleToggle = useCallback(\n      (e: React.MouseEvent) => {\n        e.preventDefault();\n        startTransition(() => {\n          handleViewToggle(view.name);\n        });\n      },\n      [handleViewToggle, view.name],\n    );\n\n    return (\n      <ErrorBoundary\n        fallback={\n          <Card\n            sx={{\n              aspectRatio: \"1\",\n              border: \"1px solid #f44336\",\n              borderRadius: 2,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              bgcolor: \"#ffebee\",\n            }}\n          >\n            <Typography color=\"error\">Error loading view</Typography>\n          </Card>\n        }\n      >\n        <Card\n          sx={{\n            cursor: \"pointer\",\n            aspectRatio: \"1\",\n            border: \"1px solid #e0e0e0\",\n            borderRadius: 2,\n            display: \"flex\",\n            flexDirection: \"column\",\n            bgcolor: view.type === \"technical\" ? \"#fff9c4\" : \"#ffffff\",\n            transition: \"all 0.2s ease-in-out\",\n            \"&:hover\": {\n              transform: \"translateY(-2px)\",\n              boxShadow: \"0 4px 12px rgba(0,0,0,0.1)\",\n            },\n          }}\n        >\n          <Box\n            sx={{\n              height: \"40px\",\n              width: \"100%\",\n              bgcolor: view.type === \"technical\" ? \"#fff8b0\" : \"#f5f5f5\",\n              borderBottom: \"1px solid #e0e0e0\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: \"grab\",\n              position: \"relative\",\n            }}\n          >\n            <Typography\n              className=\"DragHere\"\n              variant=\"caption\"\n              sx={{\n                color: \"#757575\",\n                textAlign: \"center\",\n                flex: 1,\n                px: 1,\n              }}\n            >\n              {`${view.pretty_name} - ${view.description}`}\n            </Typography>\n            <Box sx={{ display: \"flex\", position: \"absolute\", right: 4 }}>\n              <button\n                type=\"button\"\n                className=\"expand-card\"\n                onClick={onClick}\n                aria-label=\"expand\"\n                style={{\n                  background: \"none\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  padding: \"2px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Expand fontSize=\"small\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"erased-card\"\n                onClick={handleToggle}\n                aria-label=\"close\"\n                style={{\n                  background: \"none\",\n                  border: \"none\",\n                  cursor: \"pointer\",\n                  padding: \"2px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <CloseIcon fontSize=\"small\" />\n              </button>\n            </Box>\n          </Box>\n          <CardContent\n            sx={{\n              padding: { xs: \"12px\", sm: \"16px\" },\n              height: \"calc(100% - 40px)\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              overflow: \"hidden\",\n              bgcolor: view.type === \"technical\" ? \"#fff9c4\" : \"#ffffff\",\n            }}\n          >\n            <Box\n              sx={{\n                flex: 1,\n                overflow: \"auto\",\n                color: \"#424242\",\n                msOverflowStyle: \"none\",\n                scrollbarWidth: \"thin\",\n                scrollbarColor: \"#3f51b5 #e8eaf6\",\n                \"&::-webkit-scrollbar\": { width: \"6px\" },\n                \"&::-webkit-scrollbar-thumb\": {\n                  bgcolor: \"#3f51b5\",\n                  borderRadius: \"3px\",\n                },\n                \"&::-webkit-scrollbar-track\": { bgcolor: \"#e8eaf6\" },\n                wordBreak: \"break-word\",\n                overflowWrap: \"break-word\",\n                whiteSpace: \"pre-wrap\",\n                maxWidth: \"100%\",\n                fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n              }}\n            >\n              {view.error ? (\n                <Typography color=\"error\" variant=\"body2\">\n                  {view.error}\n                </Typography>\n              ) : (\n                <ErrorBoundary\n                  fallback={\n                    <Typography color=\"error\" variant=\"body2\">\n                      Error loading view\n                    </Typography>\n                  }\n                >\n                  <Suspense\n                    fallback={<LoadingStates.Inline text=\"Loading view...\" />}\n                  >\n                    <View\n                      viewId={view.name.replaceAll(\" \", \"_\")}\n                      sx={{\n                        bgcolor:\n                          view.type === \"technical\" ? \"#fff9c4\" : \"#ffffff\",\n                        width: \"100%\",\n                      }}\n                    />\n                  </Suspense>\n                </ErrorBoundary>\n              )}\n            </Box>\n          </CardContent>\n        </Card>\n      </ErrorBoundary>\n    );\n  },\n);\n\nViewCard.displayName = \"ViewCard\";\n\n// Memoized ViewGrid component using React 19 hooks\nconst ViewGrid = memo(\n  ({\n    views,\n    selectedViews,\n    columns,\n    onViewClick,\n    onViewToggle,\n  }: {\n    views: any[];\n    selectedViews: string[];\n    columns: number;\n    onViewClick: (view: any) => void;\n    onViewToggle: (endpoint: string) => void;\n  }) => {\n    // Use regular filtered views\n    const visibleViews = views.filter((view) =>\n      selectedViews.includes(view.name),\n    );\n    const deferredVisibleViews = useDeferredValue(visibleViews);\n    const rowColumns = Math.min(columns, deferredVisibleViews.length);\n\n    return (\n      <ErrorBoundary\n        fallback={\n          <Box sx={{ textAlign: \"center\", p: 3, color: \"error.main\" }}>\n            <Typography>Error loading view grid</Typography>\n          </Box>\n        }\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: { xs: 2, sm: 4 },\n            opacity: 1,\n            transition: \"opacity 0.2s ease-in-out\",\n          }}\n        >\n          {deferredVisibleViews.map((view) => (\n            <Box\n              key={view.name}\n              sx={{\n                width: {\n                  xs: \"100%\",\n                  sm: `calc(${100 / Math.min(columns, 2)}% - 16px)`,\n                  md: `calc(${100 / rowColumns}% - 32px)`,\n                },\n              }}\n            >\n              <ViewCard\n                view={view}\n                onClick={(e) => {\n                  if (e.defaultPrevented) return;\n                  onViewClick(view);\n                }}\n                handleViewToggle={onViewToggle}\n              />\n            </Box>\n          ))}\n        </Box>\n      </ErrorBoundary>\n    );\n  },\n);\n\nViewGrid.displayName = \"ViewGrid\";\n\nconst HomePage = memo(() => {\n  const navigate = useNavigate();\n  const { data, isLoading, error } = useApiData(\n    \"endpoints?only_applicable&type=byransha.web.View\",\n    {},\n    {\n      staleTime: 30000,\n      gcTime: 5 * 60 * 1000,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: true,\n    },\n  );\n  const { isLoading: isTransitioning, withLoading } = useLoadingState();\n\n  useTitle(\"Home\");\n\n  // Use React 19 optimized state management\n  const [columns, setColumns, isColumnsUpdating] = useOptimizedState(2, {\n    transitionUpdates: true,\n    deferUpdates: false,\n  });\n\n  const [selectMenuAnchor, setSelectMenuAnchor, isMenuUpdating] =\n    useOptimizedState<HTMLButtonElement | null>(null, {\n      transitionUpdates: true,\n    });\n\n  const [selectedViews, setSelectedViews] = useState<string[]>([]);\n\n  const [showTechnicalViews, setShowTechnicalViews] = useState<boolean>(() =>\n    JSON.parse(localStorage.getItem(\"showTechnicalViews\") || \"false\"),\n  );\n\n  // Debounced search functionality (even though not visible in UI, prepared for future)\n  const [searchQuery] = useOptimizedState(\"\", {\n    transitionUpdates: true,\n    debounceMs: 300,\n  });\n  const [debouncedSearchQuery] = useOptimizedDebounce(searchQuery, 300);\n\n  const jumpToId = useApiMutation(\"jump\");\n\n  // Optimized list management for views\n  const [views, setViews] = useState<any[]>([]);\n  const [isPending] = useTransition();\n\n  // Memoized function to calculate auto column count\n  const getAutoColumnCount = useCallback(() => {\n    const width = window.innerWidth;\n    if (width < 900) return 1;\n    else if (width < 1600) return 2;\n    else if (width < 2100) return 3;\n    return 4;\n  }, []);\n\n  // Deferred values for better performance during rapid changes\n  const deferredViews = useDeferredValue(views);\n  const deferredSelectedViews = useDeferredValue(selectedViews);\n\n  // Memoized filtered views with search functionality\n  const filteredViews = useMemo(() => {\n    let filtered = showTechnicalViews\n      ? deferredViews\n      : deferredViews.filter((view: any) => view.type !== \"technical\");\n\n    // Apply search filter if query exists\n    if (debouncedSearchQuery.trim()) {\n      filtered = filtered.filter(\n        (view: any) =>\n          view.pretty_name\n            ?.toLowerCase()\n            .includes(debouncedSearchQuery.toLowerCase()) ||\n          view.description\n            ?.toLowerCase()\n            .includes(debouncedSearchQuery.toLowerCase()),\n      );\n    }\n\n    return filtered;\n  }, [deferredViews, showTechnicalViews, debouncedSearchQuery]);\n\n  // Effect for handling data changes with startTransition\n  React.useEffect(() => {\n    if (data?.data?.results?.[0]?.result?.data) {\n      startTransition(() => {\n        const apiViews = data.data.results[0].result.data;\n        const filteredApiViews = showTechnicalViews\n          ? apiViews\n          : apiViews.filter((view: any) => view.type !== \"technical\");\n\n        // Handle view ordering first\n        const savedOrder =\n          JSON.parse(localStorage.getItem(\"viewOrder\") as string) || [];\n        let finalViews = filteredApiViews;\n        if (savedOrder.length > 0) {\n          finalViews = [...filteredApiViews].sort((a, b) => {\n            const indexA = savedOrder.indexOf(a.endpoint);\n            const indexB = savedOrder.indexOf(b.endpoint);\n            return (\n              (indexA === -1 ? Infinity : indexA) -\n              (indexB === -1 ? Infinity : indexB)\n            );\n          });\n        }\n\n        // Set views only once\n        setViews(finalViews);\n\n        // Handle selected views with preserved state\n        const saved = JSON.parse(\n          localStorage.getItem(\"selectedViewsSaved\") as string,\n        );\n        let newSelected: any;\n        if (!saved || saved.length === 0) {\n          newSelected = filteredApiViews.map((view: any) => view.name);\n        } else {\n          newSelected = saved.filter((endpoint: any) =>\n            filteredApiViews.some((view: any) => view.name === endpoint),\n          );\n        }\n        localStorage.setItem(\"selectedViewsSaved\", JSON.stringify(newSelected));\n        setSelectedViews(newSelected);\n      });\n    }\n  }, [data, showTechnicalViews]);\n\n  // Effect for handling window resize with startTransition\n  React.useEffect(() => {\n    const handleResize = () => {\n      startTransition(() => {\n        setColumns(getAutoColumnCount());\n      });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getAutoColumnCount, setColumns]);\n\n  // Optimized handlers using React 19 features\n  const handleSelectMenuOpen = useCallback<\n    MouseEventHandler<HTMLButtonElement>\n  >(\n    (event) => {\n      setSelectMenuAnchor(event.currentTarget);\n    },\n    [setSelectMenuAnchor],\n  );\n\n  const handleSelectMenuClose = useCallback<\n    MouseEventHandler<HTMLButtonElement>\n  >(() => {\n    setSelectMenuAnchor(null);\n  }, [setSelectMenuAnchor]);\n\n  const handleViewToggle = useCallback(\n    (endpoint: string) => {\n      startTransition(() => {\n        setSelectedViews((prev) => {\n          const newSelected = prev.includes(endpoint)\n            ? prev.filter((id) => id !== endpoint)\n            : [...prev, endpoint];\n\n          localStorage.setItem(\n            \"selectedViewsSaved\",\n            JSON.stringify(newSelected),\n          );\n\n          const technicalViews = views.filter(\n            (view) => view.type === \"technical\",\n          );\n          const openTechnicalViews = technicalViews.filter((view) =>\n            newSelected.includes(view.name),\n          );\n          if (openTechnicalViews.length === 0 && showTechnicalViews) {\n            setShowTechnicalViews(false);\n            localStorage.setItem(\"showTechnicalViews\", JSON.stringify(false));\n          }\n          return newSelected;\n        });\n      });\n    },\n    [views, showTechnicalViews],\n  );\n\n  const handleTechnicalViewsToggle = useCallback(() => {\n    startTransition(() => {\n      setShowTechnicalViews((prev) => {\n        const newValue = !prev;\n        localStorage.setItem(\"showTechnicalViews\", JSON.stringify(newValue));\n\n        const techViews =\n          data?.data?.results?.[0]?.result?.data?.filter(\n            (view: any) => view.type === \"technical\",\n          ) || [];\n        const techEndpoints = techViews.map((view: any) => view.name);\n\n        setSelectedViews((prevSelected) => {\n          let updated: any;\n          if (newValue) {\n            updated = [...new Set([...prevSelected, ...techEndpoints])];\n          } else {\n            updated = prevSelected.filter(\n              (endpoint) => !techEndpoints.includes(endpoint),\n            );\n          }\n          localStorage.setItem(\"selectedViewsSaved\", JSON.stringify(updated));\n          return updated;\n        });\n\n        return newValue;\n      });\n    });\n  }, [data]);\n\n  const handleViewClick = useCallback(\n    (view: any) => {\n      withLoading(async () => {\n        if (view.name.endsWith(\"class_attribute_field\")) {\n          await jumpToId.mutateAsync({\n            node: data?.data?.node_id,\n          });\n          navigate(`/add-node/form/${data?.data?.node_id}`);\n        } else {\n          navigate(`/information/${view.name.replaceAll(\" \", \"_\")}`);\n        }\n      });\n    },\n    [jumpToId, data, navigate, withLoading],\n  );\n\n  const incrementColumns = useCallback(() => {\n    startTransition(() => {\n      setColumns((prev) => Math.min(prev + 1, filteredViews.length));\n    });\n  }, [filteredViews.length, setColumns]);\n\n  const decrementColumns = useCallback(() => {\n    startTransition(() => {\n      setColumns((prev) => Math.max(prev - 1, 1));\n    });\n  }, [setColumns]);\n\n  // Loading state with React 19 optimizations\n  if (isLoading) {\n    return (\n      <ErrorBoundary>\n        <LoadingStates.Page />\n      </ErrorBoundary>\n    );\n  }\n\n  // Error state with recovery\n  if (error || !data || !data.data || !data.data.results) {\n    return (\n      <ErrorBoundary>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n            padding: 3,\n            bgcolor: \"#2e3b55\",\n          }}\n        >\n          <Box\n            sx={{\n              bgcolor: \"#fff3e0\",\n              p: 3,\n              borderRadius: 2,\n              color: \"#ef6c00\",\n              textAlign: \"center\",\n              maxWidth: \"500px\",\n            }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              Failed to Load Data\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mb: 2 }}>\n              {error?.message || \"Data is null or unavailable.\"}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => window.location.reload()}\n              sx={{ mt: 1 }}\n            >\n              Retry\n            </Button>\n          </Box>\n        </Box>\n      </ErrorBoundary>\n    );\n  }\n\n  const isPendingAny =\n    isTransitioning || isColumnsUpdating || isMenuUpdating || isPending;\n\n  return (\n    <ErrorBoundary>\n      <Box\n        sx={{\n          padding: { xs: \"8px\", sm: \"16px\", md: \"40px\" },\n          maxWidth: \"100%\",\n          margin: \"0 auto\",\n          bgcolor: \"#2e3b55\",\n          minHeight: \"100vh\",\n          zIndex: 1,\n          opacity: isPendingAny ? 0.8 : 1,\n          transition: \"opacity 0.2s ease-in-out\",\n        }}\n        className=\"home-page\"\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: { xs: \"column\", sm: \"row\" },\n            justifyContent: \"space-between\",\n            alignItems: { xs: \"flex-start\", sm: \"center\" },\n            mb: { xs: 2, sm: 4 },\n            gap: { xs: 2, sm: 0 },\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: { xs: \"column\", sm: \"row\" },\n              gap: { xs: 1, sm: 2 },\n              alignItems: { xs: \"flex-start\", sm: \"center\" },\n              width: { xs: \"100%\", sm: \"auto\" },\n            }}\n          >\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n              <Button\n                variant=\"outlined\"\n                onClick={handleSelectMenuOpen}\n                disabled={isPendingAny}\n                sx={{\n                  minWidth: { xs: 36, sm: 40 },\n                  borderWidth: \"2px\",\n                  borderColor: \"#90caf9\",\n                  color: \"#90caf9\",\n                  fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n                  padding: { xs: \"4px 8px\", sm: \"6px 12px\" },\n                  \"&:hover\": {\n                    borderColor: \"#42a5f5\",\n                    bgcolor: \"#37474f\",\n                  },\n                  \"&:disabled\": {\n                    opacity: 0.6,\n                  },\n                }}\n              >\n                Views\n              </Button>\n              <Menu\n                anchorEl={selectMenuAnchor}\n                open={Boolean(selectMenuAnchor)}\n                onClose={handleSelectMenuClose}\n                PaperProps={{\n                  sx: {\n                    maxHeight: 500,\n                    maxWidth: 400,\n                    overflowY: \"auto\",\n                    width: \"auto\",\n                    padding: 1,\n                    borderRadius: \"8px\",\n                  },\n                }}\n              >\n                {filteredViews.map((view) => (\n                  <MenuItem\n                    key={view.name}\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      paddingRight: 1,\n                      fontSize: \"14px\",\n                      color: view.type === \"technical\" ? \"#283593\" : \"#424242\",\n                      backgroundColor:\n                        view.type === \"technical\" ? \"#fff9c4\" : \"transparent\",\n                      borderRadius: \"8px\",\n                      \"&:hover\": {\n                        backgroundColor:\n                          view.type === \"technical\" ? \"#fff8b0\" : \"#e8eaf6\",\n                      },\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        flexGrow: 1,\n                        borderRadius: \"18px\",\n                      }}\n                      onClick={() => handleViewToggle(view.name)}\n                    >\n                      <Checkbox\n                        checked={deferredSelectedViews.includes(view.name)}\n                        sx={{\n                          color: \"#90caf9\",\n                          \"&.Mui-checked\": { color: \"#90caf9\" },\n                        }}\n                      />\n                      <ListItemText primary={view.pretty_name} />\n                    </Box>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n              <Checkbox\n                checked={showTechnicalViews}\n                onChange={handleTechnicalViewsToggle}\n                disabled={isPendingAny}\n                sx={{\n                  color: \"#90caf9\",\n                  \"&.Mui-checked\": { color: \"#90caf9\" },\n                  padding: { xs: \"4px\", sm: \"6px\" },\n                }}\n              />\n              <Typography\n                sx={{\n                  color: \"#90caf9\",\n                  fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n                }}\n              >\n                Show Technical Views\n              </Typography>\n            </Box>\n\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n              <Button\n                variant=\"outlined\"\n                onClick={decrementColumns}\n                disabled={columns === 1 || isPendingAny}\n                sx={{\n                  minWidth: { xs: 36, sm: 40 },\n                  borderWidth: \"2px\",\n                  borderColor: \"#90caf9\",\n                  color: \"#90caf9\",\n                  fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n                  padding: { xs: \"4px\", sm: \"6px\" },\n                  \"&:hover\": {\n                    borderColor: \"#42a5f5\",\n                    bgcolor: \"#37474f\",\n                  },\n                }}\n              >\n                <RemoveIcon fontSize=\"small\" />\n              </Button>\n              <Typography\n                sx={{\n                  color: \"#ffffff\",\n                  fontWeight: \"bold\",\n                  fontSize: { xs: \"0.875rem\", sm: \"1rem\" },\n                }}\n              >\n                {columns}\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                onClick={incrementColumns}\n                disabled={columns === filteredViews.length || isPendingAny}\n                sx={{\n                  minWidth: { xs: 36, sm: 40 },\n                  borderWidth: \"2px\",\n                  borderColor: \"#90caf9\",\n                  color: \"#90caf9\",\n                  fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n                  padding: { xs: \"4px\", sm: \"6px\" },\n                  \"&:hover\": {\n                    borderColor: \"#42a5f5\",\n                    bgcolor: \"#37474f\",\n                  },\n                }}\n              >\n                <AddIcon fontSize=\"small\" />\n              </Button>\n            </Box>\n          </Box>\n\n          <Button\n            variant=\"outlined\"\n            onClick={() => navigate(\"/add-node\")}\n            disabled={isPendingAny}\n            sx={{\n              minWidth: { xs: 36, sm: 40 },\n              borderWidth: \"2px\",\n              borderColor: \"#90caf9\",\n              color: \"#90caf9\",\n              fontSize: { xs: \"0.75rem\", sm: \"0.875rem\" },\n              padding: { xs: \"4px 8px\", sm: \"6px 12px\" },\n              \"&:hover\": {\n                borderColor: \"#42a5f5\",\n                bgcolor: \"#37474f\",\n              },\n            }}\n          >\n            Add new node\n          </Button>\n        </Box>\n\n        <Suspense fallback={<LoadingStates.Grid columns={columns} count={6} />}>\n          <ViewGrid\n            views={filteredViews}\n            selectedViews={deferredSelectedViews}\n            columns={columns}\n            onViewClick={handleViewClick}\n            onViewToggle={handleViewToggle}\n          />\n        </Suspense>\n\n        {isPendingAny && (\n          <Box\n            sx={{\n              position: \"fixed\",\n              bottom: 16,\n              right: 16,\n              zIndex: 9999,\n            }}\n          >\n            <CircularProgress size={24} sx={{ color: \"#90caf9\" }} />\n          </Box>\n        )}\n      </Box>\n    </ErrorBoundary>\n  );\n});\n\nHomePage.displayName = \"HomePage\";\n\nexport default HomePage;\n"],"names":["ViewCard","memo","view","onClick","handleViewToggle","handleToggle","useCallback","e","startTransition","ErrorBoundary","Card","Typography","Box","Expand","CloseIcon","CardContent","Suspense","LoadingStates","View","ViewGrid","views","selectedViews","columns","onViewClick","onViewToggle","visibleViews","deferredVisibleViews","useDeferredValue","rowColumns","Math","HomePage","navigate","useNavigate","data","isLoading","error","useApiData","isTransitioning","withLoading","useLoadingState","useTitle","setColumns","isColumnsUpdating","useOptimizedState","selectMenuAnchor","setSelectMenuAnchor","isMenuUpdating","setSelectedViews","useState","showTechnicalViews","setShowTechnicalViews","JSON","localStorage","searchQuery","debouncedSearchQuery","useOptimizedDebounce","jumpToId","useApiMutation","setViews","isPending","useTransition","getAutoColumnCount","width","window","deferredViews","deferredSelectedViews","filteredViews","useMemo","filtered","_view_pretty_name","_view_description","React","_data_data_results__result","newSelected","apiViews","filteredApiViews","savedOrder","finalViews","a","b","indexA","indexB","Infinity","saved","endpoint","handleResize","handleSelectMenuOpen","event","handleSelectMenuClose","prev","id","openTechnicalViews","technicalViews","handleTechnicalViewsToggle","_data_data_results__result_data","newValue","techEndpoints","techViews","prevSelected","updated","Set","handleViewClick","_data_data","_data_data1","incrementColumns","decrementColumns","Button","isPendingAny","Menu","Boolean","MenuItem","Checkbox","ListItemText","RemoveIcon","AddIcon","CircularProgress"],"mappings":"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"}