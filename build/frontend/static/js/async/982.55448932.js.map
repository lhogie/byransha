{"version":3,"file":"static/js/async/982.55448932.js","sources":["webpack://login_page/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-ANTBXLJU.mjs","webpack://login_page/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-FHKO5MBM.mjs","webpack://login_page/./node_modules/mermaid/dist/chunks/mermaid.core/gitGraphDiagram-OJR772UL.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  __name\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/utils/imperativeState.ts\nvar ImperativeState = class {\n  /**\n   * @param init - Function that creates the default state.\n   */\n  constructor(init) {\n    this.init = init;\n    this.records = this.init();\n  }\n  static {\n    __name(this, \"ImperativeState\");\n  }\n  reset() {\n    this.records = this.init();\n  }\n};\n\nexport {\n  ImperativeState\n};\n","import {\n  populateCommonDb\n} from \"./chunk-ANTBXLJU.mjs\";\nimport {\n  ImperativeState\n} from \"./chunk-FHKO5MBM.mjs\";\nimport {\n  cleanAndMerge,\n  random,\n  utils_default\n} from \"./chunk-U37J5Y7L.mjs\";\nimport {\n  __name,\n  clear,\n  common_default,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getConfig2,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n  setupGraphViewbox2 as setupGraphViewbox\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/diagrams/git/gitGraphParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/git/gitGraphTypes.ts\nvar commitType = {\n  NORMAL: 0,\n  REVERSE: 1,\n  HIGHLIGHT: 2,\n  MERGE: 3,\n  CHERRY_PICK: 4\n};\n\n// src/diagrams/git/gitGraphAst.ts\nvar DEFAULT_GITGRAPH_CONFIG = defaultConfig_default.gitGraph;\nvar getConfig3 = /* @__PURE__ */ __name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_GITGRAPH_CONFIG,\n    ...getConfig().gitGraph\n  });\n  return config;\n}, \"getConfig\");\nvar state = new ImperativeState(() => {\n  const config = getConfig3();\n  const mainBranchName = config.mainBranchName;\n  const mainBranchOrder = config.mainBranchOrder;\n  return {\n    mainBranchName,\n    commits: /* @__PURE__ */ new Map(),\n    head: null,\n    branchConfig: /* @__PURE__ */ new Map([[mainBranchName, { name: mainBranchName, order: mainBranchOrder }]]),\n    branches: /* @__PURE__ */ new Map([[mainBranchName, null]]),\n    currBranch: mainBranchName,\n    direction: \"LR\",\n    seq: 0,\n    options: {}\n  };\n});\nfunction getID() {\n  return random({ length: 7 });\n}\n__name(getID, \"getID\");\nfunction uniqBy(list, fn) {\n  const recordMap = /* @__PURE__ */ Object.create(null);\n  return list.reduce((out, item) => {\n    const key = fn(item);\n    if (!recordMap[key]) {\n      recordMap[key] = true;\n      out.push(item);\n    }\n    return out;\n  }, []);\n}\n__name(uniqBy, \"uniqBy\");\nvar setDirection = /* @__PURE__ */ __name(function(dir2) {\n  state.records.direction = dir2;\n}, \"setDirection\");\nvar setOptions = /* @__PURE__ */ __name(function(rawOptString) {\n  log.debug(\"options str\", rawOptString);\n  rawOptString = rawOptString?.trim();\n  rawOptString = rawOptString || \"{}\";\n  try {\n    state.records.options = JSON.parse(rawOptString);\n  } catch (e) {\n    log.error(\"error while parsing gitGraph options\", e.message);\n  }\n}, \"setOptions\");\nvar getOptions = /* @__PURE__ */ __name(function() {\n  return state.records.options;\n}, \"getOptions\");\nvar commit = /* @__PURE__ */ __name(function(commitDB) {\n  let msg = commitDB.msg;\n  let id = commitDB.id;\n  const type = commitDB.type;\n  let tags = commitDB.tags;\n  log.info(\"commit\", msg, id, type, tags);\n  log.debug(\"Entering commit:\", msg, id, type, tags);\n  const config = getConfig3();\n  id = common_default.sanitizeText(id, config);\n  msg = common_default.sanitizeText(msg, config);\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\n  const newCommit = {\n    id: id ? id : state.records.seq + \"-\" + getID(),\n    message: msg,\n    seq: state.records.seq++,\n    type: type ?? commitType.NORMAL,\n    tags: tags ?? [],\n    parents: state.records.head == null ? [] : [state.records.head.id],\n    branch: state.records.currBranch\n  };\n  state.records.head = newCommit;\n  log.info(\"main branch\", config.mainBranchName);\n  if (state.records.commits.has(newCommit.id)) {\n    log.warn(`Commit ID ${newCommit.id} already exists`);\n  }\n  state.records.commits.set(newCommit.id, newCommit);\n  state.records.branches.set(state.records.currBranch, newCommit.id);\n  log.debug(\"in pushCommit \" + newCommit.id);\n}, \"commit\");\nvar branch = /* @__PURE__ */ __name(function(branchDB) {\n  let name = branchDB.name;\n  const order = branchDB.order;\n  name = common_default.sanitizeText(name, getConfig3());\n  if (state.records.branches.has(name)) {\n    throw new Error(\n      `Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using \"checkout ${name}\")`\n    );\n  }\n  state.records.branches.set(name, state.records.head != null ? state.records.head.id : null);\n  state.records.branchConfig.set(name, { name, order });\n  checkout(name);\n  log.debug(\"in createBranch\");\n}, \"branch\");\nvar merge = /* @__PURE__ */ __name((mergeDB) => {\n  let otherBranch = mergeDB.branch;\n  let customId = mergeDB.id;\n  const overrideType = mergeDB.type;\n  const customTags = mergeDB.tags;\n  const config = getConfig3();\n  otherBranch = common_default.sanitizeText(otherBranch, config);\n  if (customId) {\n    customId = common_default.sanitizeText(customId, config);\n  }\n  const currentBranchCheck = state.records.branches.get(state.records.currBranch);\n  const otherBranchCheck = state.records.branches.get(otherBranch);\n  const currentCommit = currentBranchCheck ? state.records.commits.get(currentBranchCheck) : void 0;\n  const otherCommit = otherBranchCheck ? state.records.commits.get(otherBranchCheck) : void 0;\n  if (currentCommit && otherCommit && currentCommit.branch === otherBranch) {\n    throw new Error(`Cannot merge branch '${otherBranch}' into itself.`);\n  }\n  if (state.records.currBranch === otherBranch) {\n    const error = new Error('Incorrect usage of \"merge\". Cannot merge a branch to itself');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (currentCommit === void 0 || !currentCommit) {\n    const error = new Error(\n      `Incorrect usage of \"merge\". Current branch (${state.records.currBranch})has no commits`\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"commit\"]\n    };\n    throw error;\n  }\n  if (!state.records.branches.has(otherBranch)) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") does not exist\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [`branch ${otherBranch}`]\n    };\n    throw error;\n  }\n  if (otherCommit === void 0 || !otherCommit) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") has no commits\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: ['\"commit\"']\n    };\n    throw error;\n  }\n  if (currentCommit === otherCommit) {\n    const error = new Error('Incorrect usage of \"merge\". Both branches have same head');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (customId && state.records.commits.has(customId)) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Commit with id:' + customId + \" already exists, use different custom id\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      token: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      expected: [\n        `merge ${otherBranch} ${customId}_UNIQUE ${overrideType} ${customTags?.join(\" \")}`\n      ]\n    };\n    throw error;\n  }\n  const verifiedBranch = otherBranchCheck ? otherBranchCheck : \"\";\n  const commit2 = {\n    id: customId || `${state.records.seq}-${getID()}`,\n    message: `merged branch ${otherBranch} into ${state.records.currBranch}`,\n    seq: state.records.seq++,\n    parents: state.records.head == null ? [] : [state.records.head.id, verifiedBranch],\n    branch: state.records.currBranch,\n    type: commitType.MERGE,\n    customType: overrideType,\n    customId: customId ? true : false,\n    tags: customTags ?? []\n  };\n  state.records.head = commit2;\n  state.records.commits.set(commit2.id, commit2);\n  state.records.branches.set(state.records.currBranch, commit2.id);\n  log.debug(state.records.branches);\n  log.debug(\"in mergeBranch\");\n}, \"merge\");\nvar cherryPick = /* @__PURE__ */ __name(function(cherryPickDB) {\n  let sourceId = cherryPickDB.id;\n  let targetId = cherryPickDB.targetId;\n  let tags = cherryPickDB.tags;\n  let parentCommitId = cherryPickDB.parent;\n  log.debug(\"Entering cherryPick:\", sourceId, targetId, tags);\n  const config = getConfig3();\n  sourceId = common_default.sanitizeText(sourceId, config);\n  targetId = common_default.sanitizeText(targetId, config);\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\n  parentCommitId = common_default.sanitizeText(parentCommitId, config);\n  if (!sourceId || !state.records.commits.has(sourceId)) {\n    const error = new Error(\n      'Incorrect usage of \"cherryPick\". Source commit id should exist and provided'\n    );\n    error.hash = {\n      text: `cherryPick ${sourceId} ${targetId}`,\n      token: `cherryPick ${sourceId} ${targetId}`,\n      expected: [\"cherry-pick abc\"]\n    };\n    throw error;\n  }\n  const sourceCommit = state.records.commits.get(sourceId);\n  if (sourceCommit === void 0 || !sourceCommit) {\n    throw new Error('Incorrect usage of \"cherryPick\". Source commit id should exist and provided');\n  }\n  if (parentCommitId && !(Array.isArray(sourceCommit.parents) && sourceCommit.parents.includes(parentCommitId))) {\n    const error = new Error(\n      \"Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.\"\n    );\n    throw error;\n  }\n  const sourceCommitBranch = sourceCommit.branch;\n  if (sourceCommit.type === commitType.MERGE && !parentCommitId) {\n    const error = new Error(\n      \"Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.\"\n    );\n    throw error;\n  }\n  if (!targetId || !state.records.commits.has(targetId)) {\n    if (sourceCommitBranch === state.records.currBranch) {\n      const error = new Error(\n        'Incorrect usage of \"cherryPick\". Source commit is already on current branch'\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommitId = state.records.branches.get(state.records.currBranch);\n    if (currentCommitId === void 0 || !currentCommitId) {\n      const error = new Error(\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommit = state.records.commits.get(currentCommitId);\n    if (currentCommit === void 0 || !currentCommit) {\n      const error = new Error(\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const commit2 = {\n      id: state.records.seq + \"-\" + getID(),\n      message: `cherry-picked ${sourceCommit?.message} into ${state.records.currBranch}`,\n      seq: state.records.seq++,\n      parents: state.records.head == null ? [] : [state.records.head.id, sourceCommit.id],\n      branch: state.records.currBranch,\n      type: commitType.CHERRY_PICK,\n      tags: tags ? tags.filter(Boolean) : [\n        `cherry-pick:${sourceCommit.id}${sourceCommit.type === commitType.MERGE ? `|parent:${parentCommitId}` : \"\"}`\n      ]\n    };\n    state.records.head = commit2;\n    state.records.commits.set(commit2.id, commit2);\n    state.records.branches.set(state.records.currBranch, commit2.id);\n    log.debug(state.records.branches);\n    log.debug(\"in cherryPick\");\n  }\n}, \"cherryPick\");\nvar checkout = /* @__PURE__ */ __name(function(branch2) {\n  branch2 = common_default.sanitizeText(branch2, getConfig3());\n  if (!state.records.branches.has(branch2)) {\n    const error = new Error(\n      `Trying to checkout branch which is not yet created. (Help try using \"branch ${branch2}\")`\n    );\n    error.hash = {\n      text: `checkout ${branch2}`,\n      token: `checkout ${branch2}`,\n      expected: [`branch ${branch2}`]\n    };\n    throw error;\n  } else {\n    state.records.currBranch = branch2;\n    const id = state.records.branches.get(state.records.currBranch);\n    if (id === void 0 || !id) {\n      state.records.head = null;\n    } else {\n      state.records.head = state.records.commits.get(id) ?? null;\n    }\n  }\n}, \"checkout\");\nfunction upsert(arr, key, newVal) {\n  const index = arr.indexOf(key);\n  if (index === -1) {\n    arr.push(newVal);\n  } else {\n    arr.splice(index, 1, newVal);\n  }\n}\n__name(upsert, \"upsert\");\nfunction prettyPrintCommitHistory(commitArr) {\n  const commit2 = commitArr.reduce((out, commit3) => {\n    if (out.seq > commit3.seq) {\n      return out;\n    }\n    return commit3;\n  }, commitArr[0]);\n  let line = \"\";\n  commitArr.forEach(function(c) {\n    if (c === commit2) {\n      line += \"\t*\";\n    } else {\n      line += \"\t|\";\n    }\n  });\n  const label = [line, commit2.id, commit2.seq];\n  for (const branch2 in state.records.branches) {\n    if (state.records.branches.get(branch2) === commit2.id) {\n      label.push(branch2);\n    }\n  }\n  log.debug(label.join(\" \"));\n  if (commit2.parents && commit2.parents.length == 2 && commit2.parents[0] && commit2.parents[1]) {\n    const newCommit = state.records.commits.get(commit2.parents[0]);\n    upsert(commitArr, commit2, newCommit);\n    if (commit2.parents[1]) {\n      commitArr.push(state.records.commits.get(commit2.parents[1]));\n    }\n  } else if (commit2.parents.length == 0) {\n    return;\n  } else {\n    if (commit2.parents[0]) {\n      const newCommit = state.records.commits.get(commit2.parents[0]);\n      upsert(commitArr, commit2, newCommit);\n    }\n  }\n  commitArr = uniqBy(commitArr, (c) => c.id);\n  prettyPrintCommitHistory(commitArr);\n}\n__name(prettyPrintCommitHistory, \"prettyPrintCommitHistory\");\nvar prettyPrint = /* @__PURE__ */ __name(function() {\n  log.debug(state.records.commits);\n  const node = getCommitsArray()[0];\n  prettyPrintCommitHistory([node]);\n}, \"prettyPrint\");\nvar clear2 = /* @__PURE__ */ __name(function() {\n  state.reset();\n  clear();\n}, \"clear\");\nvar getBranchesAsObjArray = /* @__PURE__ */ __name(function() {\n  const branchesArray = [...state.records.branchConfig.values()].map((branchConfig, i) => {\n    if (branchConfig.order !== null && branchConfig.order !== void 0) {\n      return branchConfig;\n    }\n    return {\n      ...branchConfig,\n      order: parseFloat(`0.${i}`)\n    };\n  }).sort((a, b) => (a.order ?? 0) - (b.order ?? 0)).map(({ name }) => ({ name }));\n  return branchesArray;\n}, \"getBranchesAsObjArray\");\nvar getBranches = /* @__PURE__ */ __name(function() {\n  return state.records.branches;\n}, \"getBranches\");\nvar getCommits = /* @__PURE__ */ __name(function() {\n  return state.records.commits;\n}, \"getCommits\");\nvar getCommitsArray = /* @__PURE__ */ __name(function() {\n  const commitArr = [...state.records.commits.values()];\n  commitArr.forEach(function(o) {\n    log.debug(o.id);\n  });\n  commitArr.sort((a, b) => a.seq - b.seq);\n  return commitArr;\n}, \"getCommitsArray\");\nvar getCurrentBranch = /* @__PURE__ */ __name(function() {\n  return state.records.currBranch;\n}, \"getCurrentBranch\");\nvar getDirection = /* @__PURE__ */ __name(function() {\n  return state.records.direction;\n}, \"getDirection\");\nvar getHead = /* @__PURE__ */ __name(function() {\n  return state.records.head;\n}, \"getHead\");\nvar db = {\n  commitType,\n  getConfig: getConfig3,\n  setDirection,\n  setOptions,\n  getOptions,\n  commit,\n  branch,\n  merge,\n  cherryPick,\n  checkout,\n  //reset,\n  prettyPrint,\n  clear: clear2,\n  getBranchesAsObjArray,\n  getBranches,\n  getCommits,\n  getCommitsArray,\n  getCurrentBranch,\n  getDirection,\n  getHead,\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  setDiagramTitle,\n  getDiagramTitle\n};\n\n// src/diagrams/git/gitGraphParser.ts\nvar populate = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  if (ast.dir) {\n    db2.setDirection(ast.dir);\n  }\n  for (const statement of ast.statements) {\n    parseStatement(statement, db2);\n  }\n}, \"populate\");\nvar parseStatement = /* @__PURE__ */ __name((statement, db2) => {\n  const parsers = {\n    Commit: /* @__PURE__ */ __name((stmt) => db2.commit(parseCommit(stmt)), \"Commit\"),\n    Branch: /* @__PURE__ */ __name((stmt) => db2.branch(parseBranch(stmt)), \"Branch\"),\n    Merge: /* @__PURE__ */ __name((stmt) => db2.merge(parseMerge(stmt)), \"Merge\"),\n    Checkout: /* @__PURE__ */ __name((stmt) => db2.checkout(parseCheckout(stmt)), \"Checkout\"),\n    CherryPicking: /* @__PURE__ */ __name((stmt) => db2.cherryPick(parseCherryPicking(stmt)), \"CherryPicking\")\n  };\n  const parser2 = parsers[statement.$type];\n  if (parser2) {\n    parser2(statement);\n  } else {\n    log.error(`Unknown statement type: ${statement.$type}`);\n  }\n}, \"parseStatement\");\nvar parseCommit = /* @__PURE__ */ __name((commit2) => {\n  const commitDB = {\n    id: commit2.id,\n    msg: commit2.message ?? \"\",\n    type: commit2.type !== void 0 ? commitType[commit2.type] : commitType.NORMAL,\n    tags: commit2.tags ?? void 0\n  };\n  return commitDB;\n}, \"parseCommit\");\nvar parseBranch = /* @__PURE__ */ __name((branch2) => {\n  const branchDB = {\n    name: branch2.name,\n    order: branch2.order ?? 0\n  };\n  return branchDB;\n}, \"parseBranch\");\nvar parseMerge = /* @__PURE__ */ __name((merge2) => {\n  const mergeDB = {\n    branch: merge2.branch,\n    id: merge2.id ?? \"\",\n    type: merge2.type !== void 0 ? commitType[merge2.type] : void 0,\n    tags: merge2.tags ?? void 0\n  };\n  return mergeDB;\n}, \"parseMerge\");\nvar parseCheckout = /* @__PURE__ */ __name((checkout2) => {\n  const branch2 = checkout2.branch;\n  return branch2;\n}, \"parseCheckout\");\nvar parseCherryPicking = /* @__PURE__ */ __name((cherryPicking) => {\n  const cherryPickDB = {\n    id: cherryPicking.id,\n    targetId: \"\",\n    tags: cherryPicking.tags?.length === 0 ? void 0 : cherryPicking.tags,\n    parent: cherryPicking.parent\n  };\n  return cherryPickDB;\n}, \"parseCherryPicking\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"gitGraph\", input);\n    log.debug(ast);\n    populate(ast, db);\n  }, \"parse\")\n};\nif (void 0) {\n  const { it, expect, describe } = void 0;\n  const mockDB = {\n    commitType,\n    setDirection: vi.fn(),\n    commit: vi.fn(),\n    branch: vi.fn(),\n    merge: vi.fn(),\n    cherryPick: vi.fn(),\n    checkout: vi.fn()\n  };\n  describe(\"GitGraph Parser\", () => {\n    it(\"should parse a commit statement\", () => {\n      const commit2 = {\n        $type: \"Commit\",\n        id: \"1\",\n        message: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(commit2, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a branch statement\", () => {\n      const branch2 = {\n        $type: \"Branch\",\n        name: \"newBranch\",\n        order: 1\n      };\n      parseStatement(branch2, mockDB);\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\n    });\n    it(\"should parse a checkout statement\", () => {\n      const checkout2 = {\n        $type: \"Checkout\",\n        branch: \"newBranch\"\n      };\n      parseStatement(checkout2, mockDB);\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n    it(\"should parse a merge statement\", () => {\n      const merge2 = {\n        $type: \"Merge\",\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(merge2, mockDB);\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a cherry picking statement\", () => {\n      const cherryPick2 = {\n        $type: \"CherryPicking\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        parent: \"2\"\n      };\n      parseStatement(cherryPick2, mockDB);\n      expect(mockDB.cherryPick).toHaveBeenCalledWith({\n        id: \"1\",\n        targetId: \"\",\n        parent: \"2\",\n        tags: [\"tag1\", \"tag2\"]\n      });\n    });\n    it(\"should parse a langium generated gitGraph ast\", () => {\n      const dummy = {\n        $type: \"GitGraph\",\n        statements: []\n      };\n      const gitGraphAst = {\n        $type: \"GitGraph\",\n        statements: [\n          {\n            $container: dummy,\n            $type: \"Commit\",\n            id: \"1\",\n            message: \"test\",\n            tags: [\"tag1\", \"tag2\"],\n            type: \"NORMAL\"\n          },\n          {\n            $container: dummy,\n            $type: \"Branch\",\n            name: \"newBranch\",\n            order: 1\n          },\n          {\n            $container: dummy,\n            $type: \"Merge\",\n            branch: \"newBranch\",\n            id: \"1\",\n            tags: [\"tag1\", \"tag2\"],\n            type: \"NORMAL\"\n          },\n          {\n            $container: dummy,\n            $type: \"Checkout\",\n            branch: \"newBranch\"\n          },\n          {\n            $container: dummy,\n            $type: \"CherryPicking\",\n            id: \"1\",\n            tags: [\"tag1\", \"tag2\"],\n            parent: \"2\"\n          }\n        ]\n      };\n      populate(gitGraphAst, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n  });\n}\n\n// src/diagrams/git/gitGraphRenderer.ts\nimport { select } from \"d3\";\nvar DEFAULT_CONFIG = getConfig2();\nvar DEFAULT_GITGRAPH_CONFIG2 = DEFAULT_CONFIG?.gitGraph;\nvar LAYOUT_OFFSET = 10;\nvar COMMIT_STEP = 40;\nvar PX = 4;\nvar PY = 2;\nvar THEME_COLOR_LIMIT = 8;\nvar branchPos = /* @__PURE__ */ new Map();\nvar commitPos = /* @__PURE__ */ new Map();\nvar defaultPos = 30;\nvar allCommitsDict = /* @__PURE__ */ new Map();\nvar lanes = [];\nvar maxPos = 0;\nvar dir = \"LR\";\nvar clear3 = /* @__PURE__ */ __name(() => {\n  branchPos.clear();\n  commitPos.clear();\n  allCommitsDict.clear();\n  maxPos = 0;\n  lanes = [];\n  dir = \"LR\";\n}, \"clear\");\nvar drawText = /* @__PURE__ */ __name((txt) => {\n  const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n  const rows = typeof txt === \"string\" ? txt.split(/\\\\n|\\n|<br\\s*\\/?>/gi) : txt;\n  rows.forEach((row) => {\n    const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n    tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n    tspan.setAttribute(\"dy\", \"1em\");\n    tspan.setAttribute(\"x\", \"0\");\n    tspan.setAttribute(\"class\", \"row\");\n    tspan.textContent = row.trim();\n    svgLabel.appendChild(tspan);\n  });\n  return svgLabel;\n}, \"drawText\");\nvar findClosestParent = /* @__PURE__ */ __name((parents) => {\n  let closestParent;\n  let comparisonFunc;\n  let targetPosition;\n  if (dir === \"BT\") {\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a <= b, \"comparisonFunc\");\n    targetPosition = Infinity;\n  } else {\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a >= b, \"comparisonFunc\");\n    targetPosition = 0;\n  }\n  parents.forEach((parent) => {\n    const parentPosition = dir === \"TB\" || dir == \"BT\" ? commitPos.get(parent)?.y : commitPos.get(parent)?.x;\n    if (parentPosition !== void 0 && comparisonFunc(parentPosition, targetPosition)) {\n      closestParent = parent;\n      targetPosition = parentPosition;\n    }\n  });\n  return closestParent;\n}, \"findClosestParent\");\nvar findClosestParentBT = /* @__PURE__ */ __name((parents) => {\n  let closestParent = \"\";\n  let maxPosition = Infinity;\n  parents.forEach((parent) => {\n    const parentPosition = commitPos.get(parent).y;\n    if (parentPosition <= maxPosition) {\n      closestParent = parent;\n      maxPosition = parentPosition;\n    }\n  });\n  return closestParent || void 0;\n}, \"findClosestParentBT\");\nvar setParallelBTPos = /* @__PURE__ */ __name((sortedKeys, commits, defaultPos2) => {\n  let curPos = defaultPos2;\n  let maxPosition = defaultPos2;\n  const roots = [];\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (commit2.parents.length) {\n      curPos = calculateCommitPosition(commit2);\n      maxPosition = Math.max(curPos, maxPosition);\n    } else {\n      roots.push(commit2);\n    }\n    setCommitPosition(commit2, curPos);\n  });\n  curPos = maxPosition;\n  roots.forEach((commit2) => {\n    setRootPosition(commit2, curPos, defaultPos2);\n  });\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (commit2?.parents.length) {\n      const closestParent = findClosestParentBT(commit2.parents);\n      curPos = commitPos.get(closestParent).y - COMMIT_STEP;\n      if (curPos <= maxPosition) {\n        maxPosition = curPos;\n      }\n      const x = branchPos.get(commit2.branch).pos;\n      const y = curPos - LAYOUT_OFFSET;\n      commitPos.set(commit2.id, { x, y });\n    }\n  });\n}, \"setParallelBTPos\");\nvar findClosestParentPos = /* @__PURE__ */ __name((commit2) => {\n  const closestParent = findClosestParent(commit2.parents.filter((p) => p !== null));\n  if (!closestParent) {\n    throw new Error(`Closest parent not found for commit ${commit2.id}`);\n  }\n  const closestParentPos = commitPos.get(closestParent)?.y;\n  if (closestParentPos === void 0) {\n    throw new Error(`Closest parent position not found for commit ${commit2.id}`);\n  }\n  return closestParentPos;\n}, \"findClosestParentPos\");\nvar calculateCommitPosition = /* @__PURE__ */ __name((commit2) => {\n  const closestParentPos = findClosestParentPos(commit2);\n  return closestParentPos + COMMIT_STEP;\n}, \"calculateCommitPosition\");\nvar setCommitPosition = /* @__PURE__ */ __name((commit2, curPos) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const x = branch2.pos;\n  const y = curPos + LAYOUT_OFFSET;\n  commitPos.set(commit2.id, { x, y });\n  return { x, y };\n}, \"setCommitPosition\");\nvar setRootPosition = /* @__PURE__ */ __name((commit2, curPos, defaultPos2) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const y = curPos + defaultPos2;\n  const x = branch2.pos;\n  commitPos.set(commit2.id, { x, y });\n}, \"setRootPosition\");\nvar drawCommitBullet = /* @__PURE__ */ __name((gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType) => {\n  if (commitSymbolType === commitType.HIGHLIGHT) {\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 10).attr(\"y\", commitPosition.y - 10).attr(\"width\", 20).attr(\"height\", 20).attr(\n      \"class\",\n      `commit ${commit2.id} commit-highlight${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-outer`\n    );\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 6).attr(\"y\", commitPosition.y - 6).attr(\"width\", 12).attr(\"height\", 12).attr(\n      \"class\",\n      `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-inner`\n    );\n  } else if (commitSymbolType === commitType.CHERRY_PICK) {\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x).attr(\"cy\", commitPosition.y).attr(\"r\", 10).attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x - 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x + 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x + 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x - 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n  } else {\n    const circle = gBullets.append(\"circle\");\n    circle.attr(\"cx\", commitPosition.x);\n    circle.attr(\"cy\", commitPosition.y);\n    circle.attr(\"r\", commit2.type === commitType.MERGE ? 9 : 10);\n    circle.attr(\"class\", `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    if (commitSymbolType === commitType.MERGE) {\n      const circle2 = gBullets.append(\"circle\");\n      circle2.attr(\"cx\", commitPosition.x);\n      circle2.attr(\"cy\", commitPosition.y);\n      circle2.attr(\"r\", 6);\n      circle2.attr(\n        \"class\",\n        `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`\n      );\n    }\n    if (commitSymbolType === commitType.REVERSE) {\n      const cross = gBullets.append(\"path\");\n      cross.attr(\n        \"d\",\n        `M ${commitPosition.x - 5},${commitPosition.y - 5}L${commitPosition.x + 5},${commitPosition.y + 5}M${commitPosition.x - 5},${commitPosition.y + 5}L${commitPosition.x + 5},${commitPosition.y - 5}`\n      ).attr(\"class\", `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    }\n  }\n}, \"drawCommitBullet\");\nvar drawCommitLabel = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.type !== commitType.CHERRY_PICK && (commit2.customId && commit2.type === commitType.MERGE || commit2.type !== commitType.MERGE) && DEFAULT_GITGRAPH_CONFIG2?.showCommitLabel) {\n    const wrapper = gLabels.append(\"g\");\n    const labelBkg = wrapper.insert(\"rect\").attr(\"class\", \"commit-label-bkg\");\n    const text = wrapper.append(\"text\").attr(\"x\", pos).attr(\"y\", commitPosition.y + 25).attr(\"class\", \"commit-label\").text(commit2.id);\n    const bbox = text.node()?.getBBox();\n    if (bbox) {\n      labelBkg.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2 - PY).attr(\"y\", commitPosition.y + 13.5).attr(\"width\", bbox.width + 2 * PY).attr(\"height\", bbox.height + 2 * PY);\n      if (dir === \"TB\" || dir === \"BT\") {\n        labelBkg.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX + 5)).attr(\"y\", commitPosition.y - 12);\n        text.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX)).attr(\"y\", commitPosition.y + bbox.height - 12);\n      } else {\n        text.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2);\n      }\n      if (DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel) {\n        if (dir === \"TB\" || dir === \"BT\") {\n          text.attr(\n            \"transform\",\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\n          );\n          labelBkg.attr(\n            \"transform\",\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\n          );\n        } else {\n          const r_x = -7.5 - (bbox.width + 10) / 25 * 9.5;\n          const r_y = 10 + bbox.width / 25 * 8.5;\n          wrapper.attr(\n            \"transform\",\n            \"translate(\" + r_x + \", \" + r_y + \") rotate(-45, \" + pos + \", \" + commitPosition.y + \")\"\n          );\n        }\n      }\n    }\n  }\n}, \"drawCommitLabel\");\nvar drawCommitTags = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.tags.length > 0) {\n    let yOffset = 0;\n    let maxTagBboxWidth = 0;\n    let maxTagBboxHeight = 0;\n    const tagElements = [];\n    for (const tagValue of commit2.tags.reverse()) {\n      const rect = gLabels.insert(\"polygon\");\n      const hole = gLabels.append(\"circle\");\n      const tag = gLabels.append(\"text\").attr(\"y\", commitPosition.y - 16 - yOffset).attr(\"class\", \"tag-label\").text(tagValue);\n      const tagBbox = tag.node()?.getBBox();\n      if (!tagBbox) {\n        throw new Error(\"Tag bbox not found\");\n      }\n      maxTagBboxWidth = Math.max(maxTagBboxWidth, tagBbox.width);\n      maxTagBboxHeight = Math.max(maxTagBboxHeight, tagBbox.height);\n      tag.attr(\"x\", commitPosition.posWithOffset - tagBbox.width / 2);\n      tagElements.push({\n        tag,\n        hole,\n        rect,\n        yOffset\n      });\n      yOffset += 20;\n    }\n    for (const { tag, hole, rect, yOffset: yOffset2 } of tagElements) {\n      const h2 = maxTagBboxHeight / 2;\n      const ly = commitPosition.y - 19.2 - yOffset2;\n      rect.attr(\"class\", \"tag-label-bkg\").attr(\n        \"points\",\n        `\n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly + PY}  \n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly - PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly + h2 + PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly + h2 + PY}`\n      );\n      hole.attr(\"cy\", ly).attr(\"cx\", pos - maxTagBboxWidth / 2 + PX / 2).attr(\"r\", 1.5).attr(\"class\", \"tag-hole\");\n      if (dir === \"TB\" || dir === \"BT\") {\n        const yOrigin = pos + yOffset2;\n        rect.attr(\"class\", \"tag-label-bkg\").attr(\n          \"points\",\n          `\n        ${commitPosition.x},${yOrigin + 2}\n        ${commitPosition.x},${yOrigin - 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin + h2 + 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin + h2 + 2}`\n        ).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        hole.attr(\"cx\", commitPosition.x + PX / 2).attr(\"cy\", yOrigin).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        tag.attr(\"x\", commitPosition.x + 5).attr(\"y\", yOrigin + 3).attr(\"transform\", \"translate(14,14) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n      }\n    }\n  }\n}, \"drawCommitTags\");\nvar getCommitClassType = /* @__PURE__ */ __name((commit2) => {\n  const commitSymbolType = commit2.customType ?? commit2.type;\n  switch (commitSymbolType) {\n    case commitType.NORMAL:\n      return \"commit-normal\";\n    case commitType.REVERSE:\n      return \"commit-reverse\";\n    case commitType.HIGHLIGHT:\n      return \"commit-highlight\";\n    case commitType.MERGE:\n      return \"commit-merge\";\n    case commitType.CHERRY_PICK:\n      return \"commit-cherry-pick\";\n    default:\n      return \"commit-normal\";\n  }\n}, \"getCommitClassType\");\nvar calculatePosition = /* @__PURE__ */ __name((commit2, dir2, pos, commitPos2) => {\n  const defaultCommitPosition = { x: 0, y: 0 };\n  if (commit2.parents.length > 0) {\n    const closestParent = findClosestParent(commit2.parents);\n    if (closestParent) {\n      const parentPosition = commitPos2.get(closestParent) ?? defaultCommitPosition;\n      if (dir2 === \"TB\") {\n        return parentPosition.y + COMMIT_STEP;\n      } else if (dir2 === \"BT\") {\n        const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n        return currentPosition.y - COMMIT_STEP;\n      } else {\n        return parentPosition.x + COMMIT_STEP;\n      }\n    }\n  } else {\n    if (dir2 === \"TB\") {\n      return defaultPos;\n    } else if (dir2 === \"BT\") {\n      const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n      return currentPosition.y - COMMIT_STEP;\n    } else {\n      return 0;\n    }\n  }\n  return 0;\n}, \"calculatePosition\");\nvar getCommitPosition = /* @__PURE__ */ __name((commit2, pos, isParallelCommits) => {\n  const posWithOffset = dir === \"BT\" && isParallelCommits ? pos : pos + LAYOUT_OFFSET;\n  const y = dir === \"TB\" || dir === \"BT\" ? posWithOffset : branchPos.get(commit2.branch)?.pos;\n  const x = dir === \"TB\" || dir === \"BT\" ? branchPos.get(commit2.branch)?.pos : posWithOffset;\n  if (x === void 0 || y === void 0) {\n    throw new Error(`Position were undefined for commit ${commit2.id}`);\n  }\n  return { x, y, posWithOffset };\n}, \"getCommitPosition\");\nvar drawCommits = /* @__PURE__ */ __name((svg, commits, modifyGraph) => {\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const gBullets = svg.append(\"g\").attr(\"class\", \"commit-bullets\");\n  const gLabels = svg.append(\"g\").attr(\"class\", \"commit-labels\");\n  let pos = dir === \"TB\" || dir === \"BT\" ? defaultPos : 0;\n  const keys = [...commits.keys()];\n  const isParallelCommits = DEFAULT_GITGRAPH_CONFIG2?.parallelCommits ?? false;\n  const sortKeys = /* @__PURE__ */ __name((a, b) => {\n    const seqA = commits.get(a)?.seq;\n    const seqB = commits.get(b)?.seq;\n    return seqA !== void 0 && seqB !== void 0 ? seqA - seqB : 0;\n  }, \"sortKeys\");\n  let sortedKeys = keys.sort(sortKeys);\n  if (dir === \"BT\") {\n    if (isParallelCommits) {\n      setParallelBTPos(sortedKeys, commits, pos);\n    }\n    sortedKeys = sortedKeys.reverse();\n  }\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (isParallelCommits) {\n      pos = calculatePosition(commit2, dir, pos, commitPos);\n    }\n    const commitPosition = getCommitPosition(commit2, pos, isParallelCommits);\n    if (modifyGraph) {\n      const typeClass = getCommitClassType(commit2);\n      const commitSymbolType = commit2.customType ?? commit2.type;\n      const branchIndex = branchPos.get(commit2.branch)?.index ?? 0;\n      drawCommitBullet(gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType);\n      drawCommitLabel(gLabels, commit2, commitPosition, pos);\n      drawCommitTags(gLabels, commit2, commitPosition, pos);\n    }\n    if (dir === \"TB\" || dir === \"BT\") {\n      commitPos.set(commit2.id, { x: commitPosition.x, y: commitPosition.posWithOffset });\n    } else {\n      commitPos.set(commit2.id, { x: commitPosition.posWithOffset, y: commitPosition.y });\n    }\n    pos = dir === \"BT\" && isParallelCommits ? pos + COMMIT_STEP : pos + COMMIT_STEP + LAYOUT_OFFSET;\n    if (pos > maxPos) {\n      maxPos = pos;\n    }\n  });\n}, \"drawCommits\");\nvar shouldRerouteArrow = /* @__PURE__ */ __name((commitA, commitB, p1, p2, allCommits) => {\n  const commitBIsFurthest = dir === \"TB\" || dir === \"BT\" ? p1.x < p2.x : p1.y < p2.y;\n  const branchToGetCurve = commitBIsFurthest ? commitB.branch : commitA.branch;\n  const isOnBranchToGetCurve = /* @__PURE__ */ __name((x) => x.branch === branchToGetCurve, \"isOnBranchToGetCurve\");\n  const isBetweenCommits = /* @__PURE__ */ __name((x) => x.seq > commitA.seq && x.seq < commitB.seq, \"isBetweenCommits\");\n  return [...allCommits.values()].some((commitX) => {\n    return isBetweenCommits(commitX) && isOnBranchToGetCurve(commitX);\n  });\n}, \"shouldRerouteArrow\");\nvar findLane = /* @__PURE__ */ __name((y1, y2, depth = 0) => {\n  const candidate = y1 + Math.abs(y1 - y2) / 2;\n  if (depth > 5) {\n    return candidate;\n  }\n  const ok = lanes.every((lane) => Math.abs(lane - candidate) >= 10);\n  if (ok) {\n    lanes.push(candidate);\n    return candidate;\n  }\n  const diff = Math.abs(y1 - y2);\n  return findLane(y1, y2 - diff / 5, depth + 1);\n}, \"findLane\");\nvar drawArrow = /* @__PURE__ */ __name((svg, commitA, commitB, allCommits) => {\n  const p1 = commitPos.get(commitA.id);\n  const p2 = commitPos.get(commitB.id);\n  if (p1 === void 0 || p2 === void 0) {\n    throw new Error(`Commit positions not found for commits ${commitA.id} and ${commitB.id}`);\n  }\n  const arrowNeedsRerouting = shouldRerouteArrow(commitA, commitB, p1, p2, allCommits);\n  let arc = \"\";\n  let arc2 = \"\";\n  let radius = 0;\n  let offset = 0;\n  let colorClassNum = branchPos.get(commitB.branch)?.index;\n  if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n    colorClassNum = branchPos.get(commitA.branch)?.index;\n  }\n  let lineDef;\n  if (arrowNeedsRerouting) {\n    arc = \"A 10 10, 0, 0, 0,\";\n    arc2 = \"A 10 10, 0, 0, 1,\";\n    radius = 10;\n    offset = 10;\n    const lineY = p1.y < p2.y ? findLane(p1.y, p2.y) : findLane(p2.y, p1.y);\n    const lineX = p1.x < p2.x ? findLane(p1.x, p2.x) : findLane(p2.x, p1.x);\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc2} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc2} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc2} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc2} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY - radius} ${arc} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc2} ${p2.x} ${lineY + offset} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY + radius} ${arc2} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc} ${p2.x} ${lineY - offset} L ${p2.x} ${p2.y}`;\n      }\n    }\n  } else {\n    arc = \"A 20 20, 0, 0, 0,\";\n    arc2 = \"A 20 20, 0, 0, 1,\";\n    radius = 20;\n    offset = 20;\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc2} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x + radius} ${p1.y} ${arc} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y > p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y === p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    }\n  }\n  if (lineDef === void 0) {\n    throw new Error(\"Line definition not found\");\n  }\n  svg.append(\"path\").attr(\"d\", lineDef).attr(\"class\", \"arrow arrow\" + colorClassNum % THEME_COLOR_LIMIT);\n}, \"drawArrow\");\nvar drawArrows = /* @__PURE__ */ __name((svg, commits) => {\n  const gArrows = svg.append(\"g\").attr(\"class\", \"commit-arrows\");\n  [...commits.keys()].forEach((key) => {\n    const commit2 = commits.get(key);\n    if (commit2.parents && commit2.parents.length > 0) {\n      commit2.parents.forEach((parent) => {\n        drawArrow(gArrows, commits.get(parent), commit2, commits);\n      });\n    }\n  });\n}, \"drawArrows\");\nvar drawBranches = /* @__PURE__ */ __name((svg, branches) => {\n  const g = svg.append(\"g\");\n  branches.forEach((branch2, index) => {\n    const adjustIndexForTheme = index % THEME_COLOR_LIMIT;\n    const pos = branchPos.get(branch2.name)?.pos;\n    if (pos === void 0) {\n      throw new Error(`Position not found for branch ${branch2.name}`);\n    }\n    const line = g.append(\"line\");\n    line.attr(\"x1\", 0);\n    line.attr(\"y1\", pos);\n    line.attr(\"x2\", maxPos);\n    line.attr(\"y2\", pos);\n    line.attr(\"class\", \"branch branch\" + adjustIndexForTheme);\n    if (dir === \"TB\") {\n      line.attr(\"y1\", defaultPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", maxPos);\n      line.attr(\"x2\", pos);\n    } else if (dir === \"BT\") {\n      line.attr(\"y1\", maxPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", defaultPos);\n      line.attr(\"x2\", pos);\n    }\n    lanes.push(pos);\n    const name = branch2.name;\n    const labelElement = drawText(name);\n    const bkg = g.insert(\"rect\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\" + adjustIndexForTheme);\n    label.node().appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    bkg.attr(\"class\", \"branchLabelBkg label\" + adjustIndexForTheme).attr(\"rx\", 4).attr(\"ry\", 4).attr(\"x\", -bbox.width - 4 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)).attr(\"y\", -bbox.height / 2 + 8).attr(\"width\", bbox.width + 18).attr(\"height\", bbox.height + 4);\n    label.attr(\n      \"transform\",\n      \"translate(\" + (-bbox.width - 14 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)) + \", \" + (pos - bbox.height / 2 - 1) + \")\"\n    );\n    if (dir === \"TB\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", 0);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", 0)\");\n    } else if (dir === \"BT\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", maxPos);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", \" + maxPos + \")\");\n    } else {\n      bkg.attr(\"transform\", \"translate(-19, \" + (pos - bbox.height / 2) + \")\");\n    }\n  });\n}, \"drawBranches\");\nvar setBranchPosition = /* @__PURE__ */ __name(function(name, pos, index, bbox, rotateCommitLabel) {\n  branchPos.set(name, { pos, index });\n  pos += 50 + (rotateCommitLabel ? 40 : 0) + (dir === \"TB\" || dir === \"BT\" ? bbox.width / 2 : 0);\n  return pos;\n}, \"setBranchPosition\");\nvar draw = /* @__PURE__ */ __name(function(txt, id, ver, diagObj) {\n  clear3();\n  log.debug(\"in gitgraph renderer\", txt + \"\\n\", \"id:\", id, ver);\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const rotateCommitLabel = DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel ?? false;\n  const db2 = diagObj.db;\n  allCommitsDict = db2.getCommits();\n  const branches = db2.getBranchesAsObjArray();\n  dir = db2.getDirection();\n  const diagram2 = select(`[id=\"${id}\"]`);\n  let pos = 0;\n  branches.forEach((branch2, index) => {\n    const labelElement = drawText(branch2.name);\n    const g = diagram2.append(\"g\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\");\n    label.node()?.appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    pos = setBranchPosition(branch2.name, pos, index, bbox, rotateCommitLabel);\n    label.remove();\n    branchLabel.remove();\n    g.remove();\n  });\n  drawCommits(diagram2, allCommitsDict, false);\n  if (DEFAULT_GITGRAPH_CONFIG2.showBranches) {\n    drawBranches(diagram2, branches);\n  }\n  drawArrows(diagram2, allCommitsDict);\n  drawCommits(diagram2, allCommitsDict, true);\n  utils_default.insertTitle(\n    diagram2,\n    \"gitTitleText\",\n    DEFAULT_GITGRAPH_CONFIG2.titleTopMargin ?? 0,\n    db2.getDiagramTitle()\n  );\n  setupGraphViewbox(\n    void 0,\n    diagram2,\n    DEFAULT_GITGRAPH_CONFIG2.diagramPadding,\n    DEFAULT_GITGRAPH_CONFIG2.useMaxWidth\n  );\n}, \"draw\");\nvar gitGraphRenderer_default = {\n  draw\n};\nif (void 0) {\n  const { it, expect, describe } = void 0;\n  describe(\"drawText\", () => {\n    it(\"should drawText\", () => {\n      const svgLabel = drawText(\"main\");\n      expect(svgLabel).toBeDefined();\n      expect(svgLabel.children[0].innerHTML).toBe(\"main\");\n    });\n  });\n  describe(\"branchPosition\", () => {\n    const bbox = {\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      toJSON: /* @__PURE__ */ __name(() => \"\", \"toJSON\")\n    };\n    it(\"should setBranchPositions LR with two branches\", () => {\n      dir = \"LR\";\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(90);\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(180);\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\n    });\n    it(\"should setBranchPositions TB with two branches\", () => {\n      dir = \"TB\";\n      bbox.width = 34.9921875;\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(107.49609375);\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\n      bbox.width = 56.421875;\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(225.70703125);\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\n    });\n  });\n  describe(\"commitPosition\", () => {\n    const commits = /* @__PURE__ */ new Map([\n      [\n        \"commitZero\",\n        {\n          id: \"ZERO\",\n          message: \"\",\n          seq: 0,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"commitA\",\n        {\n          id: \"A\",\n          message: \"\",\n          seq: 1,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"ZERO\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"commitB\",\n        {\n          id: \"B\",\n          message: \"\",\n          seq: 2,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"A\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"commitM\",\n        {\n          id: \"M\",\n          message: \"merged branch feature into main\",\n          seq: 3,\n          type: commitType.MERGE,\n          tags: [],\n          parents: [\"ZERO\", \"B\"],\n          branch: \"main\",\n          customId: true\n        }\n      ],\n      [\n        \"commitC\",\n        {\n          id: \"C\",\n          message: \"\",\n          seq: 4,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"ZERO\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commit5_8928ea0\",\n        {\n          id: \"5-8928ea0\",\n          message: \"cherry-picked [object Object] into release\",\n          seq: 5,\n          type: commitType.CHERRY_PICK,\n          tags: [],\n          parents: [\"C\", \"M\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commitD\",\n        {\n          id: \"D\",\n          message: \"\",\n          seq: 6,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"5-8928ea0\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commit7_ed848ba\",\n        {\n          id: \"7-ed848ba\",\n          message: \"cherry-picked [object Object] into release\",\n          seq: 7,\n          type: commitType.CHERRY_PICK,\n          tags: [],\n          parents: [\"D\", \"M\"],\n          branch: \"release\"\n        }\n      ]\n    ]);\n    let pos = 0;\n    branchPos.set(\"main\", { pos: 0, index: 0 });\n    branchPos.set(\"feature\", { pos: 107.49609375, index: 1 });\n    branchPos.set(\"release\", { pos: 224.03515625, index: 2 });\n    describe(\"TB\", () => {\n      pos = 30;\n      dir = \"TB\";\n      const expectedCommitPositionTB = /* @__PURE__ */ new Map([\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos, false);\n          expect(position).toEqual(expectedCommitPositionTB.get(key));\n          pos += 50;\n        });\n      });\n    });\n    describe(\"LR\", () => {\n      let pos2 = 30;\n      dir = \"LR\";\n      const expectedCommitPositionLR = /* @__PURE__ */ new Map([\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos2, false);\n          expect(position).toEqual(expectedCommitPositionLR.get(key));\n          pos2 += 50;\n        });\n      });\n    });\n    describe(\"getCommitClassType\", () => {\n      const expectedCommitClassType = /* @__PURE__ */ new Map([\n        [\"commitZero\", \"commit-normal\"],\n        [\"commitA\", \"commit-normal\"],\n        [\"commitB\", \"commit-normal\"],\n        [\"commitM\", \"commit-merge\"],\n        [\"commitC\", \"commit-normal\"],\n        [\"commit5_8928ea0\", \"commit-cherry-pick\"],\n        [\"commitD\", \"commit-normal\"],\n        [\"commit7_ed848ba\", \"commit-cherry-pick\"]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct class type for commit ${key}`, () => {\n          const classType = getCommitClassType(commit2);\n          expect(classType).toBe(expectedCommitClassType.get(key));\n        });\n      });\n    });\n  });\n  describe(\"building BT parallel commit diagram\", () => {\n    const commits = /* @__PURE__ */ new Map([\n      [\n        \"1-abcdefg\",\n        {\n          id: \"1-abcdefg\",\n          message: \"\",\n          seq: 0,\n          type: 0,\n          tags: [],\n          parents: [],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"2-abcdefg\",\n        {\n          id: \"2-abcdefg\",\n          message: \"\",\n          seq: 1,\n          type: 0,\n          tags: [],\n          parents: [\"1-abcdefg\"],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"3-abcdefg\",\n        {\n          id: \"3-abcdefg\",\n          message: \"\",\n          seq: 2,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"develop\"\n        }\n      ],\n      [\n        \"4-abcdefg\",\n        {\n          id: \"4-abcdefg\",\n          message: \"\",\n          seq: 3,\n          type: 0,\n          tags: [],\n          parents: [\"3-abcdefg\"],\n          branch: \"develop\"\n        }\n      ],\n      [\n        \"5-abcdefg\",\n        {\n          id: \"5-abcdefg\",\n          message: \"\",\n          seq: 4,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"6-abcdefg\",\n        {\n          id: \"6-abcdefg\",\n          message: \"\",\n          seq: 5,\n          type: 0,\n          tags: [],\n          parents: [\"5-abcdefg\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"7-abcdefg\",\n        {\n          id: \"7-abcdefg\",\n          message: \"\",\n          seq: 6,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"8-abcdefg\",\n        {\n          id: \"8-abcdefg\",\n          message: \"\",\n          seq: 7,\n          type: 0,\n          tags: [],\n          parents: [\"7-abcdefg\"],\n          branch: \"main\"\n        }\n      ]\n    ]);\n    const expectedCommitPosition = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", { x: 0, y: 40 }],\n      [\"2-abcdefg\", { x: 0, y: 90 }],\n      [\"3-abcdefg\", { x: 107.49609375, y: 140 }],\n      [\"4-abcdefg\", { x: 107.49609375, y: 190 }],\n      [\"5-abcdefg\", { x: 225.70703125, y: 140 }],\n      [\"6-abcdefg\", { x: 225.70703125, y: 190 }],\n      [\"7-abcdefg\", { x: 0, y: 140 }],\n      [\"8-abcdefg\", { x: 0, y: 190 }]\n    ]);\n    const expectedCommitPositionAfterParallel = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", { x: 0, y: 210 }],\n      [\"2-abcdefg\", { x: 0, y: 160 }],\n      [\"3-abcdefg\", { x: 107.49609375, y: 110 }],\n      [\"4-abcdefg\", { x: 107.49609375, y: 60 }],\n      [\"5-abcdefg\", { x: 225.70703125, y: 110 }],\n      [\"6-abcdefg\", { x: 225.70703125, y: 60 }],\n      [\"7-abcdefg\", { x: 0, y: 110 }],\n      [\"8-abcdefg\", { x: 0, y: 60 }]\n    ]);\n    const expectedCommitCurrentPosition = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", 30],\n      [\"2-abcdefg\", 80],\n      [\"3-abcdefg\", 130],\n      [\"4-abcdefg\", 180],\n      [\"5-abcdefg\", 130],\n      [\"6-abcdefg\", 180],\n      [\"7-abcdefg\", 130],\n      [\"8-abcdefg\", 180]\n    ]);\n    const sortedKeys = [...expectedCommitPosition.keys()];\n    it(\"should get the correct commit position and current position\", () => {\n      dir = \"BT\";\n      let curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", { pos: 0, index: 0 });\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\n      DEFAULT_GITGRAPH_CONFIG2.parallelCommits = true;\n      commits.forEach((commit2, key) => {\n        if (commit2.parents.length > 0) {\n          curPos = calculateCommitPosition(commit2);\n        }\n        const position = setCommitPosition(commit2, curPos);\n        expect(position).toEqual(expectedCommitPosition.get(key));\n        expect(curPos).toEqual(expectedCommitCurrentPosition.get(key));\n      });\n    });\n    it(\"should get the correct commit position after parallel commits\", () => {\n      commitPos.clear();\n      branchPos.clear();\n      dir = \"BT\";\n      const curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", { pos: 0, index: 0 });\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\n      setParallelBTPos(sortedKeys, commits, curPos);\n      sortedKeys.forEach((commit2) => {\n        const position = commitPos.get(commit2);\n        expect(position).toEqual(expectedCommitPositionAfterParallel.get(commit2));\n      });\n    });\n  });\n  DEFAULT_GITGRAPH_CONFIG2.parallelCommits = false;\n  it(\"add\", () => {\n    commitPos.set(\"parent1\", { x: 1, y: 1 });\n    commitPos.set(\"parent2\", { x: 2, y: 2 });\n    commitPos.set(\"parent3\", { x: 3, y: 3 });\n    dir = \"LR\";\n    const parents = [\"parent1\", \"parent2\", \"parent3\"];\n    const closestParent = findClosestParent(parents);\n    expect(closestParent).toBe(\"parent3\");\n    commitPos.clear();\n  });\n}\n\n// src/diagrams/git/styles.js\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0, 1, 2, 3, 4, 5, 6, 7].map(\n  (i) => `\n        .branch-label${i} { fill: ${options[\"gitBranchLabel\" + i]}; }\n        .commit${i} { stroke: ${options[\"git\" + i]}; fill: ${options[\"git\" + i]}; }\n        .commit-highlight${i} { stroke: ${options[\"gitInv\" + i]}; fill: ${options[\"gitInv\" + i]}; }\n        .label${i}  { fill: ${options[\"git\" + i]}; }\n        .arrow${i} { stroke: ${options[\"git\" + i]}; }\n        `\n).join(\"\\n\")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${options.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelColor};}\n  .commit-label-bkg { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${options.tagLabelFontSize}; fill: ${options.tagLabelColor};}\n  .tag-label-bkg { fill: ${options.tagLabelBackground}; stroke: ${options.tagLabelBorder}; }\n  .tag-hole { fill: ${options.textColor}; }\n\n  .commit-merge {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`, \"getStyles\");\nvar styles_default = getStyles;\n\n// src/diagrams/git/gitGraphDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer: gitGraphRenderer_default,\n  styles: styles_default\n};\nexport {\n  diagram\n};\n"],"names":["Map","r","Object","JSON","c","t","Error","s","Array","Boolean","e","parseFloat","D","document","Math","a"],"mappings":"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"}